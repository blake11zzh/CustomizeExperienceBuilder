"use strict";(self.webpackChunkafd_experience_builder_doc=self.webpackChunkafd_experience_builder_doc||[]).push([[2004],{53463:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});var l=n(28453),a=n(96540);function i(e){const t=Object.assign({p:"p",ul:"ul",li:"li",a:"a",h2:"h2",span:"span",code:"code",ol:"ol",h3:"h3",pre:"pre"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"ArcGIS Experience Builder is built with React and the ArcGIS Maps SDK for JavaScript. It allows you to create custom widgets for your specific workflows.\nTo create your own widgets, you will need a basic understanding of the following:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://www.typescriptlang.org/"},"TypeScript")," is a superset of JavaScript. TypeScript is the language used to develop widgets."),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://reactjs.org/"},"React")," is a JavaScript library for creating user interfaces. React is an abstraction away from the DOM; it encourages you to think of your application and UI in various states and render those states to make it easy to keep your UI consistent."),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://reactjs.org/docs/introducing-jsx.html"},"JSX")," is a JavaScript extension syntax that allows you to describe what the widget's UI’s should look like through React."),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://developers.arcgis.com/experience-builder/api-reference/"},"Jimu")," is Experience Builder’s JavaScript library used to create widgets."),"\n"),"\n",a.createElement(t.h2,{id:"installation",className:"group relative s:flex s:flex-nowrap"},"Installation",a.createElement(t.a,{href:"#installation","aria-label":"installation permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"Experience Builder is available as a ZIP file for installation. For more details, please review the ",a.createElement(t.a,{href:"/experience-builder/guide/install-guide/"},"installation page"),"."),"\n",a.createElement(t.h2,{id:"setting-up-a-widget-development-environment",className:"group relative s:flex s:flex-nowrap"},"Setting up a widget development environment",a.createElement(t.a,{href:"#setting-up-a-widget-development-environment","aria-label":"setting up a widget development environment permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"For developing a custom widget, you can use any IDE or text editor that you are comfortable with. ",a.createElement(t.a,{href:"https://code.visualstudio.com/"},"Visual Studio Code")," is a good option because it has TypeScript awareness built-in by default."),"\n",a.createElement(t.p,null,"The custom widget that you build will be located within a directory in the ",a.createElement(t.code,null,"client")," folder of the ArcGIS Experience Builder file structure. Within Visual Studio Code, open the ",a.createElement(t.code,null,"client")," folder as a project:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Click the ",a.createElement(t.code,null,"File")," menu."),"\n",a.createElement(t.li,null,"Click ",a.createElement(t.code,null,"Open Folder"),"."),"\n",a.createElement(t.li,null,"Browse to the ",a.createElement(t.code,null,"client")," folder within the extracted Experience Builder files you unzipped when you started Experience Builder for the first time."),"\n"),"\n",a.createElement(t.p,null,"This will make all the files in the ",a.createElement(t.code,null,"client")," folder (including your custom widget files) available in the left-hand VS Code Explorer tab. Visual Studio Code will also scan the entire contents of the ",a.createElement(t.code,null,"client")," folder for TypeScript definitions of the Experience Builder libraries, enabling TypeScript validation and autocomplete while writing your custom widget."),"\n",a.createElement(t.h3,{id:"visual-studio-code",className:"group relative s:flex s:flex-nowrap"},"Visual Studio Code",a.createElement(t.a,{href:"#visual-studio-code","aria-label":"visual studio code permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"If you are using Visual Studio Code as a text editor, there is an ",a.createElement(t.a,{href:"https://code.visualstudio.com/docs/editor/extension-gallery"},"extension marketplace")," you can use to add functionality to the text editor. In addition to any React extensions that you may want to install, these extensions are recommended (not required) for Experience Builder custom widget development:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion"},"IntelliSense for CSS class names in HTML")," - CSS class name completion for the HTML class attribute based on the definitions found in your workspace."),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components"},"vscode-styled-components")," - Syntax highlighting for styled-components"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"},"ESLint")," - Integrates ESLint into VS Code."),"\n"),"\n",a.createElement(t.h2,{id:"widget",className:"group relative s:flex s:flex-nowrap"},"Widget",a.createElement(t.a,{href:"#widget","aria-label":"widget permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"A widget is a configurable and sharable functional unit in Experience Builder. Basically, a widget is a React component injected with these common properties by the jimu framework:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Configurations for widget, such as id, label, config, etc."),"\n",a.createElement(t.li,null,"Runtime information about the widget including state, isClassLoaded, etc."),"\n",a.createElement(t.li,null,"Local language strings"),"\n",a.createElement(t.li,null,"Data source instance and status information"),"\n",a.createElement(t.li,null,"URL parameter information"),"\n"),"\n",a.createElement(t.h3,{id:"widget-location",className:"group relative s:flex s:flex-nowrap"},"Widget location",a.createElement(t.a,{href:"#widget-location","aria-label":"widget location permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"Custom widgets are placed within an Experience Builder web extension repo. A web extension repo is a folder within the ",a.createElement(t.code,null,"client")," folder that contains a ",a.createElement(t.code,null,"manifest.json")," file with contents:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-json"},'{\n  "name": "my-web-extension-repo",\n  "type": "exb-web-extension-repo",\n  "description": "This is a sample extension repository.",\n  "copyright": "",\n  "license": ""\n}\n')),"\n",a.createElement(t.p,null,"Developer edition of Experience Builder comes with an example web extension repo located at ",a.createElement(t.code,null,"client/your-extensions"),". You may use this one or create your own. Using your own may work better when utilizing source code repository systems like Git. When creating your own, you may see errors reported by your code editor, like missing type declarations for Jimu modules. To fix this, add the folder of the web extension repo to the ",a.createElement(t.code,null,"include")," array within the ",a.createElement(t.code,null,"tsconfig.json")," file like this:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-json"},'{\n  "include": [\n    "dist/widgets",\n    "your-extensions",\n    "types",\n    "jimu-core/lib/types",\n    /** ADD the name of your web extension repo folder: **/\n    "my-web-extension-repo"\n  ],\n}\n')),"\n",a.createElement(t.h3,{id:"widget-files",className:"group relative s:flex s:flex-nowrap"},"Widget files",a.createElement(t.a,{href:"#widget-files","aria-label":"widget files permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"At the root of the web extension repo are two folders: ",a.createElement(t.code,null,"widgets")," and ",a.createElement(t.code,null,"themes"),". To create a custom widget, create a new folder within the ",a.createElement(t.code,null,"widgets")," folder with the name of the custom widget. All the files for the custom widget will be placed into this new folder."),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,"- my-web-extension-repo/\n    - manifest.json\n    - themes/\n    - widgets/\n        - my-custom-widget/\n")),"\n",a.createElement(t.p,null,"Within the widget folder, a valid widget must contain a ",a.createElement(t.code,null,"manifest.json")," file and other required files."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"For more details on the ",a.createElement(t.code,null,"manifest.json")," file, see ",a.createElement(t.a,{href:"/experience-builder/guide/widget-manifest/"},"widget manifest"),"."),"\n",a.createElement(t.li,null,"For more details on other required files and general widget development, learn about ",a.createElement(t.a,{href:"/experience-builder/guide/extend-base-widget/"},"widget implementation"),"."),"\n",a.createElement(t.li,null,"To get started quickly with the minimal set of files required, see the ",a.createElement(t.code,null,"simple")," widget in the ",a.createElement(t.code,null,"your-extensions\\widgets")," folder."),"\n"),"\n",a.createElement(t.h2,{id:"just-the-basics",className:"group relative s:flex s:flex-nowrap"},"Just the Basics",a.createElement(t.a,{href:"#just-the-basics","aria-label":"just the basics permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"If you're new to Experience Builder development and want to understand the basic concepts, check out the following:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/experience-builder/guide/core-concepts/"},"Core concepts")),"\n",a.createElement(t.li,null,"If you learn best by looking at code, ",a.createElement(t.a,{href:"/experience-builder/sample-code/"},"review our samples")," and ",a.createElement(t.a,{href:"https://github.com/esri/arcgis-experience-builder-sdk-resources"},"clone the repo"),"."),"\n"))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(i,e)):i(e)},o=n(69507),c=n(46427);const s=function(e){const{data:{topicNavigation:t}}=e;return a.createElement(o.A,null,a.createElement(c.S,Object.assign({},e,{topicNavigation:t,wrapInLayout:!1})))};function u(e){return a.createElement(s,e,a.createElement(r,e))}}}]);