(self.webpackChunkarcgis_experience_builder_design_system=self.webpackChunkarcgis_experience_builder_design_system||[]).push([[6428],{"../builder/help-doc.json":module=>{"use strict";module.exports=JSON.parse('{"online":{"home":"#","get-started":{"prefix":"get-started/","what-is-arcgis-experience-builder":"what-is-arcgis-experience-builder.htm","whats-new":"whats-new.htm"},"build-apps":{"prefix":"build-apps/","add-a-page":"add-a-page.htm","add-a-dialog":"add-windows.htm","add-utility-services":"add-utility-services.htm","add-custom-widgets":"getting-started-widget.htm","add-screen-groups":"add-screen-groups.htm","express-mode":"express-mode.htm","select-data":"select-data.htm","change-app-theme":"change-app-theme.htm","general-settings":"general-settings.htm"},"widgets":{"prefix":"configure-widgets/","overview":"widgets-overview.htm","3d-toolbox":"3d-toolbox-widget.htm","accordion":"accordion-widget.htm","add-data":"add-data-widget.htm","analysis":"analysis-widget.htm","arcgis-map":"map-widget.htm","basemap-gallery":"basemap-gallery-widget.htm","ba-infographic":"business-analyst-infographic-widget.htm","bookmark":"bookmark-widget.htm","branch-version-management":"branch-version-management-widget.htm","button":"button-widget.htm","building-explorer":"building-explorer-widget.htm","card":"card-widget.htm","chart":"chart-widget.htm","column":"column-widget.htm","controller":"widget-controller-widget.htm","coordinates":"coordinates-widget.htm","coordinate-conversion":"coordinate-conversion-widget.htm","divider":"divider-widget.htm","draw":"draw-widget.htm","directions":"directions-widget.htm","edit":"edit-widget.htm","elevation-profile":"elevation-profile-widget.htm","embed":"embed-widget.htm","feature-info":"feature-info-widget.htm","feature-report":"feature-report-widget.htm","filter":"filter-widget.htm","fixed":"fixed-panel-widget.htm","floor-filter":"floor-filter-widget.htm","flowrow":"flow-row-widget.htm","fly-controller":"fly-controller-widget.htm","grid":"grid-widget.htm","image":"image-widget.htm","legend":"legend-widget.htm","list":"list-widget.htm","map-layers":"map-layers-widget.htm","measurement":"measurement-widget.htm","menu":"menu-widget.htm","navigator":"view-navigation-widget.htm","near-me":"near-me-widget.htm","classic-oriented-imagery":"classic-oriented-imagery-widget.htm","oriented-imagery-viewer":"oriented-imagery-viewer-widget.htm","placeholder":"placeholder-widget.htm","print":"print-widget.htm","processing-templates":"processing-templates-widget.htm","query":"query-widget.htm","row":"row-widget.htm","search":"search-widget.htm","section":"section-widget.htm","select":"select-widget.htm","share":"share-widget.htm","sidebar":"sidebar-widget.htm","suitability-modeler":"suitability-modeler-widget.htm","survey123":"survey-widget.htm","swipe":"swipe-widget.htm","table":"table-widget.htm","text":"text-widget.htm","timeline":"timeline-widget.htm","my-location":"my-location-widget.htm","utility-network-trace":"utility-network-trace-widget.htm"}},"portal":{"home":"120001864","get-started":{"what-is-arcgis-experience-builder":"120001877","whats-new":"120002535"},"build-apps":{"add-a-page":"120001863","add-a-dialog":"120002539","add-utility-services":"120003733","add-custom-widgets":"120003728","add-screen-groups":"120002592","express-mode":"120005009","select-data":"120002590","change-app-theme":"120004139","general-settings":"120004779"},"widgets":{"overview":"#","3d-toolbox":"120003734","accordion":"120004999","add-data":"120004128","analysis":"120004647","arcgis-map":"120001851","basemap-gallery":"120004168","bookmark":"120002536","button":"120001841","building-explorer":"120004868","branch-version-management":"120002654","ba-infographic":"120003631","card":"120002537","chart":"120002727","column":"120001842","controller":"120001862","coordinates":"120003879","coordinate-conversion":"120002728","divider":"120002538","draw":"120003632","directions":"120003635","edit":"120002844","elevation-profile":"120002905","embed":"120001843","feature-info":"120001844","feature-report":"120004895","filter":"120001845","fixed":"120001846","floor-filter":"120003634","flowrow":"120005055","fly-controller":"120001847","grid":"120003880","image":"120001848","legend":"120001849","list":"120001850","map-layers":"120001852","measurement":"120004869","menu":"120001853","navigator":"120001861","near-me":"120004170","classic-oriented-imagery":"120002843","oriented-imagery-viewer":"120005053","placeholder":"120001854","print":"120003716","processing-templates":"120005054","query":"120002729","row":"120001855","search":"120002845","section":"120001856","select":"120004732","share":"120001857","sidebar":"120001858","suitability-modeler":"120002906","survey123":"120001859","swipe":"120004169","table":"120002591","text":"120001860","timeline":"120003717","my-location":"120004870","utility-network-trace":"120003633","add-line-event":"120004827","add-point-event":"120004828","dynamic-segmentation":"120004989","identify":"120004829","merge-events":"120004830","search-by-route":"120004831","split-event":"120004832"}},"dev":{"home":"#","get-started":{"prefix":"guide/","what-is-arcgis-experience-builder":"getting-started-widget","whats-new":"whats-new"},"build-apps":{"prefix":"guide/","add-a-page":"add-a-page","add-a-dialog":"add-windows","add-utility-services":"add-utility-services","add-custom-widgets":"getting-started-widget","add-screen-groups":"add-screen-groups","express-mode":"express-mode","select-data":"select-data","change-app-theme":"change-app-theme","general-settings":"general-settings"},"widgets":{"prefix":"guide/","overview":"widgets-overview","3d-toolbox":"3d-toolbox-widget","accordion":"accordion-widget","add-data":"add-data-widget","analysis":"analysis-widget","arcgis-map":"map-widget","basemap-gallery":"basemap-gallery-widget","ba-infographic":"business-analyst-infographic-widget","bookmark":"bookmark-widget","branch-version-management":"branch-version-management-widget","button":"button-widget","building-explorer":"building-explorer-widget","card":"card-widget","chart":"chart-widget","column":"column-widget","controller":"widget-controller-widget","coordinates":"coordinates-widget","coordinate-conversion":"coordinate-conversion-widget","divider":"divider-widget","draw":"draw-widget","directions":"directions-widget","edit":"edit-widget","elevation-profile":"elevation-profile-widget","embed":"embed-widget","feature-info":"feature-info-widget","feature-report":"feature-report-widget","filter":"filter-widget","fixed":"fixed-panel-widget","floor-filter":"floor-filter-widget","flowrow":"flow-row-widget","fly-controller":"fly-controller-widget","grid":"grid-widget","image":"image-widget","legend":"legend-widget","list":"list-widget","map-layers":"map-layers-widget","measurement":"measurement-widget","menu":"menu-widget","navigator":"view-navigation-widget","near-me":"near-me-widget","classic-oriented-imagery":"classic-oriented-imagery-widget","oriented-imagery-viewer":"oriented-imagery-viewer-widget","placeholder":"placeholder-widget","print":"print-widget","processing-templates":"processing-templates-widget","query":"query-widget","row":"row-widget","search":"search-widget","section":"section-widget","select":"select-widget","share":"share-widget","sidebar":"sidebar-widget","suitability-modeler":"suitability-modeler-widget","survey123":"survey-widget","swipe":"swipe-widget","table":"table-widget","text":"text-widget","timeline":"timeline-widget","my-location":"my-location-widget","utility-network-trace":"utility-network-trace-widget","add-line-event":"add-line-event-widget","add-point-event":"add-point-event-widget","dynamic-segmentation":"dynamic-segmentation-widget","identify":"identify-widget","merge-events":"merge-events-widget","search-by-route":"search-by-route-widget","split-event":"split-event-widget"}}}')},"../jimu-for-builder/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppConfigAction:()=>AppConfigAction,AppDataActionManager:()=>AppDataActionManager,AppMessageManager:()=>AppMessageManager,AppResourceFilePath:()=>AppResourceFilePath,AppResourceManager:()=>app_resource_manager_AppResourceManager,AppStateHistoryActionKeys:()=>app_state_history_extension_ActionKeys,AppStateHistoryExtension:()=>AppStateHistoryExtension,AppStateReduxStoreExtension:()=>BuilderAppStateReduxStoreExtension,AppWidgetManager:()=>AppWidgetManager,BaseLayoutService:()=>BaseLayoutService,BaseWidgetSetting:()=>base_widget_setting,BuilderKeyboardComponent:()=>builder_keyboard_component,BuilderStateActionTypes:()=>ActionKeys,BuilderStateReduxStoreExtension:()=>BuilderStateReduxStoreExtension,BuilderStateResourceActionKeys:()=>builder_state_resource_extension_ActionKeys,BuilderStateResourceExtension:()=>BuilderStateResourceExtension,ChooseConnectionType:()=>choose_connection_type,ContentServiceWrapper:()=>ContentServiceWrapper,ExtActionKeys:()=>ExtActionKeys,LayoutServiceProvider:()=>LayoutServiceProvider,ToBuilderMessage:()=>ToBuilderMessage,UrlConfigManager:()=>url_config_manager,WidgetSettingManager:()=>widget_setting_manager,appBuilderSync:()=>app_builder_sync_namespaceObject,appConfigUtils:()=>app_config_utils_namespaceObject,appStateActions:()=>app_state_redux_store_extension_actions,appStateHistoryActions:()=>app_state_history_extension_actions,builderActionKeys:()=>ActionKeys,builderActions:()=>actions,builderAppSync:()=>builder_app_sync_namespaceObject,builderStateResourceActions:()=>builder_state_resource_extension_actions,dataSourceService:()=>data_source_service,defaultMessages:()=>translations_default.A,emptyContentService:()=>empty_content_service,fullReplaceBlobUrl:()=>fullReplaceBlobUrl,getAppConfigAction:()=>app_config_actions_getAppConfigAction,helpUtils:()=>help_utils_namespaceObject,init:()=>init,loadI18nMessage:()=>loadI18nMessage,makeSureTemplateConfig:()=>util_makeSureTemplateConfig,messageActionUtils:()=>utils_utils_namespaceObject,placeholderService:()=>placeholder_service,screenGroupService:()=>screen_group_service,sectionService:()=>section_service,templateService:()=>template_service,templateUtils:()=>template_utils_namespaceObject,utils:()=>utils_namespaceObject,widgetService:()=>widget_service});var app_config_utils_namespaceObject={};__webpack_require__.r(app_config_utils_namespaceObject),__webpack_require__.d(app_config_utils_namespaceObject,{cleanAppStructure:()=>cleanAppStructure,getCleanAppConfig:()=>getCleanAppConfig,getRealPageCount:()=>getRealPageCount,getRealPageCountExcludeOnePage:()=>getRealPageCountExcludeOnePage,getSizeModeOfALayout:()=>getSizeModeOfALayout,getSubRealPageCount:()=>getSubRealPageCount,getUniqueId:()=>getUniqueId,getUniqueLabel:()=>getUniqueLabel,isFirstLevelPage:()=>isFirstLevelPage,isLabelDuplicated:()=>isLabelDuplicated,isPageHasSubPage:()=>isPageHasSubPage,isRealPage:()=>isRealPage,parseUniqueLabel:()=>parseUniqueLabel});var template_utils_namespaceObject={};__webpack_require__.r(template_utils_namespaceObject),__webpack_require__.d(template_utils_namespaceObject,{getExpressModeTemplateNames:()=>getExpressModeTemplateNames,processForTemplate:()=>processForTemplate});var builder_app_sync_namespaceObject={};__webpack_require__.r(builder_app_sync_namespaceObject),__webpack_require__.d(builder_app_sync_namespaceObject,{listenAppEvents:()=>listenAppEvents,publishActivePagePartChangeToApp:()=>publishActivePagePartChangeToApp,publishAnimationPreviewToApp:()=>publishAnimationPreviewToApp,publishAppConfigChangeToApp:()=>publishAppConfigChangeToApp,publishAppInfoChangeToApp:()=>publishAppInfoChangeToApp,publishAppModeChangeToApp:()=>publishAppModeChangeToApp,publishChangeBrowserSizeModeToApp:()=>publishChangeBrowserSizeModeToApp,publishChangeSelectionToApp:()=>publishChangeSelectionToApp,publishChangeSessionToApp:()=>publishChangeSessionToApp,publishChangeWidgetMutableStatePropToApp:()=>publishChangeWidgetMutableStatePropToApp,publishChangeWidgetStatePropToApp:()=>publishChangeWidgetStatePropToApp,publishChangeZoomScaleToApp:()=>publishChangeZoomScaleToApp,publishDialogChangeToApp:()=>publishDialogChangeToApp,publishDialogInfosChangeToApp:()=>publishDialogInfosChangeToApp,publishHoverPreviewToApp:()=>publishHoverPreviewToApp,publishKeyboardToApp:()=>publishKeyboardToApp,publishNoPermissionResourceInfoListChangeToApp:()=>publishNoPermissionResourceInfoListChangeToApp,publishOpenCookieBannerByPrivacyPanelToApp:()=>publishOpenCookieBannerByPrivacyPanelToApp,publishOpenCookieBannerToApp:()=>publishOpenCookieBannerToApp,publishOpenCookieSettingsWindowToApp:()=>publishOpenCookieSettingsWindowToApp,publishPageChangeToApp:()=>publishPageChangeToApp,publishScreenGroupNavInfoToApp:()=>publishScreenGroupNavInfoToApp,publishSectionNavInfoToApp:()=>publishSectionNavInfoToApp,publishSetClientIdAlertIsCancelled:()=>publishSetClientIdAlertIsCancelled,publishSetWidgetIsInlineEditingStateToApp:()=>publishSetWidgetIsInlineEditingStateToApp,publishTocHoverInfoToApp:()=>publishTocHoverInfoToApp,publishUtilityStateChangeToApp:()=>publishUtilityStateChangeToApp,publishWidgetRuntimeInfoChangeToApp:()=>publishWidgetRuntimeInfoChangeToApp,publishWidgetStateChangeToApp:()=>publishWidgetStateChangeToApp,publishWidgetToolbarStateChangeToApp:()=>publishWidgetToolbarStateChangeToApp});var app_builder_sync_namespaceObject={};__webpack_require__.r(app_builder_sync_namespaceObject),__webpack_require__.d(app_builder_sync_namespaceObject,{clearLastAppConfigFromHistory:()=>clearLastAppConfigFromHistory,letBuilderAddResource:()=>letBuilderAddResource,letBuilderClearResource:()=>letBuilderClearResource,letBuilderResponseToKeyboard:()=>letBuilderResponseToKeyboard,letBuilderShowLayoutToolbar:()=>letBuilderShowLayoutToolbar,listenBuilderEvents:()=>listenBuilderEvents,publishAppIsLoadedToBuilder:()=>publishAppIsLoadedToBuilder,publishAppSessionChangeToBuilder:()=>publishAppSessionChangeToBuilder,publishAppStateChangeToBuilder:()=>publishAppStateChangeToBuilder,publishCheck498ErrorToBuilder:()=>publishCheck498ErrorToBuilder,publishCloseBannerToBuilder:()=>publishCloseBannerToBuilder,publishConfirmDeleteToApp:()=>publishConfirmDeleteToApp,publishIsBusyToBuilder:()=>publishIsBusyToBuilder,publishNoPermissionResourceInfoListChangeToBuilder:()=>publishNoPermissionResourceInfoListChangeToBuilder,publishPortalUrlNeedToRegisterClientId:()=>publishPortalUrlNeedToRegisterClientId,publishSidePanelToApp:()=>publishSidePanelToApp});var utils_namespaceObject={};__webpack_require__.r(utils_namespaceObject),__webpack_require__.d(utils_namespaceObject,{CUSTOM_GROUP:()=>CUSTOM_GROUP,fetchCommonWidgetList:()=>fetchCommonWidgetList,fetchRemoteCustomWidgetList:()=>fetchRemoteCustomWidgetList,getBuilderUrl:()=>getBuilderUrl,getDefaultSectionIcon:()=>getDefaultSectionIcon,getDefaultTocDialogIcon:()=>getDefaultTocDialogIcon,getDefaultTocPageIcon:()=>getDefaultTocPageIcon,getHomePageUrl:()=>getHomePageUrl,getPageListByDialogId:()=>getPageListByDialogId,getPlaceholderItemForWidgetsList:()=>getPlaceholderItemForWidgetsList,getSectionItemForWidgetsList:()=>getSectionItemForWidgetsList,getWidgetsGroupLabel:()=>getWidgetsGroupLabel,showCustomWidgets:()=>showCustomWidgets,showRemoteCustomWidgets:()=>showRemoteCustomWidgets});var help_utils_namespaceObject={};__webpack_require__.r(help_utils_namespaceObject),__webpack_require__.d(help_utils_namespaceObject,{getBuildAppsHelpLink:()=>getBuildAppsHelpLink,getHomeHelpLink:()=>getHomeHelpLink,getWhatsNewLink:()=>getWhatsNewLink,getWidgetHelpLink:()=>getWidgetHelpLink,isSupportLanguage:()=>isSupportLanguage});var utils_utils_namespaceObject={};__webpack_require__.r(utils_utils_namespaceObject),__webpack_require__.d(utils_utils_namespaceObject,{getAppConfig:()=>utils_getAppConfig,getDsByWidgetId:()=>getDsByWidgetId,getDsIdsByWidgetId:()=>getDsIdsByWidgetId,getMapUseDataSourcesByUseMapWidgetIds:()=>getMapUseDataSourcesByUseMapWidgetIds,getMessageCarryData:()=>getMessageCarryData,getMessageCarryDataByWidgetId:()=>utils_getMessageCarryDataByWidgetId,getNewActionItem:()=>getNewActionItem,getNewMessage:()=>getNewMessage,getWidgetJson:()=>getWidgetJson,initOutputDataSources:()=>initOutputDataSources});var jimu_core=__webpack_require__("../jimu-core/index.tsx");class base_widget_setting_BaseWidgetSetting extends jimu_core.q_G.PureComponent{}const base_widget_setting=base_widget_setting_BaseWidgetSetting;try{base_widget_setting_BaseWidgetSetting.displayName="BaseWidgetSetting",base_widget_setting_BaseWidgetSetting.__docgenInfo={description:"",displayName:"BaseWidgetSetting",props:{widgetId:{defaultValue:null,description:"",name:"widgetId",required:!0,type:{name:"string"}},onSettingChange:{defaultValue:null,description:"When a setting is changed via user input, call this function to save that changed value into the widget configuration.",name:"onSettingChange",required:!0,type:{name:"SettingChangeFunction"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"ImmutableObject<WidgetContext>"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"ImmutableObject<{ border?: any; borderRadius?: any; boxShadow?: any; }>"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},manifest:{defaultValue:null,description:"The manifest is added in runtime, will not be saved in the config json.",name:"manifest",required:!0,type:{name:"ImmutableObject<WidgetManifest>"}},version:{defaultValue:null,description:"",name:"version",required:!0,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"string | ImmutableObject<IconResult>"}},visible:{defaultValue:null,description:"",name:"visible",required:!0,type:{name:"boolean"}},uri:{defaultValue:null,description:"",name:"uri",required:!0,type:{name:"string"}},itemId:{defaultValue:null,description:"",name:"itemId",required:!1,type:{name:"string"}},_originManifest:{defaultValue:null,description:"@ignore",name:"_originManifest",required:!0,type:{name:"ImmutableObject<WidgetManifest>"}},useDataSources:{defaultValue:null,description:"",name:"useDataSources",required:!1,type:{name:"ImmutableArray<UseDataSource>"}},useUtilities:{defaultValue:null,description:"",name:"useUtilities",required:!1,type:{name:"ImmutableArray<UseUtility>"}},useMapWidgetIds:{defaultValue:null,description:"",name:"useMapWidgetIds",required:!1,type:{name:"ImmutableArray<string>"}},useDataSourcesEnabled:{defaultValue:null,description:"",name:"useDataSourcesEnabled",required:!1,type:{name:"boolean"}},outputDataSources:{defaultValue:null,description:"",name:"outputDataSources",required:!1,type:{name:"ImmutableArray<string>"}},layouts:{defaultValue:null,description:'For widget that has an embedded layout, the name is declared in manifest.json.\nIf there is no layouts declared in manifest, the name is default.\n\nIf the name starts with "_", the layout will not be displayed in TOC.',name:"layouts",required:!1,type:{name:"ImmutableObject<{ [name: string]: SizeModeLayoutJson; }>"}},parent:{defaultValue:null,description:"A widget can be contained in multiple layout under a certain size mode.\nThe key is the name of the size mode.",name:"parent",required:!1,type:{name:"ImmutableObject<{ [key: string]: LayoutInfo[]; }>"}},enableDataAction:{defaultValue:null,description:"",name:"enableDataAction",required:!1,type:{name:"boolean"}},dataActions:{defaultValue:null,description:"",name:"dataActions",required:!1,type:{name:"ImmutableObject<WidgetDataActionConfig>"}},offPanel:{defaultValue:null,description:"Default value is false, this property is valid only when a widget is rendered in a widget controller.\nFalse means the widget controller will render the widget in controller's panel, and true means the controller widget will render the widget as it is.\nA widget can update this property in it's setting so it can display well in the controller widget.",name:"offPanel",required:!1,type:{name:"boolean"}},isClassLoaded:{defaultValue:null,description:"Indicator as to whether or not a widget class is loaded.",name:"isClassLoaded",required:!1,type:{name:"boolean"}},isInlineEditing:{defaultValue:null,description:"Indicator as to whether or not a widget is in inline editing state.",name:"isInlineEditing",required:!1,type:{name:"boolean"}},controllerWidgetId:{defaultValue:null,description:"The controller widget id that this widget belongs to.",name:"controllerWidgetId",required:!1,type:{name:"string"}},shouldExpandContextTool:{defaultValue:null,description:"",name:"shouldExpandContextTool",required:!1,type:{name:"boolean"}},state:{defaultValue:null,description:"The widget's state. Possible values of `OPENED`, `ACTIVE` or `CLOSED`.\n\nThe `OPENED` and `CLOSED` state are valid only when a widget is put into a widget controller.\nWhen a widget is not put into the widget controller, for performance reason, we don't switch the widget open/close state.\n\nFor `ACTIVE` state, see {@link WidgetManifestProperties.needActiveState }",name:"state",required:!1,type:{name:"enum",value:[{value:'"OPENED"'},{value:'"ACTIVE"'},{value:'"CLOSED"'}]}},windowState:{defaultValue:null,description:"The window's state. Possible values of `normal`, `minimized` or `maximized`.",name:"windowState",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"minimized"'},{value:'"maximized"'}]}},layoutItemTools:{defaultValue:null,description:"",name:"layoutItemTools",required:!1,type:{name:"{ [toolId: string]: WidgetLayoutItemToolInfo; }"}},dispatch:{defaultValue:null,description:"",name:"dispatch",required:!0,type:{name:"any"}},queryObject:{defaultValue:null,description:"",name:"queryObject",required:!0,type:{name:"ImmutableObject<UrlParameters>"}},savedConfig:{defaultValue:null,description:"A widget can save part of its whole config in the app config, and use the `getFullConfig()` to get the full config, the returned full config will be available at `props.config`.\nIf the widget does not implement the `getFullConfig()`, this prop will be the same with the `props.config`.",name:"savedConfig",required:!0,type:{name:"Partial<unknown>"}},config:{defaultValue:null,description:"",name:"config",required:!0,type:{name:"unknown"}},locale:{defaultValue:null,description:"",name:"locale",required:!0,type:{name:"string"}},appI18nMessages:{defaultValue:null,description:"",name:"appI18nMessages",required:!0,type:{name:"any"}},intl:{defaultValue:null,description:"",name:"intl",required:!0,type:{name:"IntlShape"}},token:{defaultValue:null,description:"",name:"token",required:!1,type:{name:"string"}},user:{defaultValue:null,description:"",name:"user",required:!1,type:{name:"IMUser"}},theme:{defaultValue:null,description:"",name:"theme",required:!0,type:{name:"IMThemeVariables"}},theme2:{defaultValue:null,description:"",name:"theme2",required:!0,type:{name:"IMThemeVariables"}},portalUrl:{defaultValue:null,description:"",name:"portalUrl",required:!1,type:{name:"string"}},portalSelf:{defaultValue:null,description:"",name:"portalSelf",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/base-widget-setting.tsx#BaseWidgetSetting"]={docgenInfo:base_widget_setting_BaseWidgetSetting.__docgenInfo,name:"BaseWidgetSetting",path:"../jimu-for-builder/lib/base-widget-setting.tsx#BaseWidgetSetting"})}catch(__react_docgen_typescript_loader_error){}var ActionKeys,react=__webpack_require__("../node_modules/react/index.js"),jimu_theme=__webpack_require__("../jimu-theme/index.ts");!function(ActionKeys){ActionKeys.SelectTemplate="SELECT_TEMPLATE",ActionKeys.WidgetSettingClassLoaded="WIDGET_SETTING_CLASS_LOADED",ActionKeys.WidgetsRemoved="WIDGETS_REMOVED",ActionKeys.WidgetsAdded="WIDGETS_ADDED",ActionKeys.ChangeCurrentApp="CHANGE_CURRENT_APP",ActionKeys.RefreshAppList="REFRSH_APPLIST",ActionKeys.SetLayoutTools="SET_LAYOUT_TOOLS",ActionKeys.WidgetSettingI18nMessageLoaded="WIDGET_SETTING_I18N_MESSAGE_LOADED",ActionKeys.ConfirmDeleteContentChanged="CONFIRM_DELETE_CONTENT_CHANGED",ActionKeys.MessageActionSettingOpenStateChange="MESSAGE_ACTION_OPEN_STATE_CHANGE"}(ActionKeys||(ActionKeys={}));const actions={selectTemplate:templateName=>({type:ActionKeys.SelectTemplate,templateName}),refreshAppListAction:isRefresh=>({type:ActionKeys.RefreshAppList,isRefresh}),widgetSettingClassLoaded:wigetUri=>({type:ActionKeys.WidgetSettingClassLoaded,wigetUri}),changeMessageActionSettingOpenState:(widgetId,open)=>({type:ActionKeys.MessageActionSettingOpenStateChange,widgetId,open}),widgetsAdded:widgets=>({type:ActionKeys.WidgetsAdded,widgets}),widgetsRemoved:widgetIds=>({type:ActionKeys.WidgetsRemoved,widgetIds}),changeCurrentApp:appId=>({type:ActionKeys.ChangeCurrentApp,appId}),setLayoutTools:tools=>({type:ActionKeys.SetLayoutTools,tools}),widgetSettingI18nMessageLoaded:(widgetName,i18nMessages)=>({type:ActionKeys.WidgetSettingI18nMessageLoaded,widgetName,i18nMessages}),confirmDeleteContentChanged:itemToDelete=>({type:ActionKeys.ConfirmDeleteContentChanged,itemToDelete})};class BuilderStateReduxStoreExtension{constructor(){this.id="builder-state-redux-store-extension"}getActions(){return Object.keys(ActionKeys).map((k=>ActionKeys[k]))}getInitLocalState(){return(0,jimu_core.J3Z)({templateName:null,currentAppId:null,refreshAppList:!1,isMobile:!1,widgetSettingI18nMessages:(0,jimu_core.J3Z)({}),widgetsSettingClassStatus:(0,jimu_core.J3Z)({})})}getReducer(){return(builderState,action,builderFullState)=>{switch(action.type){case ActionKeys.SelectTemplate:return builderState.set("templateName",action.templateName);case ActionKeys.WidgetSettingClassLoaded:return builderState=builderState.setIn(["widgetsSettingClassStatus",action.wigetUri],!0),function getWidgetIdsByUri(builderFullState,wigetUri){var _a,_b;const widgets=(null===(_b=null===(_a=builderFullState.appStateInBuilder)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.widgets)||{};return Object.keys(widgets).filter((wId=>widgets[wId].uri===wigetUri))}(builderFullState,action.wigetUri).forEach((wId=>{builderState=builderState.setIn(["widgetsSettingRuntimeInfo",wId,"isClassLoaded"],!0)})),builderState;case ActionKeys.WidgetsAdded:return action.widgets.forEach((w=>{builderState.widgetsSettingClassStatus[w.widgetUri]&&(builderState=builderState.setIn(["widgetsSettingRuntimeInfo",w.widgetId,"isClassLoaded"],!0))})),builderState;case ActionKeys.WidgetsRemoved:return builderState.set("widgetsSettingRuntimeInfo",builderState.widgetsSettingRuntimeInfo.without(...action.widgetIds));case ActionKeys.ChangeCurrentApp:return(builderState=this.getInitLocalState()).set("currentAppId",action.appId).set("widgetsSettingRuntimeInfo",{});case ActionKeys.MessageActionSettingOpenStateChange:return(null==builderState?void 0:builderState.widgetMessageActionSettingStatus)||(builderState=builderState.set("widgetMessageActionSettingStatus",{})),builderState=builderState.setIn(["widgetMessageActionSettingStatus",action.widgetId],action.open);case ActionKeys.RefreshAppList:return builderState.set("refreshAppList",action.isRefresh);case ActionKeys.SetLayoutTools:return builderState.set("toolbarConfig",action.tools);case ActionKeys.WidgetSettingI18nMessageLoaded:return builderState.setIn(["widgetSettingI18nMessages",action.widgetName],action.i18nMessages);case ActionKeys.ConfirmDeleteContentChanged:{const{itemToDelete}=action;return builderState.set("contentToDelete",itemToDelete)}default:return builderState}}}getStoreKey(){return"builder"}}var __awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const{getLocaleToLoad,loadLocaleMessages}=jimu_core.Ruy;class WidgetSettingManager{static getInstance(){return WidgetSettingManager.instance||(WidgetSettingManager.instance=new WidgetSettingManager,window._widgetSettingManager=WidgetSettingManager.instance),WidgetSettingManager.instance}constructor(){this.settings={},(0,jimu_core.Yzm)(this.onStoreChange.bind(this),["appStateInBuilder","appConfig","widgets"])}getWidgetUri(widgetId){var _a,_b,_c;const appConfig=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig;return null===(_c=null===(_b=null==appConfig?void 0:appConfig.widgets)||void 0===_b?void 0:_b[widgetId])||void 0===_c?void 0:_c.uri}getWidgetManifestByUri(uri){var _a,_b,_c;const widgets=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.widgets,widgetId=Object.keys(widgets||{}).find((wId=>widgets[wId].uri===uri));return null===(_c=widgets[widgetId])||void 0===_c?void 0:_c.manifest}updateWidgetCache(uri,obj){if("__proto__"!==uri&&"constructor"!==uri&&"prototype"!==uri){this.settings[uri]||(this.settings[uri]={});for(const k in obj){if("__proto__"===k||"constructor"===k||"prototype"===k)return;this.settings[uri][k]=obj[k]}}}getWidgetSettingClass(widgetId){var _a;return null===(_a=this.settings[this.getWidgetUri(widgetId)])||void 0===_a?void 0:_a.settingClazz}destroyWidgetSettingClass(widgetId){const uri=this.getWidgetUri(widgetId);uri&&delete this.settings[uri]}destroyWidgetSettingClassByUri(uri){this.checkWidgetUriInConfig(uri)||delete this.settings[uri]}getItemSettingClass(widgetId){var _a;return null===(_a=this.settings[this.getWidgetUri(widgetId)])||void 0===_a?void 0:_a.itemSettingClazz}getSettingI18nMessagesByUri(widgetUri){var _a;return null===(_a=this.settings[widgetUri])||void 0===_a?void 0:_a.settingI18nMessage}destroyAllWidgetSettingClasses(){this.settings={}}loadWidgetSettingClass(widgetId){return __awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;const widgetJson=null===(_c=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.widgets)||void 0===_c?void 0:_c[widgetId];if(!widgetJson)return yield Promise.resolve(null);if(!widgetJson.manifest)return yield Promise.resolve(null);const widgetUri=this.getWidgetUri(widgetId);return this.loadWidgetSettingClassByUri(widgetUri)}))}checkWidgetUriInConfig(widgetUri){var _a,_b;const widgets=(null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.widgets)||{};return!!Object.keys(widgets).find((wId=>widgets[wId].uri===widgetUri))}loadWidgetSettingClassByUri(uri){return this.settings[uri]||(this.settings[uri]={}),this.settings[uri].settingClazzPromise||(this.settings[uri].settingClazzPromise=this.loadRawSettingClass(uri).then((()=>__awaiter(this,void 0,void 0,(function*(){return yield this.loadI18nMessagesForSetting(uri)})))).then((()=>{const wrappedSetting=this.injectWidgetSettingProps(uri);return wrappedSetting?(this.settings[uri].settingClazz=wrappedSetting,(0,jimu_core.Vp3)().dispatch(actions.widgetSettingClassLoaded(uri)),wrappedSetting):(delete this.settings[uri],null)}))),this.settings[uri].settingClazzPromise}loadRawSettingClass(uri){return __awaiter(this,void 0,void 0,(function*(){const manifest=this.getWidgetManifestByUri(uri);let settingUri=`${uri}dist/setting/setting`;return manifest.properties.hasSettingPage||(settingUri="jimu-for-builder/json-editor-setting"),yield this.loadWidgetSettingDependency(uri).then((()=>__awaiter(this,void 0,void 0,(function*(){return yield window.mockimport(settingUri)})))).then((clazz=>{const rawSettingClass=clazz.default?clazz.default:clazz;return this.settings[uri].rawSettingClazz=rawSettingClass,rawSettingClass}))}))}loadI18nMessagesForSetting(uri){return __awaiter(this,void 0,void 0,(function*(){if(this.settings[uri]||(this.settings[uri]={}),this.settings[uri].settingI18nMessagePromise)return yield this.settings[uri].settingI18nMessagePromise;const manifest=this.getWidgetManifestByUri(uri);if(!manifest)return yield Promise.resolve({});if(manifest.translatedLocales){let locale=(0,jimu_core.Vp3)().getState().appContext.locale;locale=getLocaleToLoad(locale,manifest.translatedLocales),this.settings[uri].settingI18nMessagePromise=locale?loadLocaleMessages(`${uri}dist/setting/translations`,locale):Promise.resolve({})}else this.settings[uri].settingI18nMessagePromise=Promise.resolve({});return yield this.settings[uri].settingI18nMessagePromise.then(((i18nMessages={})=>((0,jimu_core.Vp3)().dispatch(actions.widgetSettingI18nMessageLoaded(manifest.name,i18nMessages)),this.settings[uri].settingI18nMessage=i18nMessages,i18nMessages)))}))}loadWidgetSettingDependency(uri){return __awaiter(this,void 0,void 0,(function*(){const manifest=this.getWidgetManifestByUri(uri);if(!manifest.settingDependency)return void(yield Promise.resolve());const widgetDependencies="string"==typeof manifest.settingDependency?[manifest.settingDependency]:manifest.settingDependency;yield(0,jimu_core.cV9)(widgetDependencies)}))}loadItemSettingClass(widgetId){return __awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;const widgetJson=null===(_c=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.widgets)||void 0===_c?void 0:_c[widgetId];return widgetJson&&widgetJson.manifest?yield this.loadItemSettingClassByUri(this.getWidgetUri(widgetId)):yield Promise.resolve(null)}))}loadItemSettingClassByUri(uri){return __awaiter(this,void 0,void 0,(function*(){return this.settings[uri]||(this.settings[uri]={}),this.settings[uri].itemSettingClazzPromise||(this.settings[uri].itemSettingClazzPromise=this.loadRawItemSettingClass(uri).then((itemClazz=>(this.settings[uri].itemSettingClazz=itemClazz,itemClazz)))),this.settings[uri].itemSettingClazzPromise}))}loadRawItemSettingClass(uri){return __awaiter(this,void 0,void 0,(function*(){const itemUri=`${uri}dist/setting/item-setting`;return yield window.mockimport(itemUri).then((clazz=>clazz.default?clazz.default:clazz))}))}injectWidgetSettingProps(uri){if(!this.checkWidgetUriInConfig(uri))return null;const rawSettingClazz=this.settings[uri].rawSettingClazz,IntlInjectedComponent=(0,jimu_core.j4T)(rawSettingClazz),ThemedWidgetWrapper=(0,jimu_theme.SL)(IntlInjectedComponent,!0),manifest=this.getWidgetManifestByUri(uri),widgetName=manifest.name,i18nMessages=this.settings[uri].settingI18nMessage;class WidgetSettingWrapper extends react.PureComponent{constructor(props){super(props),this.state={fullConfig:null}}componentDidMount(){rawSettingClazz.getFullConfig&&this.setState({fullConfig:rawSettingClazz.getFullConfig(this.props.config)})}componentDidUpdate(prevProps){rawSettingClazz.getFullConfig&&prevProps.config!==this.props.config&&this.setState({fullConfig:rawSettingClazz.getFullConfig(this.props.config)})}getFullConfig(config){return rawSettingClazz.getFullConfig?rawSettingClazz.getFullConfig(config):config}render(){if(manifest.version!==this.props.version)return null;const injectProps={messages:i18nMessages,savedConfig:this.props.config};this.state.fullConfig?injectProps.config=this.state.fullConfig:injectProps.config=this.getFullConfig(this.props.config);const allMessages=Object.assign({},i18nMessages,this.props.appI18nMessages);return react.createElement(jimu_core.Dk7,{locale:this.props.locale,defaultLocale:this.props.locale,messages:allMessages},react.createElement(ThemedWidgetWrapper,Object.assign({},this.props,injectProps)))}}WidgetSettingWrapper.displayName=`WidgetSettingWrapper(${widgetName})`;return jimu_core.E_S.connect(((state,ownProps)=>{const props={queryObject:state.queryObject,user:state.user,portalUrl:state.portalUrl,portalSelf:state.portalSelf,locale:state.appContext.locale,appI18nMessages:state.appI18nMessages},widgetId=ownProps.widgetId,widgetJson=state.appStateInBuilder.appConfig.widgets[widgetId],runtimeInfo=state.appStateInBuilder.widgetsRuntimeInfo[widgetId];if(!widgetJson)return{};const allOwnProps=Object.assign(props,widgetJson,ownProps,runtimeInfo);return Object.assign(allOwnProps,rawSettingClazz.mapExtraStateProps?rawSettingClazz.mapExtraStateProps(state,allOwnProps):{})}))(WidgetSettingWrapper)}onStoreChange(preWidgets,widgets){preWidgets&&widgets&&Object.keys(preWidgets).forEach((preWId=>{widgets[preWId]}))}}const widget_setting_manager=WidgetSettingManager;var app_message_manager_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const{getTranslatedLocale:getSupportedLocale}=jimu_core.Ruy;class AppMessageManager{constructor(){this.actionSettings={}}static getInstance(){return AppMessageManager.instance||(AppMessageManager.instance=new AppMessageManager),AppMessageManager.instance}getAllActions(){const appMM=this.getAppMessageManager();return appMM?appMM.getActions():[]}getAction(widgetId,actionName){const appMM=this.getAppMessageManager();return appMM?appMM.getAction(widgetId,actionName):null}getAppMessageManager(){if(window.jimuConfig.isBuilder){if(window._appWindow._messageManager)return window._appWindow._messageManager}else if(window._messageManager)return window._messageManager;return null}getActionSettingComponentUri(action,messageType,messageWidgetId){if(action.getSettingComponentUri)return action.getSettingComponentUri(messageType,messageWidgetId);if(action.widgetId){const actionInManifest=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[action.widgetId].manifest.messageActions.find((a=>a.name===action.name));return actionInManifest?actionInManifest.settingUri:null}return null}getFilteredActions(messageType,messageWidgetId){if(window._appWindow._messageManager){const actions=window._appWindow._messageManager.getActions(),filteredActions=[],messageDescription={messageType,widgetId:messageWidgetId},pm=(window.jimuConfig.isBuilder?(0,jimu_core.Vp3)().getState().appStateInBuilder:(0,jimu_core.Vp3)().getState()).appConfig.widgets[messageWidgetId].manifest.publishMessages.find((pm=>"string"==typeof pm?pm===messageType:pm.messageType===messageType));pm&&"string"!=typeof pm&&(messageDescription.messageCarryData=pm.messageCarryData);for(let i=0;i<actions.length;i++)actions[i].filterMessageDescription(messageDescription)&&filteredActions.push(actions[i]);return filteredActions}return[]}getConvertedSettingUri(actionId,settingUri){const allActions=this.getAllActions();let resultUri=null;for(let i=0;i<allActions.length;i++)if(actionId.includes(allActions[i].id)){const actionWidgetId=allActions[i].widgetId;if(actionWidgetId){const widgetJson=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId],messageActions=widgetJson.manifest.messageActions;let actionProperty=null;if(messageActions)for(let k=0;k<messageActions.length;k++)messageActions[k].name===allActions[i].name&&(actionProperty=messageActions[k]);return actionProperty&&settingUri?(resultUri=widgetJson.uri+"dist/"+settingUri,resultUri):null}return settingUri}return resultUri}loadActionSettingClass(actionJson,actionSettingUri){return app_message_manager_awaiter(this,void 0,void 0,(function*(){var _a;const uri=actionSettingUri?this.getConvertedSettingUri(actionJson.actionId,actionSettingUri):null;if(uri||Promise.resolve(null),this.actionSettings[uri]||(this.actionSettings[uri]={}),null===(_a=this.actionSettings[uri])||void 0===_a?void 0:_a.clazzPromise)return yield this.actionSettings[uri].clazzPromise;const actionWidgetId=actionJson.widgetId,actionWidgetJson=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId];return actionWidgetId&&(yield this.loadDependency(actionWidgetId)),this.actionSettings[uri].clazzPromise=this.loadRawSettingClass(uri).then((rawClazz=>app_message_manager_awaiter(this,void 0,void 0,(function*(){return widget_setting_manager.getInstance().loadI18nMessagesForSetting(actionWidgetJson&&actionWidgetJson.uri).then((i18nMessages=>this.injectActionSettingProps(rawClazz,i18nMessages,actionWidgetJson&&actionWidgetJson.id)))})))).then((wrapedClass=>(this.actionSettings[uri].clazz=wrapedClass,wrapedClass))),this.actionSettings[uri].clazzPromise}))}loadRawSettingClass(uri){return app_message_manager_awaiter(this,void 0,void 0,(function*(){return this.actionSettings[uri].rawClazzPromise?yield this.actionSettings[uri].rawClazzPromise:(this.actionSettings[uri].rawClazzPromise=window.mockimport(uri).then((rawClazz=>(rawClazz=rawClazz.default?rawClazz.default:rawClazz,this.actionSettings[uri].rawClazz=rawClazz,this.actionSettings[uri].rawClazz))),this.actionSettings[uri].rawClazzPromise)}))}loadDependency(widgetId){return app_message_manager_awaiter(this,void 0,void 0,(function*(){var _a;const manifest=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[widgetId])||void 0===_a?void 0:_a.manifest;if(!(null==manifest?void 0:manifest.settingDependency))return Promise.resolve();const widgetDependencies="string"==typeof manifest.dependency?[manifest.dependency]:manifest.dependency.asMutable();return(0,jimu_core.cV9)(widgetDependencies)}))}injectActionSettingProps(WrappedComponent,i18nMessages,actionWidgetId){const IntlInjectedComponent=(0,jimu_core.j4T)(WrappedComponent),actionWidgetJson=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId];let widgetName=null;widgetName=actionWidgetId&&actionWidgetJson?(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId].manifest.name:"Framework";class WidgetWrapper extends jimu_core.q_G.PureComponent{render(){const injectProps={messages:i18nMessages},appI18nMessages=(0,jimu_core.Vp3)().getState().appI18nMessages;let locale=null;actionWidgetId&&actionWidgetJson?(locale=getSupportedLocale((0,jimu_core.Vp3)().getState().appContext.locale,actionWidgetJson.manifest.translatedLocales.asMutable()),locale||(locale=actionWidgetJson.manifest.translatedLocales&&actionWidgetJson.manifest.translatedLocales[0]),locale||(locale=(0,jimu_core.Vp3)().getState().appContext.locale)):locale=(0,jimu_core.Vp3)().getState().appContext.locale;const allMessages=Object.assign({},i18nMessages,appI18nMessages);return jimu_core.q_G.createElement(jimu_core.Dk7,{locale,messages:allMessages},jimu_core.q_G.createElement(IntlInjectedComponent,Object.assign({},this.props,injectProps)))}}WidgetWrapper.displayName=`ActionSettingWrapper(${widgetName})`;for(const p in WrappedComponent)WidgetWrapper[p]||(WidgetWrapper[p]=WrappedComponent[p]);return WidgetWrapper}registerActionRawSettingClass(uri,rawSettingClass){this.actionSettings[uri]||(this.actionSettings[uri]={}),this.actionSettings[uri].rawClazz=rawSettingClass,this.actionSettings[uri].rawClazzPromise=Promise.resolve(rawSettingClass),this.actionSettings[uri].settingI18nMessages={},this.actionSettings[uri].settingI18nMessagesPromise=Promise.resolve({})}getActionRawSettingClass(uri){return this.actionSettings[uri].rawClazz}}var layout_runtime=__webpack_require__("../jimu-layouts/layout-runtime.tsx");function cleanupSizemodeLayoutStructure(appConfig,sizeModeLayout){return Object.values(null!=sizeModeLayout?sizeModeLayout:{}).forEach((layoutId=>{appConfig=function cleanupLayoutStructure(appConfig,layoutId){var _a;const layout=appConfig.layouts[layoutId];return layout?(delete layout.parent,Object.keys(null!==(_a=layout.content)&&void 0!==_a?_a:{}).forEach((itemId=>{const layoutItem=layout.content[itemId];switch(layoutItem.type){case jimu_core.K6q.Widget:{const widgetJson=appConfig.widgets[layoutItem.widgetId];widgetJson&&(delete widgetJson.parent,widgetJson.layouts&&Object.values(widgetJson.layouts).forEach((layouts=>{appConfig=cleanupSizemodeLayoutStructure(appConfig,layouts)})));break}case jimu_core.K6q.Section:{const sectionJson=appConfig.sections[layoutItem.sectionId];delete sectionJson.parent,sectionJson.views.forEach((viewId=>{const viewJson=appConfig.views[viewId];delete viewJson.parent,appConfig=cleanupSizemodeLayoutStructure(appConfig,viewJson.layout)}));break}case jimu_core.K6q.ScreenGroup:{const sgJson=appConfig.screenGroups[layoutItem.screenGroupId];delete sgJson.parent,sgJson.screens.forEach((screenId=>{var _a;const screenJson=appConfig.screens[screenId];delete screenJson.parent,appConfig=cleanupSizemodeLayoutStructure(appConfig,screenJson.main.layout),(null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout)&&(appConfig=cleanupSizemodeLayoutStructure(appConfig,screenJson.panel.layout))}));break}}})),appConfig):appConfig}(appConfig,layoutId)})),appConfig}const{getUniqueId,getUniqueLabel,parseUniqueLabel,getSizeModeOfALayout}=jimu_core.VbA;function isFirstLevelPage(appConfig,pageId){return!!appConfig.pageStructure.find((ps=>!!ps[pageId]))}function isPageHasSubPage(appConfig,pageId){const ps=appConfig.pageStructure.find((ps=>!!ps[pageId]));return ps&&ps[pageId].length>0}function getRealPageCount(appConfig){let count=0;return Object.keys(appConfig.pages).forEach(((pId,i)=>{isRealPage(appConfig,pId)&&count++})),count}function getSubRealPageCount(appConfig,parentPageId){if(!isFirstLevelPage(appConfig,parentPageId))return 0;let count=0;return appConfig.pageStructure.forEach(((ps,i)=>{const pId=Object.keys(ps)[0];pId===parentPageId&&ps[pId].forEach((subPId=>{isRealPage(appConfig,subPId)&&count++}))})),count}function getRealPageCountExcludeOnePage(appConfig,pageId){let count=0;return isRealPage(appConfig,pageId)&&(count=1),getRealPageCount(appConfig)-getSubRealPageCount(appConfig,pageId)-count}function isRealPage(appConfig,pageId){const pageJson=appConfig.pages[pageId];return!!pageJson&&pageJson.type===jimu_core.g6_.Normal}function cleanAppStructure(config){var _a,_b,_c,_d;return Object.values(null!==(_a=config.pages)&&void 0!==_a?_a:{}).forEach((pageJson=>{config=cleanupSizemodeLayoutStructure(config,pageJson.layout)})),Object.values(null!==(_b=config.dialogs)&&void 0!==_b?_b:{}).forEach((dialogJson=>{config=cleanupSizemodeLayoutStructure(config,dialogJson.layout)})),(null===(_c=config.header)||void 0===_c?void 0:_c.layout)&&(config=cleanupSizemodeLayoutStructure(config,config.header.layout)),(null===(_d=config.footer)||void 0===_d?void 0:_d.layout)&&(config=cleanupSizemodeLayoutStructure(config,config.footer.layout)),config}function getCleanAppConfig(appConfig){let config=appConfig.asMutable({deep:!0});return Object.keys(config.widgets).forEach((wid=>{var _a,_b,_c;const w=config.widgets[wid];w.label===(null===(_a=w.manifest)||void 0===_a?void 0:_a.name)&&delete w.label,w.icon===w.context.folderUrl+"icon.svg"&&delete w.icon,"object"==typeof w.icon&&(w.icon.svg!==w.context.folderUrl+"icon.svg"||"#fff"!==(null===(_b=w.icon.properties)||void 0===_b?void 0:_b.color)&&(null===(_c=w.icon.properties)||void 0===_c?void 0:_c.color)||delete w.icon),delete w.context,delete w.manifest,delete w._originManifest})),config.layouts=function cleanupRuntimeLayouts(layouts){return Object.keys(layouts).forEach((layoutId=>{const layout=layouts[layoutId];delete layout.id,layout.content&&Object.keys(layout.content).forEach((id=>{delete layout.content[id].id}))})),layouts}(config.layouts),config=jimu_core.VbA.cleanPortalInfoFromResource(config),config=cleanAppStructure(config),config}function isLabelDuplicated(appConfig,type,id,label){let contents;return"page"===type?contents=appConfig.pages:"view"===type?contents=appConfig.views:"dialog"===type&&(contents=appConfig.dialogs),!!contents&&Object.keys(contents).some((contentId=>contentId!==id&&contents[contentId].label===label))}var ExtActionKeys;window._getCleanAppConfig=getCleanAppConfig,function(ExtActionKeys){ExtActionKeys.InAppAppStateChanged="IN_APP_APP_STATE_CHANGED",ExtActionKeys.InBuilderAppConfigChanged="IN_BUILDER_APP_CONFIG_CHANGED"}(ExtActionKeys||(ExtActionKeys={}));const app_state_redux_store_extension_actions={inAppAppStateChanged:appState=>({type:ExtActionKeys.InAppAppStateChanged,appState}),inBuilderAppConfigChanged:appConfig=>({type:ExtActionKeys.InBuilderAppConfigChanged,appConfig})};class BuilderAppStateReduxStoreExtension{constructor(){this.id="builder-app-state-redux-store-extension"}getActions(){return Object.keys(ExtActionKeys).map((k=>ExtActionKeys[k]))}getInitLocalState(){return null}getReducer(){return(appState,action,builderState)=>{switch(action.type){case ExtActionKeys.InAppAppStateChanged:return action.appState;case ExtActionKeys.InBuilderAppConfigChanged:return jimu_core.VbA.updateStateWhenAppConfigChange(appState,action.appConfig);default:return appState}}}getStoreKey(){return"appStateInBuilder"}}var app_state_history_extension_ActionKeys;!function(ActionKeys){ActionKeys.InBuilderPutAppConfigIntoHistory="IN_BUILDER_PUT_APPCONFIG_INTO_HISTORY",ActionKeys.InBuilderRemoveLastAppConfigFromHistory="IN_BUILDER_REMOVE_LAST_APPCONFIG_FROM_HISTORY",ActionKeys.InBuilderReplaceLastAppConfigInHistory="IN_BUILDER_REPLACE_LAST_APPCONFIG_IN_HISTORY",ActionKeys.InBuilderAppConfigUndo="IN_BUILDER_APPCONFIG_UNDO",ActionKeys.InBuilderAppConfigRedo="IN_BUILDER_APPCONFIG_REDO",ActionKeys.InBuilderAppConfigRedoClear="IN_BUILDER_APPCONFIG_REDOCLEAR",ActionKeys.InBuilderAppConfigClear="IN_BUILDER_APPCONFIG_CLEAR"}(app_state_history_extension_ActionKeys||(app_state_history_extension_ActionKeys={}));const app_state_history_extension_actions={InBuilderAppConfigUndo:()=>({type:app_state_history_extension_ActionKeys.InBuilderAppConfigUndo}),InBuilderAppConfigRedo:()=>({type:app_state_history_extension_ActionKeys.InBuilderAppConfigRedo}),InBuilderPutAppConfigIntoHistory:appState=>({type:app_state_history_extension_ActionKeys.InBuilderPutAppConfigIntoHistory,appState}),InBuilderRemoveLastAppConfigFromHistory:()=>({type:app_state_history_extension_ActionKeys.InBuilderRemoveLastAppConfigFromHistory}),InBuilderReplaceLastAppConfigInHistory:appState=>({type:app_state_history_extension_ActionKeys.InBuilderReplaceLastAppConfigInHistory,appState}),InBuilderAppConfigRedoClear:()=>({type:app_state_history_extension_ActionKeys.InBuilderAppConfigRedoClear}),InBuilderAppConfigClear:()=>({type:app_state_history_extension_ActionKeys.InBuilderAppConfigClear})};class AppStateHistoryExtension{constructor(){this.id="app-state-history-extension"}getActions(){return[app_state_history_extension_ActionKeys.InBuilderPutAppConfigIntoHistory,app_state_history_extension_ActionKeys.InBuilderRemoveLastAppConfigFromHistory,app_state_history_extension_ActionKeys.InBuilderReplaceLastAppConfigInHistory,app_state_history_extension_ActionKeys.InBuilderAppConfigUndo,app_state_history_extension_ActionKeys.InBuilderAppConfigRedo,app_state_history_extension_ActionKeys.InBuilderAppConfigRedoClear,app_state_history_extension_ActionKeys.InBuilderAppConfigClear]}getInitLocalState(){return{past:[],future:[]}}getReducer(){return(historyState,action,builderState)=>{switch(action.type){case app_state_history_extension_ActionKeys.InBuilderAppConfigUndo:return this.handleAppStateUndo(historyState);case app_state_history_extension_ActionKeys.InBuilderAppConfigRedo:return this.handleAppStateRedo(historyState);case app_state_history_extension_ActionKeys.InBuilderPutAppConfigIntoHistory:return this.handleAppStateAdd(historyState,action.appState);case app_state_history_extension_ActionKeys.InBuilderRemoveLastAppConfigFromHistory:return this.handleAppStateRemoveLast(historyState);case app_state_history_extension_ActionKeys.InBuilderReplaceLastAppConfigInHistory:return this.handleAppStateReplaceLast(historyState,action.appState);case app_state_history_extension_ActionKeys.InBuilderAppConfigRedoClear:return this.handleAppStateRedoClear(historyState);case app_state_history_extension_ActionKeys.InBuilderAppConfigClear:return this.handleAppStateClear(historyState);default:return historyState}}}handleAppStateUndo(state){if(state.past.length<2)return console.warn("Can not undo since no history there"),state;const previous=state.past[state.past.length-2],current=state.past[state.past.length-1],past=state.past.slice(0,state.past.length-1),future=[current].concat(state.future);return jimu_core.CM0.defer((()=>{publishAppConfigChangeToApp(previous.appConfig),publishAppInfoChangeToApp(previous.appInfo)})),state.merge({past,future})}handleAppStateRedo(state){if(state.future.length<1)return console.warn("Can not redo since no history there"),state;const next=state.future[0],future=state.future.slice(1),past=state.past.concat([next]);return jimu_core.CM0.defer((()=>{publishAppConfigChangeToApp(next.appConfig),publishAppInfoChangeToApp(next.appInfo)})),state.merge({past,future})}handleAppStateAdd(state,appState){const lastStateInPast=state.past[state.past.length-1];if(null!==appState&&(state.past.length>0&&(lastStateInPast.appConfig!==appState.appConfig||lastStateInPast.appInfo!==appState.appInfo)||0===state.past.length)){const past=state.past.concat([appState]);return state.set("past",past).set("future",[])}return state}handleAppStateRemoveLast(state){if(state.past.length>0){const past=state.past.slice(0,state.past.length-1);return state.set("past",past)}return state}handleAppStateReplaceLast(state,appState){let past=state.past;return state.past.length>0?(past=past.slice(0,state.past.length-1).concat(appState),state.set("past",past)):state}handleAppStateRedoClear(state){return state.set("future",[])}handleAppStateClear(state){return state.set("future",[]).set("past",[])}getStoreKey(){return"appStateHistory"}}var ToAppMessage,ToBuilderMessage,builder_state_resource_extension_ActionKeys;!function(ToAppMessage){ToAppMessage.AppConfigChanged="app_config_changed",ToAppMessage.AppInfoChanged="app_info_changed",ToAppMessage.PortalSelfChanged="portal_self_changed",ToAppMessage.DialogInfosChanged="dialog_infos_changed",ToAppMessage.UserSignIn="user_sign_in",ToAppMessage.SetMainPortal="set_main_portal",ToAppMessage.ChangeAppMode="change_app_mode",ToAppMessage.ChangePage="change_page",ToAppMessage.ChangeDialog="change_dialog",ToAppMessage.ChangeSelection="change_selection",ToAppMessage.ChangeWidgetStateProp="change_widget_state_prop",ToAppMessage.ChangeWidgetMutableStateProp="change_widget_mutable_state_prop",ToAppMessage.ChangeZoomScale="change_zoom_scale",ToAppMessage.BuilderTriggerKeyboard="builder_trigger_keyboard",ToAppMessage.ChangeBrowserSizeMode="change_browser_size_mode",ToAppMessage.BuilderSessionChanged="builder_session_changed",ToAppMessage.BuilderNoPermissionResourceInfoListChanged="builder_no_permission_resource_info_list_changed",ToAppMessage.ActivePagePartChanged="active_page_part_changed",ToAppMessage.AnimationPreview="animation_preview",ToAppMessage.HoverPreview="hover_preview",ToAppMessage.SectionNavInfoChanged="section_navinfo_changed",ToAppMessage.ScreenGroupNavInfoChanged="screengroup_navinfo_changed",ToAppMessage.TocHoverInfoChanged="toc_hover_info_changed",ToAppMessage.SetClientIdAlertIsCancelled="set_client_id_alert_is_cancelled",ToAppMessage.UtilityStateChanged="utility_state_changed",ToAppMessage.OpenCookieBanner="open_cookie_banner",ToAppMessage.OpenCookieBannerByPrivacyPanel="open_cookie_banner_by_privacy_panel",ToAppMessage.OpenCookieSettingsWindow="open_cookie_settings_window",ToAppMessage.WidgetToolbarStateChange="widget_toolbar_state_change",ToAppMessage.SetWidgetIsInlineEditingState="set__widget_is_inline_editing_state",ToAppMessage.WidgetStateChange="widget_state_change",ToAppMessage.WidgetRuntimeInfoChange="widget_runtime_info_change"}(ToAppMessage||(ToAppMessage={})),function(ToBuilderMessage){ToBuilderMessage.AppStateChanged="app_state_changed",ToBuilderMessage.AppSessionChanged="app_session_changed",ToBuilderMessage.AppNoPermissionResourceInfoListChanged="app_no_permission_resource_info_list_changed",ToBuilderMessage.NeedToCheck498Error="need_to_check_498_error",ToBuilderMessage.AppAddResource="app_add_resource",ToBuilderMessage.AppClearResources="app_clear_resources",ToBuilderMessage.AppTriggerKeyboard="app_trigger_keyboard",ToBuilderMessage.SetLayoutTools="app_set_layout_tools",ToBuilderMessage.ClearLastAppConfigFromHistory="clear_last_app_config_from_history",ToBuilderMessage.SetIsBusy="app_set_isbusy",ToBuilderMessage.AppIsLoaded="app_is_loaded",ToBuilderMessage.ConfirmDelete="confirm_delete",ToBuilderMessage.NeedToRegisterClinetId="need_to_register_client_id",ToBuilderMessage.SetSidePanel="app_side_panel",ToBuilderMessage.CloseBannerInLiveView="close_banner_in_live_view"}(ToBuilderMessage||(ToBuilderMessage={})),function(ActionKeys){ActionKeys.AddResource="ADD_RESOURCE",ActionKeys.UpdateResource="UPDATE_RESOURCE",ActionKeys.ClearResources="CLEAR_RESOURCES"}(builder_state_resource_extension_ActionKeys||(builder_state_resource_extension_ActionKeys={}));const builder_state_resource_extension_actions={AddResource:(resourceKey,resourceItemInfo)=>({type:builder_state_resource_extension_ActionKeys.AddResource,resourceKey,resourceItemInfo}),UpdateResource:(resourceKey,resourceItemInfo)=>({type:builder_state_resource_extension_ActionKeys.UpdateResource,resourceKey,resourceItemInfo}),ClearResources:()=>({type:builder_state_resource_extension_ActionKeys.ClearResources})};class BuilderStateResourceExtension{constructor(){this.id="builder-state-resource-extension"}getActions(){return Object.keys(builder_state_resource_extension_ActionKeys).map((k=>builder_state_resource_extension_ActionKeys[k]))}getInitLocalState(){return(0,jimu_core.J3Z)({})}getReducer(){return(resourcesInfo,action,builderFullState)=>{switch(action.type){case builder_state_resource_extension_ActionKeys.AddResource:case builder_state_resource_extension_ActionKeys.UpdateResource:return resourcesInfo.set(action.resourceKey,action.resourceItemInfo);case builder_state_resource_extension_ActionKeys.ClearResources:return(0,jimu_core.J3Z)({});default:return resourcesInfo}}}getStoreKey(){return"resourcesInfo"}}var AppResourceFilePath,portal_util=__webpack_require__("../jimu-for-builder/lib/service/app-service/portal-util.ts"),rest_service=__webpack_require__("../jimu-for-builder/lib/service/rest-service.tsx"),jimu_ui=__webpack_require__("../jimu-ui/index.tsx"),app_resource_manager_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};!function(AppResourceFilePath){AppResourceFilePath.Config="config/config.json",AppResourceFilePath.Image="images/image-resources-list.json",AppResourceFilePath.Icon="images/icon-resources-list.json"}(AppResourceFilePath||(AppResourceFilePath={}));const fullReplaceBlobUrl=(value="",blobToResourceMap={})=>{let newValue=value;const replaceIds=[];try{for(const[blobUrl,{id,resourceUrl}]of Object.entries(blobToResourceMap))newValue.includes(blobUrl)&&(newValue=newValue.replace(new RegExp(blobUrl,"g"),resourceUrl),!replaceIds.includes(id)&&replaceIds.push(id))}catch(err){console.error(err)}return{newValue,replaceIds}};class app_resource_manager_AppResourceManager{constructor(){this.resourceMap={},this.blobToResourceMap={},this.resources={},this.getResourcesInDraft=()=>this.resources,this.setResourcesInDraft=resources=>{this.resources=Object.assign(Object.assign({},this.getResourcesInDraft()),resources)},this.getImageResourceListFromDraft=appId=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const resourcesInDraft=this.getResourcesInDraft();if(resourcesInDraft.imageResources)return yield Promise.resolve(resourcesInDraft.imageResources);{const session=this.getSession(),portalUrlWithFull=this.getPortalUrlWithFull(appId),{resources}=yield this.fetchAppResourceInfoList(appId);if((null==resources?void 0:resources.some((({resource})=>resource===AppResourceFilePath.Image)))||!1){const imageResourceList=(yield this.fetchAppResource(appId,{fileName:AppResourceFilePath.Image,readAs:"json"}))||{};return Object.values(imageResourceList).forEach((resource=>{resource.url.includes("?token=")&&(resource.url=resource.url.slice(0,resource.url.indexOf("?token="))),resource.url=resource.url.replace("${appResourceUrl}",portalUrlWithFull)+"?token="+(null==session?void 0:session.token)})),yield Promise.resolve(imageResourceList)}return yield this.upLoadImageResourceList({})}})),this.getIconResourceListFromDraft=appId=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const{iconResources}=this.getResourcesInDraft();if(iconResources)return yield Promise.resolve(iconResources);const session=this.getSession(),portalUrlWithFull=this.getPortalUrlWithFull(appId),{resources}=yield this.fetchAppResourceInfoList(appId);if((null==resources?void 0:resources.some((({resource})=>resource===AppResourceFilePath.Icon)))||!1){const iconResourceList=yield this.fetchAppResource(appId,{fileName:AppResourceFilePath.Icon,readAs:"json"});if(iconResourceList)return Object.values(iconResourceList).forEach((resource=>{resource.svg=resource.svg.replace("${appResourceUrl}",portalUrlWithFull)+"?token="+(null==session?void 0:session.token),"string"==typeof resource.properties.path&&(resource.properties.path=resource.properties.path.replace("${appResourceUrl}",portalUrlWithFull)+"?token="+(null==session?void 0:session.token))})),yield Promise.resolve(iconResourceList)}return yield this.upLoadIconResourceList({})})),this.getInUseImageResources=imageResourceList=>{var _a;let cleanAppConfig=getCleanAppConfig(null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig);cleanAppConfig=jimu_core.VbA.replaceStringInAppConfig(Object.assign({},cleanAppConfig),{matcher:(value,full)=>full?jimu_core.VbA.fullMatchBlobUrl(value):/^blob:\http(s?):\/\/(.)/.test(value),handler:(value,full)=>{var _a;return full?fullReplaceBlobUrl(value,this.blobToResourceMap).newValue:(null===(_a=this.blobToResourceMap[value])||void 0===_a?void 0:_a.resourceUrl)||value},passIndicator:jimu_core.VbA.isFullReplace});const configSourceMap={};let fullMatchString="";jimu_core.VbA.replaceStringInAppConfig(Object.assign({},cleanAppConfig),{matcher:(value,full)=>full?jimu_core.VbA.fullMatchResourceUrl(value):/^\$\{appResourceUrl\}+(.)/.test(value),handler:(value,full)=>(full?fullMatchString+=value:configSourceMap[value]=value,value),passIndicator:jimu_core.VbA.isFullReplace});const relatedImageResources=[];Object.values(imageResourceList).forEach((imageResource=>{const resourceUrl=`\${appResourceUrl}/${imageResource.resourcesPrefix}/${imageResource.fileName}`;(configSourceMap[resourceUrl]||fullMatchString.includes(resourceUrl))&&relatedImageResources.push(imageResource)}));return this.formatRelatedImageResources(imageResourceList,relatedImageResources)},this.getInUseIconResources=iconResourceList=>{var _a;let cleanAppConfig=getCleanAppConfig(null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig);cleanAppConfig=jimu_core.VbA.replaceStringInAppConfig(Object.assign({},cleanAppConfig),{matcher:(value,full)=>full?jimu_core.VbA.fullMatchBlobUrl(value):/^blob:\http(s?):\/\/(.)/.test(value),handler:(value,full)=>{var _a;return full?fullReplaceBlobUrl(value,this.blobToResourceMap).newValue:(null===(_a=this.blobToResourceMap[value])||void 0===_a?void 0:_a.resourceUrl)||value},passIndicator:jimu_core.VbA.isFullReplace});const configSourceMap={};let fullMatchString="";jimu_core.VbA.replaceStringInAppConfig(Object.assign({},cleanAppConfig),{matcher:(value,full)=>full?jimu_core.VbA.fullMatchResourceUrl(value):/^\$\{appResourceUrl\}+(.)/.test(value),handler:(value,full)=>(full?fullMatchString+=value:configSourceMap[value]=value,value),passIndicator:jimu_core.VbA.isFullReplace});const inUseIconResources=[];return Object.values(iconResourceList).forEach((iconResource=>{const resourceUrl=`\${appResourceUrl}/images/icon_picker_in_setting/${iconResource.properties.filename}`;(configSourceMap[resourceUrl]||fullMatchString.includes(resourceUrl))&&inUseIconResources.push(iconResource)})),inUseIconResources},this.upLoadAppConfig=(appId,config,owner)=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const noLocalFileConfig=yield this.upLoadLocalResource(config),file=new Blob([JSON.stringify(noLocalFileConfig)],{type:"application/json"}),resourceItemInfo={appId,file,fileName:"config.json",type:jimu_core.vtl.Config,owner};return yield this.upLoadAppResource(resourceItemInfo).then((()=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(config)})))).catch((err=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.reject(new Error(err))}))))})),this.upLoadImageResourceList=(resourceList,newAppId)=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const resourceListToUpload=Object.assign({},resourceList);return yield this.upLoadResourceList(AppResourceFilePath.Image,resourceListToUpload,newAppId)})),this.upLoadIconResourceList=(resourceList,newAppId)=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield this.upLoadResourceList(AppResourceFilePath.Icon,resourceList,newAppId)})),this.upLoadAppResource=resourceItemInfo=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){resourceItemInfo.resourcesPrefix=app_resource_manager_AppResourceManager.getResourcePrefix(resourceItemInfo);const{appId=this.getAppId(),fileName,originalName,resourcesPrefix}=resourceItemInfo,resourcePath=(resourcesPrefix?resourcesPrefix+"/":"")+fileName,resourceUrl="${appResourceUrl}/"+resourcePath,resourceKey=(0,jimu_core.nms)(),resourceInfoInBuilder={id:resourceKey,appId,fileName,originalName,resourcesPrefix,url:resourceItemInfo.url,blobUrl:resourceItemInfo.blobUrl,resourceUrl,type:resourceItemInfo.type,status:jimu_core.kdB.Fetching,widgetId:resourceItemInfo.widgetId,owner:resourceItemInfo.owner},tempResourceInfoForUpload=Object.assign({},resourceInfoInBuilder);tempResourceInfoForUpload.file=resourceItemInfo.file;const resourcePromise=this.fetchAppResourceInfoList(appId).then((_a=>app_resource_manager_awaiter(this,[_a],void 0,(function*({resources}){if(0===(null==resources?void 0:resources.length))return yield this.addAppResource(tempResourceInfoForUpload);if((null==resources?void 0:resources.length)>0)return resources.some((({resource})=>resource===resourcePath))?yield this.updateAppResource(tempResourceInfoForUpload):yield this.addAppResource(tempResourceInfoForUpload);throw new Error("return value from fetchAppResourceInfoList is not right")})))).catch((error=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return console.error(error),this.setResourceItemInfoStatus(tempResourceInfoForUpload,jimu_core.kdB.Error),yield Promise.reject(new Error(error))}))));return tempResourceInfoForUpload.promise=resourcePromise,this.setResourceMap(resourceKey,resourceInfoInBuilder),yield resourcePromise})),this.upLoadLocalResource=config=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const blobToResourceMap=this.blobToResourceMap,isBlobCacheResourceExp=new RegExp("^blob:http(s?)://(.)"),localResourcesInConfig=[];const replaceOperator={matcher:(value,full)=>full?jimu_core.VbA.fullMatchBlobUrl(value):function isNeedUpdateResource(value){return isBlobCacheResourceExp.test(value)}(value),handler:(value,full)=>{if(full){const{newValue,replaceIds}=fullReplaceBlobUrl(value,blobToResourceMap);for(const id of replaceIds)!localResourcesInConfig.includes(id)&&localResourcesInConfig.push(id);return newValue}return function updateResourceUrl(value){let newValue=value;return newValue=blobToResourceMap[value],!localResourcesInConfig.includes(newValue.id)&&localResourcesInConfig.push(newValue.id),newValue.resourceUrl}(value)},passIndicator:jimu_core.VbA.isFullReplace},appConfig=jimu_core.VbA.replaceStringInAppConfig(config,replaceOperator);return yield this.checkResourcesUploadStatus(localResourcesInConfig).then((resourceUploadStatus=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return resourceUploadStatus===jimu_core.kdB.Success?yield Promise.resolve(appConfig):yield Promise.reject(new Error(null))}))))})),this.fetchAppResourceInfoList=(appId,option)=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=this.getSession();return yield(0,rest_service.JA)({id:appId,isLocalApp:window.jimuConfig.isDevEdition},Object.assign({authentication:session},option)).catch((err=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return console.log(err),yield Promise.reject(new Error(err))}))))})),this.fetchAppResource=(appId,option)=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=this.getSession();return yield(0,rest_service.ov)({id:appId,isLocalApp:window.jimuConfig.isDevEdition},Object.assign({authentication:session},option)).catch((err=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return console.log(err),yield Promise.reject(new Error(null))}))))})),this.clearResources=appId=>{this.clearResourceMap(),this.clearResourcesWithoutSaved(appId),(0,jimu_core.Vp3)().dispatch(builder_state_resource_extension_actions.ClearResources())},this.updateImageResourceItemInfo=imageResourceItemInfo=>{const appId=this.getAppId();this.getImageResourceListFromDraft(appId).then((imageResourceList=>{const tempImageResourceItemInfo=Object.assign({},imageResourceItemInfo);delete tempImageResourceItemInfo.blobUrl,delete tempImageResourceItemInfo.type,imageResourceList[tempImageResourceItemInfo.fileName.split(".")[0]]=tempImageResourceItemInfo,this.setResourcesInDraft({imageResources:imageResourceList})}))}}static getInstance(){return app_resource_manager_AppResourceManager._instance||(app_resource_manager_AppResourceManager._instance=new app_resource_manager_AppResourceManager,window._appResourceManager=app_resource_manager_AppResourceManager._instance),window._appResourceManager}static assignBlobUrlToResourceItem(resourceItemInfo){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){try{const blobUrl=window.URL.createObjectURL(resourceItemInfo.file),{width,height}=yield jimu_ui.imageUtils.getImageOriginalSizeByUrl(blobUrl).catch((()=>({width:0,height:0})));return resourceItemInfo.url=blobUrl,resourceItemInfo.blobUrl=blobUrl,resourceItemInfo.originalWidth=width,resourceItemInfo.originalHeight=height,yield Promise.resolve(resourceItemInfo)}catch(error){return yield Promise.reject(new Error(error))}}))}static getBlobByBlobUrl(blobUrl){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield new Promise(((resolve,reject)=>{const xhr=new XMLHttpRequest;xhr.responseType="blob",xhr.open("GET",blobUrl,!0),xhr.onerror=reject,xhr.onload=()=>{200===xhr.status?resolve(xhr.response):reject(new Error(null))},xhr.send()}))}))}static getResourcePrefix({resourcesPrefix,widgetId,type}){if(resourcesPrefix)return resourcesPrefix;return new Map([[jimu_core.vtl.Config,"config"],[jimu_core.vtl.Image,widgetId?`images/${widgetId}`:"images/templates"]]).get(type)||"templates"}addAppResource(resourceItemInfo){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=this.getSession();return yield this.getAppInfo({id:resourceItemInfo.appId,isLocalApp:window.jimuConfig.isDevEdition}).then((res=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield(0,rest_service.zk)({id:resourceItemInfo.appId,resource:resourceItemInfo.file,name:resourceItemInfo.fileName,owner:res.owner,params:{resourcesPrefix:resourceItemInfo.resourcesPrefix},authentication:session}).then((result=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return this.setResourceItemInfoStatus(resourceItemInfo,jimu_core.kdB.Success),yield Promise.resolve(result)}))),(error=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return this.setResourceItemInfoStatus(resourceItemInfo,jimu_core.kdB.Error),yield Promise.reject(new Error(error))}))))}))))}))}updateAppResource(resourceItemInfo){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=this.getSession();return yield this.getAppInfo({id:resourceItemInfo.appId,isLocalApp:window.jimuConfig.isDevEdition}).then((res=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield(0,rest_service.Fr)({id:resourceItemInfo.appId,resource:resourceItemInfo.file,name:resourceItemInfo.fileName,owner:res.owner,params:{resourcesPrefix:resourceItemInfo.resourcesPrefix},authentication:session}).then((result=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return this.setResourceItemInfoStatus(resourceItemInfo,jimu_core.kdB.Success),yield Promise.resolve(result)}))),(error=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return this.setResourceItemInfoStatus(resourceItemInfo,jimu_core.kdB.Error),yield Promise.reject(new Error(error))}))))}))))}))}removeAppResource(resourceItemInfo){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=this.getSession(),appId=resourceItemInfo.appId?resourceItemInfo.appId:this.getAppId();return yield this.getAppInfo({id:appId,isLocalApp:window.jimuConfig.isDevEdition}).then((res=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield(0,rest_service.at)({id:appId,owner:res.owner,resource:resourceItemInfo.fileName,authentication:session}).then((result=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(result)}))),(error=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.reject(new Error(error))}))))}))))}))}getAppId(){var _a;return null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appId}getSession(){return jimu_core.Cvv.getInstance().getMainSession()}getPortalUrlWithTemplate(){return"${appResourceUrl}/"}getPortalUrlWithFull(appId){return(0,rest_service.Ld)({isLocalApp:window.jimuConfig.isDevEdition})+appId+"/resources"}setResourceMap(resourceKey,resourceItemInfo){const{id,resourceUrl}=resourceItemInfo;this.resourceMap[resourceKey]=Object.assign(Object.assign({},this.resourceMap[resourceKey]),resourceItemInfo),this.blobToResourceMap[resourceItemInfo.blobUrl]={id,resourceUrl},(0,jimu_core.Vp3)().dispatch(builder_state_resource_extension_actions.AddResource(resourceKey,this.resourceMap[resourceKey]))}setResourceItemInfoStatus(resourceItemInfo,status){this.resourceMap&&this.resourceMap[resourceItemInfo.id]&&(resourceItemInfo.status=status,delete resourceItemInfo.file,this.setResourceMap(resourceItemInfo.id,resourceItemInfo))}clearResourceMap(){for(const resourceKey in this.resourceMap)this.resourceMap[resourceKey]&&window.URL.revokeObjectURL(this.resourceMap[resourceKey].blobUrl);this.resourceMap={},this.blobToResourceMap={}}clearValueWithoutInResourcesInDraft(appId,resourceUrlList){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){if(this.getAppId()!==appId&&Object.keys(this.resources).forEach((key=>{this.resources[key]=null})),resourceUrlList.length>0){const imageResourceList=yield this.getImageResourceListFromDraft(appId),iconResourceList=yield this.getIconResourceListFromDraft(appId),resourceUrlListInDraft=[...Object.values(imageResourceList).map((({resourcesPrefix,fileName})=>`${resourcesPrefix}/${fileName}`)),...Object.values(iconResourceList).map((({properties:{filename}})=>`images/icon_picker_in_setting/${filename}`))],shouldCleanResourceUrlList=resourceUrlList.filter((resource=>!resourceUrlListInDraft.includes(resource)));return yield Promise.resolve(shouldCleanResourceUrlList)}return yield Promise.resolve(resourceUrlList)}))}clearResourcesWithoutSaved(appId){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){if(appId)try{const portalUrlWithFull=this.getPortalUrlWithFull(appId),portalUrlWithTemplate=this.getPortalUrlWithTemplate(),{resources:portalResources}=yield this.fetchAppResourceInfoList(appId,{httpMethod:"GET"}),appConfig=(null==portalResources?void 0:portalResources.some((({resource})=>resource===AppResourceFilePath.Config)))||!1?yield this.fetchAppResource(appId,{fileName:AppResourceFilePath.Config,readAs:"json"}):{},isPortalUrlWithTemplateExp=new RegExp("^\\$\\{appResourceUrl\\}+(.)"),isPortalUrlWithFullExp=new RegExp("^"+portalUrlWithFull),resourcesMap={};jimu_core.VbA.replaceStringInAppConfig(appConfig,{matcher:(value,full)=>full?jimu_core.VbA.fullMatchResourceUrl(value):isPortalUrlWithTemplateExp.test(value)||isPortalUrlWithFullExp.test(value),handler:(value,full)=>{if(full){const resourceUrls=jimu_core.VbA.getResourceUrlsInString(value);for(const resourceUrl of resourceUrls)resourcesMap[resourceUrl]=resourceUrl}else resourcesMap[value]=value;return value},passIndicator:jimu_core.VbA.isFullReplace});const shouldClearResources=[];null==portalResources||portalResources.forEach((({resource})=>{resource===AppResourceFilePath.Config||resource===AppResourceFilePath.Image||resource===AppResourceFilePath.Icon||resourcesMap[portalUrlWithTemplate+resource.replace("_compress","")]||resourcesMap[portalUrlWithFull+resource.replace("_compress","")]||shouldClearResources.push(resource)}));const promiseList=(yield this.clearValueWithoutInResourcesInDraft(appId,shouldClearResources)).map((fileName=>this.removeAppResource({appId,fileName})));Promise.all(promiseList)}catch(error){console.error(error)}}))}formatRelatedImageResources(imageResourceList,relatedImageResourceList){const tempMap={},relatedImageResourcesConfig={},resourceIdsInAppConfig=[];for(let i=0;i<relatedImageResourceList.length;i++){const resourceId=relatedImageResourceList[i].fileName.split(".")[0];resourceIdsInAppConfig.push(resourceId)}return Object.keys(imageResourceList).forEach((id=>{imageResourceList[id].referredIds=[];const originId=imageResourceList[id].originId;resourceIdsInAppConfig.includes(id)&&(relatedImageResourcesConfig[id]=imageResourceList[id]),resourceIdsInAppConfig.includes(originId)&&(relatedImageResourcesConfig[originId]=imageResourceList[originId])})),Object.keys(relatedImageResourcesConfig).forEach((id=>{relatedImageResourcesConfig[id].referredIds=[];const originId=relatedImageResourcesConfig[id].originId;originId!==id&&(tempMap[originId]?tempMap[originId].referredIds.push(id):(tempMap[originId]=Object.assign({},relatedImageResourcesConfig[originId]),tempMap[originId].referredIds=[id]))})),Object.keys(tempMap).forEach((id=>{relatedImageResourcesConfig[id]&&(relatedImageResourcesConfig[id].referredIds=tempMap[id].referredIds)})),relatedImageResourcesConfig}checkResourcesUploadStatus(checkResources){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){if(checkResources.length>0){const checkResourcesPromiseArr=checkResources.map((checkResource=>this.resourceMap[checkResource].promise));return yield Promise.all(checkResourcesPromiseArr).then((()=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(jimu_core.kdB.Success)}))),(()=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(jimu_core.kdB.Error)})))).catch((error=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return console.error(error),yield Promise.reject(new Error(null))}))))}return yield Promise.resolve(jimu_core.kdB.Success)}))}upLoadResourceList(appResourceFilePath_1){return app_resource_manager_awaiter(this,arguments,void 0,(function*(appResourceFilePath,resourceList={},newAppId){const appId=newAppId||this.getAppId(),noLocalFileIconResourceList=yield this.upLoadLocalResource(resourceList),cleanedPortalResourceList=jimu_core.VbA.cleanPortalInfoFromResource(noLocalFileIconResourceList),file=new Blob([JSON.stringify(cleanedPortalResourceList)],{type:"application/json"}),[resourcesPrefix,fileName]=appResourceFilePath.split("/"),resourceItemInfo={appId,file,resourcesPrefix,fileName,type:jimu_core.vtl.Image};return yield this.upLoadAppResource(resourceItemInfo).then((()=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(cleanedPortalResourceList)})))).catch((err=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.reject(new Error(err))}))))}))}getAppInfo(appInfo){return app_resource_manager_awaiter(this,void 0,void 0,(function*(){const session=(0,portal_util.Ht)(appInfo);return yield(0,rest_service.Gq)(appInfo,{authentication:session}).then((result=>app_resource_manager_awaiter(this,void 0,void 0,(function*(){return yield Promise.resolve(result)}))))}))}}try{app_resource_manager_AppResourceManager.displayName="AppResourceManager",app_resource_manager_AppResourceManager.__docgenInfo={description:"The resource manager is used to process the resources in the app. It can be used to upload resources to the server, update the config, and to fetch resources from the server.\n\nApp resources refer to files used by the app, such as images, icons, and config.json. They are stored on the ArcGIS rest server associated with the app item.\nThe storage structure of the resources are as follows:\n{\n   resources: [\n       { resource: 'config/config.json' , ...}, // This file is the draft version appConfig\n       { resource: 'images/image-resources-list.json' , ...}, // This file is stored imageResources.\n       { resource: 'images/icon-resources-list.json' , ...}, // This file is stored iconResources.\n       { resource: 'images/widget_1/123456.jpg' , ...}, // This file is stored image item.\n       ...\n   ]\n}\n\nThese first 3 app resources are special. The config.json is the draft version appConfig.\nThe image-resources-list.json and icon-resources-list.json are used to manage other resources, we call them management resources, they don't have `ResourceItemInfo` but their content have `ResourceItemInfo` to manage the item resources.\nAll other resources are called resource items, they have `ResourceItemInfo`.\n\nThe manager handles mapping app resource URLs to the underlying storage location. So code can refer to a normalized URL like ${appResourceUrl}/images/widget1/image.png. And the manager will handle uploading resources to the proper /images/widget1/location.\n\nHere is how the resources are processed:\n * When uploading resources, it converts files to blobs and generates blob URLs.\n * When saving and updating the app config, it replaces blob URLs with the corresponding resource URLs.\n * When fetching resources from server, it replaces `${appResourceUrl}` with portalUrl and add token to the end of the url.",displayName:"AppResourceManager",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/app-resource-manager.tsx#AppResourceManager"]={docgenInfo:app_resource_manager_AppResourceManager.__docgenInfo,name:"AppResourceManager",path:"../jimu-for-builder/lib/app-resource-manager.tsx#AppResourceManager"})}catch(__react_docgen_typescript_loader_error){}try{_instance.displayName="AppResourceManager._instance",_instance.__docgenInfo={description:"The resource manager is used to process the resources in the app. It can be used to upload resources to the server, update the config, and to fetch resources from the server.\n\nApp resources refer to files used by the app, such as images, icons, and config.json. They are stored on the ArcGIS rest server associated with the app item.\nThe storage structure of the resources are as follows:\n{\n   resources: [\n       { resource: 'config/config.json' , ...}, // This file is the draft version appConfig\n       { resource: 'images/image-resources-list.json' , ...}, // This file is stored imageResources.\n       { resource: 'images/icon-resources-list.json' , ...}, // This file is stored iconResources.\n       { resource: 'images/widget_1/123456.jpg' , ...}, // This file is stored image item.\n       ...\n   ]\n}\n\nThese first 3 app resources are special. The config.json is the draft version appConfig.\nThe image-resources-list.json and icon-resources-list.json are used to manage other resources, we call them management resources, they don't have `ResourceItemInfo` but their content have `ResourceItemInfo` to manage the item resources.\nAll other resources are called resource items, they have `ResourceItemInfo`.\n\nThe manager handles mapping app resource URLs to the underlying storage location. So code can refer to a normalized URL like ${appResourceUrl}/images/widget1/image.png. And the manager will handle uploading resources to the proper /images/widget1/location.\n\nHere is how the resources are processed:\n * When uploading resources, it converts files to blobs and generates blob URLs.\n * When saving and updating the app config, it replaces blob URLs with the corresponding resource URLs.\n * When fetching resources from server, it replaces `${appResourceUrl}` with portalUrl and add token to the end of the url.",displayName:"AppResourceManager._instance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/app-resource-manager.tsx#AppResourceManager._instance"]={docgenInfo:app_resource_manager_AppResourceManager._instance.__docgenInfo,name:"AppResourceManager._instance",path:"../jimu-for-builder/lib/app-resource-manager.tsx#AppResourceManager._instance"})}catch(__react_docgen_typescript_loader_error){}var template_utils_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function processForTemplate(templateJson,widgetId,defaultMessages){(null==templateJson?void 0:templateJson.config)&&jimu_core.VbA.fixLayoutIds(templateJson.config);const intl=widgetId?jimu_core.Ruy.getIntl(widgetId,"setting"):jimu_core.Ruy.getIntl();return templateJson=jimu_core.WpD.replaceI18nPlaceholdersInObject(templateJson,intl,defaultMessages)}const getExpressModeTemplateNames=templateType=>template_utils_awaiter(void 0,void 0,void 0,(function*(){const templatesUrl=jimu_core.SRz.resolveModuleFullPath("templates/"),templatesInfo=yield fetch(`${templatesUrl}templates-info.json`).then((res=>res.json()));if(templatesInfo[templateType]){const templateNames=templatesInfo[templateType].filter((t=>t.tags&&t.tags.includes("WAB classic"))).map((t=>t.name));return Promise.resolve(templateNames)}return Promise.resolve([])}));var builder_app_sync_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function publishAppConfigChangeToApp(appConfig){publishEventToApp(`to_app.${ToAppMessage.AppConfigChanged}`,appConfig)}function publishAppInfoChangeToApp(appInfo){publishEventToApp(`to_app.${ToAppMessage.AppInfoChanged}`,appInfo)}function publishDialogInfosChangeToApp(dialogInfos){publishEventToApp(`to_app.${ToAppMessage.DialogInfosChanged}`,dialogInfos)}function publishAppModeChangeToApp(appMode){publishEventToApp(`to_app.${ToAppMessage.ChangeAppMode}`,appMode)}function publishPageChangeToApp(pageId){publishEventToApp(`to_app.${ToAppMessage.ChangePage}`,pageId)}function publishDialogChangeToApp(dialogId){publishEventToApp(`to_app.${ToAppMessage.ChangeDialog}`,dialogId)}function publishChangeSelectionToApp(selection){publishEventToApp(`to_app.${ToAppMessage.ChangeSelection}`,selection)}function publishChangeWidgetStatePropToApp(alterState){publishEventToApp(`to_app.${ToAppMessage.ChangeWidgetStateProp}`,alterState)}function publishUtilityStateChangeToApp(utilityId,state,isSignInError){publishEventToApp(`to_app.${ToAppMessage.UtilityStateChanged}`,{utilityId,state,isSignInError})}function publishChangeWidgetMutableStatePropToApp(alterState){publishEventToApp(`to_app.${ToAppMessage.ChangeWidgetMutableStateProp}`,alterState)}function publishKeyboardToApp(event){publishEventToApp(`to_app.${ToAppMessage.BuilderTriggerKeyboard}`,event)}function publishChangeBrowserSizeModeToApp(mode){publishEventToApp(`to_app.${ToAppMessage.ChangeBrowserSizeMode}`,mode)}function publishChangeSessionToApp(){publishEventToApp(`to_app.${ToAppMessage.BuilderSessionChanged}`,jimu_core.Cvv.getInstance().getSessions())}function publishNoPermissionResourceInfoListChangeToApp(){publishEventToApp(`to_app.${ToAppMessage.BuilderNoPermissionResourceInfoListChanged}`,jimu_core.Cvv.getInstance().getNoPermissionResourceInfoList())}function publishChangeZoomScaleToApp(zoomScale){publishEventToApp(`to_app.${ToAppMessage.ChangeZoomScale}`,zoomScale)}function publishActivePagePartChangeToApp(pagePart){publishEventToApp(`to_app.${ToAppMessage.ActivePagePartChanged}`,pagePart)}function publishAnimationPreviewToApp(data){publishEventToApp(`to_app.${ToAppMessage.AnimationPreview}`,data)}function publishHoverPreviewToApp(data){publishEventToApp(`to_app.${ToAppMessage.HoverPreview}`,data)}function publishSectionNavInfoToApp(sectionId,navInfo){publishEventToApp(`to_app.${ToAppMessage.SectionNavInfoChanged}`,{sectionId,navInfo})}function publishScreenGroupNavInfoToApp(screenGroupId,activeIndex){publishEventToApp(`to_app.${ToAppMessage.ScreenGroupNavInfoChanged}`,{screenGroupId,activeIndex})}function publishTocHoverInfoToApp(layoutInfo,hovered){publishEventToApp(`to_app.${ToAppMessage.TocHoverInfoChanged}`,{layoutInfo,hovered})}function publishSetClientIdAlertIsCancelled(portalUrl){publishEventToApp(`to_app.${ToAppMessage.SetClientIdAlertIsCancelled}`,{portalUrl})}function publishOpenCookieBannerToApp(openCookieBanner){publishEventToApp(`to_app.${ToAppMessage.OpenCookieBanner}`,{isOpen:openCookieBanner})}function publishOpenCookieBannerByPrivacyPanelToApp(isCookieBannerOpenByPrivacyPanel){publishEventToApp(`to_app.${ToAppMessage.OpenCookieBannerByPrivacyPanel}`,{isOpen:isCookieBannerOpenByPrivacyPanel})}function publishOpenCookieSettingsWindowToApp(isOpen){publishEventToApp(`to_app.${ToAppMessage.OpenCookieSettingsWindow}`,{isOpen})}function publishWidgetToolbarStateChangeToApp(widgetId,toolNames){publishEventToApp(`to_app.${ToAppMessage.WidgetToolbarStateChange}`,{widgetId,toolNames})}function publishSetWidgetIsInlineEditingStateToApp(widgetId,isInlineEditing){publishEventToApp(`to_app.${ToAppMessage.SetWidgetIsInlineEditingState}`,{widgetId,isInlineEditing})}function publishWidgetStateChangeToApp(widgetId,prop,value){publishEventToApp(`to_app.${ToAppMessage.WidgetStateChange}`,{widgetId,prop,value})}function publishWidgetRuntimeInfoChangeToApp(widgetId,prop,value){publishEventToApp(`to_app.${ToAppMessage.WidgetRuntimeInfoChange}`,{widgetId,prop,value})}function publishEventToApp(action,data){window._builderPubsub.publishSync(action,data)}function listenAppEvents(){window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppSessionChanged}`,((evt,sessions)=>{jimu_core.Cvv.getInstance().syncSessionsFromOtherWindow(sessions)})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppNoPermissionResourceInfoListChanged}`,((evt,noPermissionResourceInfoList)=>{jimu_core.Cvv.getInstance().syncNoPermissionResourceInfoListFromOtherWindow(noPermissionResourceInfoList)})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.NeedToCheck498Error}`,((evt,url)=>{jimu_core.Cvv.getInstance().handleInvalidToken(url)})),window._builderPubsub.subscribe("to_builder",(function(evt,data){console.debug(evt,data)})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppStateChanged}`,((evt,appState)=>{var _a;if((0,jimu_core.Vp3)().getState().builder.currentAppId!==appState.appId&&((0,jimu_core.Vp3)().dispatch(actions.changeCurrentApp(appState.appId)),(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderAppConfigClear()),(0,jimu_core.Vp3)().getState().queryObject.id!==appState.appId&&jimu_core.e7y.changeQueryObject({id:appState.appId})),!(0,jimu_core.Vp3)().getState().appStateInBuilder||(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig!==appState.appConfig){const newAppConfig=appState.appConfig,oldAppConfig=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appConfig;if(newAppConfig&&oldAppConfig){if(Object.keys(newAppConfig.widgets||{}).find((wId=>newAppConfig.widgets[wId]&&oldAppConfig.widgets[wId]&&newAppConfig.widgets[wId].version!==oldAppConfig.widgets[wId].version)))return void(0,jimu_core.Vp3)().dispatch(app_state_redux_store_extension_actions.inAppAppStateChanged(appState));const removedWidgets=Object.keys(oldAppConfig.widgets).filter((wId=>!newAppConfig.widgets[wId]));(0,jimu_core.Vp3)().dispatch(actions.widgetsRemoved(removedWidgets));const newWidgets=Object.keys(newAppConfig.widgets).filter((wId=>!oldAppConfig.widgets[wId])).map((wId=>({widgetId:wId,widgetUri:newAppConfig.widgets[wId].uri})));(0,jimu_core.Vp3)().dispatch(actions.widgetsAdded(newWidgets))}if(newAppConfig&&!oldAppConfig&&!appState.userLocaleChanged)if(jimu_core.YQG.getInstance().showTemplateGuide(),jimu_core.WpD.isExpressMode()){const templateName=newAppConfig.template;getExpressModeTemplateNames("app").then((templateNames=>{templateNames.includes(templateName)&&jimu_core.YQG.getInstance().startGuide({id:`general-express-mode-${templateName}`,type:jimu_core.aOJ.Program,level:jimu_core.a8_.Builder},!0)}))}else jimu_core.YQG.getInstance().startGuide({id:"opening-tour",type:jimu_core.aOJ.Program,level:jimu_core.a8_.Builder},!0);appState.appConfig&&(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderPutAppConfigIntoHistory({appConfig:appState.appConfig,appInfo:appState.appInfo}))}(0,jimu_core.Vp3)().dispatch(app_state_redux_store_extension_actions.inAppAppStateChanged(appState))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppAddResource}`,((evt,resource)=>{const appResourceManager=app_resource_manager_AppResourceManager.getInstance();app_resource_manager_AppResourceManager.getBlobByBlobUrl(resource.file).then((blob=>builder_app_sync_awaiter(this,void 0,void 0,(function*(){resource.file=blob,appResourceManager.upLoadAppResource(resource),resource.type===jimu_core.vtl.Image&&resource.originId&&app_resource_manager_AppResourceManager.getInstance().updateImageResourceItemInfo(resource)}))))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppClearResources}`,((evt,appId)=>{app_resource_manager_AppResourceManager.getInstance().clearResources(appId)})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppTriggerKeyboard}`,((evt,event)=>{jimu_core.LLV.triggerEvent(event)})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.SetLayoutTools}`,((evt,tools)=>{(0,jimu_core.Vp3)().dispatch(actions.setLayoutTools(tools))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.ClearLastAppConfigFromHistory}`,(evt=>{(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderRemoveLastAppConfigFromHistory())})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.SetIsBusy}`,((evt,isBusy)=>{(0,jimu_core.Vp3)().dispatch(jimu_core.tRc.setIsBusy(isBusy))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.ConfirmDelete}`,((evt,itemToDelete)=>{(0,jimu_core.Vp3)().dispatch(actions.confirmDeleteContentChanged(itemToDelete))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.NeedToRegisterClinetId}`,((evt,portalInfo)=>{(0,jimu_core.Vp3)().dispatch(jimu_core.tRc.addToRegisterClientIdList(portalInfo.portalUrl,portalInfo.needToSignIn,portalInfo.serviceUrl,portalInfo.forceLogin))})),window._builderPubsub.subscribe(`to_builder.${ToBuilderMessage.AppIsLoaded}`,((evt,isBusy)=>{var _a;const state=(0,jimu_core.Vp3)().getState(),mainPortalInfo={portalUrl:state.portalUrl,clientId:state.clientId,isWebTier:state.isWebTier};publishEventToApp(`to_app.${ToAppMessage.SetMainPortal}`,mainPortalInfo),(0,jimu_core.Yzm)(((prePortalUrl,portalUrl)=>{publishEventToApp(`to_app.${ToAppMessage.SetMainPortal}`,{portalUrl})}),["portalUrl"]),(0,jimu_core.Vp3)().getState().portalSelf&&publishEventToApp(`to_app.${ToAppMessage.PortalSelfChanged}`,(0,jimu_core.Vp3)().getState().portalSelf),(0,jimu_core.Yzm)(((prePortalSelf,portalSelf)=>{publishEventToApp(`to_app.${ToAppMessage.PortalSelfChanged}`,portalSelf)}),["portalSelf"]),jimu_core.kd9.getAppInfo(null===(_a=(0,jimu_core.Vp3)().getState().queryObject)||void 0===_a?void 0:_a.id).then((appInfo=>{if(window.isExpressBuilder&&!appInfo.typeKeywords.includes(jimu_core.aH5.jJ)){const qo=(0,jimu_core.Vp3)().getState().queryObject.without("mode"),url=new URL(window.location.href);url.search=jimu_core._Lx.stringify(qo),window.location.href=url.toString()}else if(!window.isExpressBuilder&&appInfo.typeKeywords.includes(jimu_core.aH5.jJ)){const qo=(0,jimu_core.Vp3)().getState().queryObject.set("mode","express"),url=new URL(window.location.href);url.search=jimu_core._Lx.stringify(qo),window.location.href=url.toString()}publishEventToApp(`to_app.${ToAppMessage.AppInfoChanged}`,appInfo)})),(0,jimu_core.Vp3)().getState().user&&publishEventToApp(`to_app.${ToAppMessage.UserSignIn}`,(0,jimu_core.Vp3)().getState().user),publishChangeSessionToApp()}))}class AppWidgetManager extends jimu_core.SS0{static getInstance(){return window.jimuConfig.isBuilder?window._appWindow&&window._appWindow._widgetManager:jimu_core.SS0.getInstance()}}class BaseContentService{addParentToList(appConfig,existingParents,parent){if(!existingParents||0===existingParents.length)return[parent];if(!existingParents.some((info=>info.layoutId===parent.layoutId&&info.layoutItemId===parent.layoutItemId))){const existingParentLayoutId=existingParents[0].layoutId,existingParentLayout=appConfig.layouts[existingParentLayoutId],addingParentLayout=appConfig.layouts[parent.layoutId];if(existingParentLayoutId===parent.layoutId||addingParentLayout.parent.id!==existingParentLayout.parent.id||addingParentLayout.parent.type!==existingParentLayout.parent.type)return[parent];return[].concat(existingParents,parent)}return existingParents}removeParentFromList(existingParents,parent){return existingParents&&0!==existingParents.length?existingParents.filter((item=>item.layoutId!==parent.layoutId||item.layoutItemId!==parent.layoutItemId)):[]}}const DEFAULT_LAYOUT_TYPE=jimu_core.p5K.FixedLayout;class LayoutServiceProvider{static getInstance(){return LayoutServiceProvider.instance||(LayoutServiceProvider.instance=new LayoutServiceProvider),LayoutServiceProvider.instance}static getService(appConfig,layoutId){var _a;const layoutJson=appConfig.layouts[layoutId],service=LayoutServiceProvider.getInstance().getServiceByType(null!==(_a=null==layoutJson?void 0:layoutJson.type)&&void 0!==_a?_a:DEFAULT_LAYOUT_TYPE);return service||LayoutServiceProvider.getInstance().getServiceByType(DEFAULT_LAYOUT_TYPE)}static getServiceFromSizeModeLayout(appConfig,layouts){var _a;const firstLayoutId=Object.values(layouts)[0],defaultLayoutId=layouts[appConfig.mainSizeMode];return null!==(_a=LayoutServiceProvider.getService(appConfig,firstLayoutId))&&void 0!==_a?_a:LayoutServiceProvider.getService(appConfig,defaultLayoutId)}constructor(){this.serviceMap=new Map}registerService(type,service){this.serviceMap.set(type,service)}getServiceByType(type){return this.serviceMap.get(null!=type?type:DEFAULT_LAYOUT_TYPE)}}var templates=__webpack_require__("../jimu-for-builder/templates.ts"),translations_default=__webpack_require__("../jimu-for-builder/lib/translations/default.ts"),util_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function getDuplicateLabel(appConfig,type,label){const[prefix]=jimu_core.VbA.parseUniqueLabel(label);let newLabel=jimu_core.VbA.getUniqueLabel(appConfig,type,prefix);return newLabel===prefix&&(newLabel=`${prefix} 1`),newLabel}function util_makeSureTemplateConfig(templateJson){return util_awaiter(this,void 0,void 0,(function*(){if(!templateJson.config){const templateContent=yield(0,templates.getTemplateConfig)(templateJson.type,templateJson.name);jimu_core.VbA.fixLayoutIds(templateContent),jimu_core.WpD.replaceI18nPlaceholdersInObject(templateContent,jimu_core.Ruy.getIntl(),translations_default.A),templateJson.config=templateContent}}))}function findWidgetAppConfigOperationExtension(widgetId){return findAppConfigOperationExtensions().find((item=>item.widgetId===widgetId))}function findAppConfigOperationExtensions(){let extensionManager;extensionManager=window.jimuConfig.isBuilder?window._appWindow._extensionManager:window._extensionManager;return(null==extensionManager?void 0:extensionManager.getExtensions(jimu_core.vZE.R6.AppConfigOperations))||[]}const data_source_service=new class DataSourceService{removeDataSource(appConfig,dataSourceId){if(!appConfig.dataSources||!appConfig.dataSources[dataSourceId])return appConfig;console.debug("removeDataSource",dataSourceId);let updatedAppConfig=appConfig;const appConfigOperationExtensions=findAppConfigOperationExtensions();try{appConfigOperationExtensions.forEach((extension=>{if(extension.dataSourceWillRemove){if(extension.widgetId){const widgetJson=updatedAppConfig.widgets[extension.widgetId];if(!widgetJson||!widgetJson.useDataSources||!widgetJson.useDataSources.find((useDs=>useDs.dataSourceId===dataSourceId||useDs.mainDataSourceId===dataSourceId)))return}updatedAppConfig=extension.dataSourceWillRemove(updatedAppConfig,dataSourceId)}}))}catch(e){console.error("Error when calling dataSourceWillRemove",e)}return updatedAppConfig=updatedAppConfig.set("dataSources",updatedAppConfig.dataSources.without(dataSourceId)),updatedAppConfig=this.removeUseDataSource(updatedAppConfig,dataSourceId),updatedAppConfig}removeUseDataSource(appConfig,dataSourceId){var _a,_b;if(!dataSourceId)return appConfig;console.debug("removeUseDataSource",dataSourceId);let updatedAppConfig=appConfig;return Object.entries(null!==(_a=updatedAppConfig.widgets)&&void 0!==_a?_a:{}).forEach((([wId,wJson])=>{if(wJson.useDataSources&&wJson.useDataSources.find((useDs=>this.shouldBeRemoved(useDs,dataSourceId)))){const ext=findWidgetAppConfigOperationExtension(wId);(null==ext?void 0:ext.useDataSourceWillChange)&&(updatedAppConfig=ext.useDataSourceWillChange(updatedAppConfig,dataSourceId,null)),updatedAppConfig=updatedAppConfig.setIn(["widgets",wId,"useDataSources"],wJson.useDataSources.filter((useDs=>!this.shouldBeRemoved(useDs,dataSourceId))))}wJson.outputDataSources&&wJson.outputDataSources.find((outDsId=>outDsId===dataSourceId))&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",wId,"outputDataSources"],wJson.outputDataSources.filter((outDsId=>outDsId!==dataSourceId))))})),Object.keys(null!==(_b=updatedAppConfig.messageConfigs)&&void 0!==_b?_b:{}).forEach((mcId=>{var _a;const actions=null===(_a=updatedAppConfig.messageConfigs[mcId].actions)||void 0===_a?void 0:_a.asMutable({deep:!0});null==actions||actions.forEach(((action,index)=>{var _a;if(null===(_a=null==action?void 0:action.useDataSources)||void 0===_a?void 0:_a.find((useDs=>this.shouldBeRemoved(useDs,dataSourceId)))){if(!action.widgetId){findAppConfigOperationExtensions().filter((ext=>!ext.widgetId)).forEach((ext=>{(null==ext?void 0:ext.useDataSourceWillChange)&&(updatedAppConfig=ext.useDataSourceWillChange(updatedAppConfig,dataSourceId,null))}))}actions[index].useDataSources=action.useDataSources.filter((useDs=>!this.shouldBeRemoved(useDs,dataSourceId))),updatedAppConfig=updatedAppConfig.setIn(["messageConfigs",mcId,"actions"],actions)}}))})),Object.entries(updatedAppConfig.dataSources).forEach((([dsId,dsJson])=>{dsJson.originDataSources&&dsJson.originDataSources.find((useDs=>this.shouldBeRemoved(useDs,dataSourceId)))&&(updatedAppConfig=this.removeDataSource(updatedAppConfig,dsId))})),updatedAppConfig}duplicateDataSource(appConfig,fromWidgetId,toWidgetId,dataSourceId,context){if(!appConfig.dataSources||!appConfig.dataSources[dataSourceId])return null;console.debug("duplicate data source",dataSourceId);const dsJson=appConfig.dataSources[dataSourceId];let nextId=getUniqueId("dataSource");dsJson.isOutputFromWidget&&(nextId=dataSourceId.startsWith(`${fromWidgetId}_output`)?dataSourceId.replace(`${fromWidgetId}_output`,`${toWidgetId}_output`):`${toWidgetId}_output_${nextId}`);const newDsJson=dsJson.set("id",nextId).set("label",getDuplicateLabel(appConfig,"dataSource",dsJson.label)),updatedAppConfig=this.addDataSource(appConfig,newDsJson);return context&&(context[dataSourceId]=newDsJson.id),[updatedAppConfig,newDsJson]}addDataSource(appConfig,dataSourceJson){return appConfig.dataSources&&appConfig.dataSources[dataSourceJson.id]?appConfig:appConfig.setIn(["dataSources",dataSourceJson.id],dataSourceJson)}updateAfterChangingLayout(appConfig,widgetId,toLayoutId){if(!appConfig.widgets[widgetId])return appConfig;console.debug(widgetId,"update data source after move to",toLayoutId);let widgetJson=appConfig.widgets[widgetId],updatedAppConfig=appConfig;const parentWidgetId=layout_runtime.searchUtils.getWidgetIdThatUseTheLayoutId(updatedAppConfig,toLayoutId);if(parentWidgetId){const parentWidgetJson=updatedAppConfig.widgets[parentWidgetId];parentWidgetJson.manifest.properties.passDataSourceToChildren&&(widgetJson=this.mergeUseDataSource(parentWidgetJson,widgetJson),updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetJson.id],widgetJson))}return updatedAppConfig}mergeUseDataSource(fromWidgetJson,toWidgetJson){if(!fromWidgetJson.useDataSources)return toWidgetJson;const fromUseDs=fromWidgetJson.useDataSources.map((useDs=>useDs.without("fields")));return toWidgetJson.useDataSources?(fromUseDs.forEach((useDs=>{useDs.dataViewId?toWidgetJson.useDataSources.find((ds=>ds.dataSourceId===useDs.dataSourceId&&ds.dataViewId===useDs.dataViewId))||(toWidgetJson=toWidgetJson.set("useDataSources",toWidgetJson.useDataSources.concat([useDs]))):toWidgetJson.useDataSources.find((ds=>ds.dataSourceId===useDs.dataSourceId))||(toWidgetJson=toWidgetJson.set("useDataSources",toWidgetJson.useDataSources.concat([useDs])))})),toWidgetJson.set("useDataSourcesEnabled",!0)):toWidgetJson.set("useDataSources",fromUseDs).set("useDataSourcesEnabled",!0)}shouldBeRemoved(useDs,realToBeRemovedDsId){return!useDs||useDs.dataSourceId===realToBeRemovedDsId||useDs.mainDataSourceId===realToBeRemovedDsId||useDs.rootDataSourceId===realToBeRemovedDsId}};const message_action_service=new class MessageActionService{duplicate(appConfig,widgetId,newWidgetId,context){const messageConfigs=appConfig.messageConfigs;if(!messageConfigs)return[appConfig,null];console.debug("duplicate message configs from",widgetId,"to",newWidgetId);let updatedAppConfig=appConfig,newMcId=null;return Object.keys(messageConfigs).forEach((mcId=>{if(messageConfigs[mcId].widgetId===widgetId){const newMJson=messageConfigs[mcId].set("id",getUniqueId("messageConfig")).set("widgetId",newWidgetId);newMcId=newMJson.id,updatedAppConfig=updatedAppConfig.setIn(["messageConfigs",newMJson.id],newMJson),context[mcId]=newMJson.id}if(messageConfigs[mcId].actions){const toAdd=[];messageConfigs[mcId].actions.forEach((actionJson=>{if(actionJson.widgetId===widgetId){const newActionJson=actionJson.set("widgetId",newWidgetId);toAdd.push(newActionJson)}})),toAdd.length>0&&(updatedAppConfig=updatedAppConfig.setIn(["messageConfigs",messageConfigs[mcId].id,"actions"],messageConfigs[mcId].actions.concat(toAdd)))}})),[updatedAppConfig,newMcId]}removeFromWidget(appConfig,widgetId){const messageConfigs=appConfig.messageConfigs;if(!messageConfigs)return appConfig;console.debug("remove message and action in",widgetId);const messageConfigsKeys=Object.keys(messageConfigs);let messageConfigsWithoutWidgetId=(0,jimu_core.J3Z)({});for(let i=0;i<messageConfigsKeys.length;i++)messageConfigs[messageConfigsKeys[i]].widgetId!==widgetId&&(messageConfigsWithoutWidgetId=messageConfigsWithoutWidgetId.setIn([messageConfigs[messageConfigsKeys[i]].id],messageConfigs[messageConfigsKeys[i]]));const newMessageConfigsKeys=Object.keys(messageConfigsWithoutWidgetId);for(let i=0;i<newMessageConfigsKeys.length;i++){const actions=messageConfigsWithoutWidgetId[newMessageConfigsKeys[i]].actions;if(0===actions.length)continue;const actionsWithoutWidgetId=actions.filter((action=>action.widgetId!==widgetId)),tempActions=Object.assign([],actionsWithoutWidgetId);messageConfigsWithoutWidgetId=messageConfigsWithoutWidgetId.setIn([messageConfigs[newMessageConfigsKeys[i]].id,"actions"],tempActions)}return appConfig.set("messageConfigs",messageConfigsWithoutWidgetId)}};const data_action_service=new class DataActionService{removeFromWidget(appConfig,widgetId){var _a;const widget=appConfig.widgets[widgetId];if(!(null===(_a=widget.manifest)||void 0===_a?void 0:_a.dataActions)||0===widget.manifest.dataActions.length)return appConfig;console.debug("remove data action in",widgetId);const actionNames=widget.manifest.dataActions.map((dataAction=>dataAction.name));let updatedAppConfig=appConfig;return Object.keys(appConfig.widgets).forEach((id=>{let widgetItem=appConfig.widgets[id];widgetItem.dataActions&&actionNames.forEach((actionName=>{var _a,_b;const dataActionConfig=null===(_a=widgetItem.dataActions)||void 0===_a?void 0:_a[actionName];if(dataActionConfig){const newActions=null===(_b=dataActionConfig.actions)||void 0===_b?void 0:_b.without(widgetId);0===Object.keys(newActions||{}).length?(widgetItem=widgetItem.set("dataActions",widgetItem.dataActions.without(actionName)),0===Object.keys(widgetItem.dataActions).length&&(widgetItem=widgetItem.without("dataActions"))):widgetItem=widgetItem.setIn(["dataActions",actionName,"actions"],newActions),updatedAppConfig=updatedAppConfig.setIn(["widgets",id],widgetItem)}}))})),updatedAppConfig}};const usemap_service=new class UseMapService{remove(appConfig,mapWidgetId){let updatedAppConfig=appConfig;return console.debug("remove used map widgets",mapWidgetId),Object.keys(updatedAppConfig.widgets).forEach((widgetId=>{var _a;const widgetJson=updatedAppConfig.widgets[widgetId];if(null===(_a=widgetJson.useMapWidgetIds)||void 0===_a?void 0:_a.includes(mapWidgetId)){const useMapWidgetIds=widgetJson.useMapWidgetIds.filter((id=>id!==mapWidgetId));updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId,"useMapWidgetIds"],useMapWidgetIds)}})),updatedAppConfig}};function isSameLayoutInfo(info1,info2){return info1.layoutId===info2.layoutId&&info1.layoutItemId===info2.layoutItemId}const placeholder_service=new class PlaceholderService{isSupported(){var _a,_b,_c;let state;window.jimuConfig.isInBuilder?state=(0,jimu_core.Vp3)().getState():window.jimuConfig.isBuilder&&(state=(0,jimu_core.Vp3)().getState().appStateInBuilder);const isTemplateBuilder=(null===(_a=null==state?void 0:state.appInfo)||void 0===_a?void 0:_a.type)===jimu_core.uCV.Template,isDesignMode=(null===(_b=null==state?void 0:state.appRuntimeInfo)||void 0===_b?void 0:_b.appMode)===jimu_core.$0N.Design,isExpressMode=(null===(_c=null==state?void 0:state.appRuntimeInfo)||void 0===_c?void 0:_c.appMode)===jimu_core.$0N.Express;return isTemplateBuilder&&isDesignMode||isExpressMode}getNextPlaceholderId(appConfig){var _a;const placeholderIds=Object.keys(null!==(_a=appConfig.placeholderInfos)&&void 0!==_a?_a:{}).map((id=>+id)).sort(((a,b)=>a-b));let id=1;for(let i=0;i<placeholderIds.length&&id===placeholderIds[i];i++)id++;return id}addAsSyncablePlaceholder(appConfig,layoutInfo){if(!this.isSupported())return appConfig;const currentSizeMode=(0,jimu_core.Vp3)().getState().browserSizeMode;if(currentSizeMode!==appConfig.mainSizeMode)return appConfig;const containerInfo=layout_runtime.searchUtils.getRootContainerInfoOfLayout(appConfig,layoutInfo.layoutId,currentSizeMode),placeholderId=this.getNextPlaceholderId(appConfig);return appConfig.setIn(["placeholderInfos",`${placeholderId}`,"id"],placeholderId).setIn(["placeholderInfos",`${placeholderId}`,"rootContainer"],containerInfo).setIn(["placeholderInfos",`${placeholderId}`,"layoutInfo"],layoutInfo)}getPlaceholderInfo(appConfig,layoutInfo){var _a;if(!this.isSupported())return null;let result=null;return Object.keys(null!==(_a=appConfig.placeholderInfos)&&void 0!==_a?_a:{}).some((pid=>{var _a;const pInfo=appConfig.placeholderInfos[pid];return isSameLayoutInfo(pInfo.layoutInfo,layoutInfo)?(result=pInfo,!0):Object.keys(null!==(_a=pInfo.syncs)&&void 0!==_a?_a:{}).some((sizemode=>!!isSameLayoutInfo(pInfo.syncs[sizemode],layoutInfo)&&(result=pInfo,!0)))})),result}afterLayoutItemMoved(appConfig,fromLayoutInfo,toLayoutInfo){var _a;if(!this.isSupported())return appConfig;let updatedAppConfig=appConfig;const placeholderInfo=this.getPlaceholderInfo(appConfig,fromLayoutInfo);if(placeholderInfo){if(isSameLayoutInfo(placeholderInfo.layoutInfo,fromLayoutInfo))return updatedAppConfig=updatedAppConfig.setIn(["placeholderInfos",placeholderInfo.id,"layoutInfo"],toLayoutInfo),updatedAppConfig;const sizeModes=Object.keys(null!==(_a=placeholderInfo.syncs)&&void 0!==_a?_a:{});for(let i=0;i<sizeModes.length;i++){const sizemode=sizeModes[i];if(isSameLayoutInfo(placeholderInfo.syncs[sizemode],fromLayoutInfo))return updatedAppConfig=updatedAppConfig.setIn(["placeholderInfos",placeholderInfo.id,"syncs",sizemode],toLayoutInfo),updatedAppConfig}}return updatedAppConfig}afterLayoutItemCopied(appConfig,fromLayoutInfo,toLayoutInfo){if(!this.isSupported())return appConfig;const layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,fromLayoutInfo);if(layoutItem.widgetId||layoutItem.sectionId)return appConfig;const placeholderInfo=this.getPlaceholderInfo(appConfig,fromLayoutInfo);return placeholderInfo&&isSameLayoutInfo(placeholderInfo.layoutInfo,fromLayoutInfo)?this.addAsSyncablePlaceholder(appConfig,toLayoutInfo):appConfig}afterLayoutItemRemoved(appConfig,layoutInfo){var _a;if(!this.isSupported())return appConfig;const placeholderInfo=this.getPlaceholderInfo(appConfig,layoutInfo);if(placeholderInfo){const placeholderInfos=appConfig.placeholderInfos;if(isSameLayoutInfo(placeholderInfo.layoutInfo,layoutInfo))return appConfig.set("placeholderInfos",placeholderInfos.without(placeholderInfo.id));const sizeModes=Object.keys(null!==(_a=placeholderInfo.syncs)&&void 0!==_a?_a:{});for(let i=0;i<sizeModes.length;i++){const sizemode=sizeModes[i];if(isSameLayoutInfo(placeholderInfo.syncs[sizemode],layoutInfo))return 1===sizeModes.length?appConfig.setIn(["placeholderInfos",placeholderInfo.id],placeholderInfo.without("syncs")):appConfig.setIn(["placeholderInfos",placeholderInfo.id,"syncs"],placeholderInfo.syncs.without(sizemode))}}return appConfig}};var widget_place_holder=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-place-holder.svg"),widget_place_holder_default=__webpack_require__.n(widget_place_holder),widget_fixed_panel=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-fixed-panel.svg"),widget_fixed_panel_default=__webpack_require__.n(widget_fixed_panel),widget_row=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-row.svg"),widget_row_default=__webpack_require__.n(widget_row),widget_column=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-column.svg"),widget_column_default=__webpack_require__.n(widget_column),widget_service_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function hasEmbeddedLayoutInWidget(manifest){var _a,_b;return(null==manifest?void 0:manifest.widgetType)===jimu_core.xOw.Layout||null!==(_b=null===(_a=null==manifest?void 0:manifest.properties)||void 0===_a?void 0:_a.hasEmbeddedLayout)&&void 0!==_b&&_b}function getLayoutIcon(layoutType){switch(layoutType){case jimu_core.p5K.FixedLayout:return widget_fixed_panel_default();case jimu_core.p5K.RowLayout:return widget_row_default();case jimu_core.p5K.ColumnLayout:return widget_column_default();default:return null}}const widget_service=new class widget_service_WidgetService extends BaseContentService{constructor(){super(),this.dsService=data_source_service,this.messageActionService=message_action_service,this.dataActionService=data_action_service,this.useMapService=usemap_service}createFromTemplate(appConfig,templateJson,widgetId,sizeModeList,context,options){return widget_service_awaiter(this,void 0,void 0,(function*(){var _a,_b;if(context[widgetId]){const widgetJson=appConfig.widgets[context[widgetId]];if(!widgetJson.layouts)return[appConfig,context[widgetId]];let updatedAppConfig=appConfig;const originWidget=templateJson.config.widgets[widgetId];for(let i=0;i<sizeModeList.length;i++){const sizeMode=sizeModeList[i],layoutNames=Object.keys(originWidget.layouts).filter((layoutName=>{var _a;return Object.keys(null!==(_a=originWidget.layouts[layoutName])&&void 0!==_a?_a:{}).length>0}));for(let j=0;j<layoutNames.length;j++){const name=layoutNames[j];if(widgetJson.layouts[name][sizeMode])continue;const layoutId=originWidget.layouts[name][sizeMode],service=LayoutServiceProvider.getService(templateJson.config,layoutId),dupResult=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.Widget,context[widgetId],context);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",context[widgetId],"layouts",name,sizeMode],newLayoutId))}}return[updatedAppConfig,context[widgetId]]}const isBlock=null!==(_a=null==options?void 0:options.isBlock)&&void 0!==_a&&_a;yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config,blockWidgetId=Object.keys(templateConfig.widgets).find((wId=>"widgets/layout/row/"===templateConfig.widgets[wId].uri));widgetId=null!=widgetId?widgetId:blockWidgetId;const templateWidget=templateConfig.widgets[widgetId],loadedJson=yield AppWidgetManager.getInstance().handleNewWidgetJson({uri:templateWidget.uri});loadedJson.label=getUniqueLabel(appConfig,"widget",loadedJson.manifest?loadedJson.manifest.i18nMessages._widgetLabel||loadedJson.manifest.label||loadedJson.manifest.name:"");const result=this.createWidget(appConfig,loadedJson,sizeModeList,!1);let updatedAppConfig=result[0];const newWidgetId=result[1];if(yield AppWidgetManager.getInstance().registerManifestProps(updatedAppConfig.widgets[newWidgetId]),isBlock){const blockLabel=jimu_core.Ruy.getIntl().formatMessage({id:"block"}),newLabel=getUniqueLabel(updatedAppConfig,"widget",blockLabel);updatedAppConfig=updatedAppConfig.setIn(["widgets",newWidgetId,"label"],newLabel)}return context[widgetId]=newWidgetId,(null===(_b=templateWidget.useMapWidgetIds)||void 0===_b?void 0:_b.length)>0&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",newWidgetId,"useMapWidgetIds"],templateWidget.useMapWidgetIds)),updatedAppConfig=yield this.updateWidgetByTemplate(updatedAppConfig,templateJson,newWidgetId,widgetId,sizeModeList,context),[updatedAppConfig,newWidgetId]}))}updateWidgetByTemplate(appConfig,templateJson,widgetId,templateWidgetId,sizeModeList,context){return widget_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;const oldWidgetJson=null===(_a=null==appConfig?void 0:appConfig.widgets)||void 0===_a?void 0:_a[widgetId];if(!oldWidgetJson)return appConfig;yield util_makeSureTemplateConfig(templateJson);let updatedAppConfig=appConfig;oldWidgetJson.layouts&&Object.keys(oldWidgetJson.layouts).forEach((key=>{const devices=oldWidgetJson.layouts[key];Object.keys(devices).forEach((device=>{const layoutId=devices[device],service=LayoutServiceProvider.getService(updatedAppConfig,layoutId);updatedAppConfig=service.removeLayout(updatedAppConfig,layoutId,device)}))})),updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId],oldWidgetJson.without("layouts"));const templateConfig=null==templateJson?void 0:templateJson.config,templateWidget=null===(_b=null==templateConfig?void 0:templateConfig.widgets)||void 0===_b?void 0:_b[templateWidgetId],newLayoutIds=[];if(templateWidget&&(templateWidget.config&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId,"config"],templateWidget.config)),templateWidget.style&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId,"style"],templateWidget.style)),templateWidget.layouts)){const layouts=templateWidget.layouts,layoutIds=[];Object.keys(layouts).forEach((layoutName=>{var _a,_b;const sizeModeLayouts=layouts[layoutName]||{},layoutInManifest=(null!==(_b=null===(_a=oldWidgetJson.manifest)||void 0===_a?void 0:_a.layouts)&&void 0!==_b?_b:[]).find((item=>item.name===layoutName));sizeModeList.forEach((sizeMode=>{var _a;const layoutId=null!==(_a=sizeModeLayouts[sizeMode])&&void 0!==_a?_a:sizeModeLayouts[appConfig.mainSizeMode];layoutId&&layoutIds.push({layoutName,sizeMode,layoutId,layoutLabel:null==layoutInManifest?void 0:layoutInManifest.label})}))}));for(let i=0;i<layoutIds.length;i+=1){const{layoutName,sizeMode,layoutId,layoutLabel}=layoutIds[i],service=LayoutServiceProvider.getService(templateConfig,layoutId),result=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.Widget,oldWidgetJson.id,context);updatedAppConfig=result[0];const newLayoutId=result[1];newLayoutIds.push(newLayoutId),updatedAppConfig=updatedAppConfig.setIn(["widgets",oldWidgetJson.id,"layouts",layoutName,sizeMode],newLayoutId).setIn(["layouts",newLayoutId,"label"],(null===(_c=null==oldWidgetJson?void 0:oldWidgetJson.manifest)||void 0===_c?void 0:_c.i18nMessages[`_layout_${layoutName}_label`])||layoutLabel||layoutName)}}return updatedAppConfig}))}createWidget(appConfig,widgetJson,sizeModeList,createEmbedLayout=!0){let updatedAppConfig=appConfig;const widgetId=getUniqueId("widget");if(console.debug("createWidget",widgetJson),updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId],widgetJson).setIn(["widgets",widgetId,"id"],widgetId),createEmbedLayout&&hasEmbeddedLayoutInWidget(widgetJson.manifest)){(widgetJson.manifest.layouts||[]).forEach((layout=>{sizeModeList.forEach((sizeMode=>{const result=LayoutServiceProvider.getInstance().getServiceByType(layout.type).createBlankLayout(updatedAppConfig,layout.type);updatedAppConfig=result[0];const layoutId=result[1];console.debug("embed layout",layout.name,layoutId,layout.type,"created in",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"label"],widgetJson.manifest.i18nMessages[`_layout_${layout.name}_label`]||layout.label).setIn(["layouts",layoutId,"parent"],{id:widgetId,type:jimu_core.$4y.Widget}).setIn(["widgets",widgetId,"layouts",layout.name,sizeMode],layoutId)}))}))}return[updatedAppConfig,widgetId]}duplicateEmbedLayout(appConfig,contentId,fromSizeMode,toSizeMode,context){var _a;const widgetJson=appConfig.widgets[contentId];if(!widgetJson||!widgetJson.layouts)return[appConfig,null];let updatedAppConfig=appConfig;if(console.debug("duplicate layout of widget",contentId),(null===(_a=widgetJson.manifest)||void 0===_a?void 0:_a.widgetType)===jimu_core.xOw.Layout&&fromSizeMode!==toSizeMode){console.debug("deuplicate layout widget and its layout from",fromSizeMode,"to",toSizeMode);const newWidgetJson=widgetJson.set("id",getUniqueId("widget")).without("layouts").without("parent");return updatedAppConfig=updatedAppConfig.setIn(["widgets",newWidgetJson.id],newWidgetJson),Object.keys(widgetJson.layouts).forEach((name=>{const layouts=widgetJson.layouts[name];if(layouts[fromSizeMode]){const result=LayoutServiceProvider.getService(updatedAppConfig,layouts[fromSizeMode]).duplicateLayout(updatedAppConfig,layouts[fromSizeMode],fromSizeMode,toSizeMode,context,!1);updatedAppConfig=result[0];const newLayoutId=result[1];null!=newLayoutId&&(context[layouts[fromSizeMode]]=newLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Widget,id:newWidgetJson.id}).setIn(["widgets",newWidgetJson.id,"layouts",name,toSizeMode],newLayoutId))}})),[updatedAppConfig,newWidgetJson.id]}return console.debug("duplicate widget layout only from",fromSizeMode,"to",toSizeMode),Object.keys(widgetJson.layouts).forEach((name=>{const layouts=widgetJson.layouts[name];if(layouts[fromSizeMode]&&fromSizeMode!==toSizeMode){const service=LayoutServiceProvider.getService(updatedAppConfig,layouts[fromSizeMode]);layouts[toSizeMode]&&(updatedAppConfig=service.removeLayout(updatedAppConfig,layouts[toSizeMode],toSizeMode));const result=service.duplicateLayout(updatedAppConfig,layouts[fromSizeMode],fromSizeMode,toSizeMode,context,!1);updatedAppConfig=result[0];const newLayoutId=result[1];null!=newLayoutId&&(context[layouts[fromSizeMode]]=newLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Widget,id:contentId}).setIn(["widgets",contentId,"layouts",name,toSizeMode],newLayoutId))}})),[updatedAppConfig,null]}duplicate(appConfig,contentId,targetBrowserSize,context){console.debug("duplicate a widget",contentId);const widgetJson=appConfig.widgets[contentId];if(!widgetJson)return[appConfig,null];if(null==context?void 0:context[contentId]){const widgetJson=appConfig.widgets[context[contentId]];if(!widgetJson.layouts)return[appConfig,context[contentId]];const firstName=Object.keys(widgetJson.layouts)[0];if(widgetJson.layouts[firstName][targetBrowserSize])return[appConfig,context[contentId]];const originWidget=appConfig.widgets[contentId];let updatedAppConfig=appConfig;return Object.keys(originWidget.layouts).forEach((name=>{const layoutId=originWidget.layouts[name][targetBrowserSize],dupResult=LayoutServiceProvider.getService(updatedAppConfig,layoutId).duplicateLayout(updatedAppConfig,layoutId,targetBrowserSize,targetBrowserSize,context,!0);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",context[contentId],"layouts",name,targetBrowserSize],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Widget,id:context[contentId]}))})),[updatedAppConfig,context[contentId]]}const newWJson=widgetJson.set("id",getUniqueId("widget")).set("label",getDuplicateLabel(appConfig,"widget",widgetJson.label)),updatedAppConfig=this.beforeDuplicated(appConfig,contentId,newWJson,targetBrowserSize,context);return context&&(context[contentId]=newWJson.id),[updatedAppConfig,newWJson.id]}tryRemove(appConfig,contentId,layoutInfo,sizeMode){var _a,_b,_c;const widgetJson=null===(_a=appConfig.widgets)||void 0===_a?void 0:_a[contentId];if(!widgetJson)return appConfig;const hasOtherModes=[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small].filter((mode=>mode!==sizeMode)).some((mode=>{var _a,_b;return(null===(_b=null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[mode])||void 0===_b?void 0:_b.length)>0})),isMultipleParents=(null===(_c=null===(_b=widgetJson.parent)||void 0===_b?void 0:_b[sizeMode])||void 0===_c?void 0:_c.length)>1;if(hasOtherModes||isMultipleParents){let updatedAppConfig=this.removeParent(appConfig,contentId,layoutInfo,sizeMode);return widgetJson.layouts&&Object.keys(widgetJson.layouts).forEach((name=>{const sizeModeLayout=widgetJson.layouts[name];if(sizeModeLayout[sizeMode]){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,sizeModeLayout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,{[sizeMode]:sizeModeLayout[sizeMode]}),updatedAppConfig=updatedAppConfig.setIn(["widgets",contentId,"layouts",name],sizeModeLayout.without(sizeMode))}})),updatedAppConfig}return this.remove(appConfig,contentId)}remove(appConfig,contentId){var _a;if(!(null===(_a=appConfig.widgets)||void 0===_a?void 0:_a[contentId]))return appConfig;console.debug("remove a widget",contentId);const updatedAppConfig=this.beforeRemoved(appConfig,contentId);return updatedAppConfig.set("widgets",updatedAppConfig.widgets.without(contentId))}toTocNode(appConfig,contentId,parent,browserSizeMode){var _a,_b,_c,_d;const{layoutId,layoutItemId}=parent,result={label:"",layoutId,layoutItemId,type:"widget",id:contentId},widgetJson=null===(_a=appConfig.widgets)||void 0===_a?void 0:_a[contentId];if(!widgetJson)return null==contentId&&(result.label=jimu_core.Ruy.getIntl().formatMessage({id:"placeholder"}),result.icon=widget_place_holder_default(),result.flipIcon=!1,result.isLabelReadOnly=!0),result;if(result.label=widgetJson.label,result.icon=widgetJson.icon,result.flipIcon=null!==(_d=null===(_c=null===(_b=widgetJson.manifest)||void 0===_b?void 0:_b.properties)||void 0===_c?void 0:_c.flipIcon)&&void 0!==_d&&_d,!(null==widgetJson?void 0:widgetJson.layouts))return result;const children=[],isSolo=1===Object.keys(widgetJson.layouts).length;return Object.keys(widgetJson.layouts).forEach((name=>{var _a,_b,_c,_d;const layoutId=null!==(_a=widgetJson.layouts[name][browserSizeMode])&&void 0!==_a?_a:widgetJson.layouts[name][appConfig.mainSizeMode],embedChildren=LayoutServiceProvider.getService(appConfig,layoutId).getTocStructure(appConfig,layoutId);if(embedChildren.length>0){const layoutType=appConfig.layouts[layoutId].type,manifestLayout=null===(_c=null===(_b=widgetJson.manifest)||void 0===_b?void 0:_b.layouts)||void 0===_c?void 0:_c.find((item=>item.name===name));children.push({label:isSolo?"":null!=manifestLayout?null!==(_d=widgetJson.manifest.i18nMessages[`_layout_${name}_label`])&&void 0!==_d?_d:manifestLayout.label:name,icon:getLayoutIcon(layoutType),type:"layout",id:layoutId,isLabelReadOnly:!0,children:embedChildren})}})),1===children.length?result.children=children[0].children:children.length>1&&(result.children=children),result}afterMoved(appConfig,contentId,fromLayout,toLayout){return appConfig.widgets[contentId]?(console.debug("update widget",contentId,"ds after moved to a new layout",toLayout),this.dsService.updateAfterChangingLayout(appConfig,contentId,toLayout)):appConfig}afterAdded(appConfig,contentId,toLayout,fromSizeMode,toSizeMode){var _a;const widgetJson=appConfig.widgets[contentId];if(!widgetJson)return appConfig;console.debug("after added, update widget",contentId,"added to a new layout",toLayout,"from",fromSizeMode,"to",toSizeMode);let updatedAppConfig=this.dsService.updateAfterChangingLayout(appConfig,contentId,toLayout);return Object.keys(null!==(_a=widgetJson.layouts)&&void 0!==_a?_a:{}).forEach((layoutName=>{const sizeModeLayouts=widgetJson.layouts[layoutName];if(sizeModeLayouts[fromSizeMode]&&!sizeModeLayouts[toSizeMode]){const layoutJson=updatedAppConfig.layouts[sizeModeLayouts[fromSizeMode]],result=LayoutServiceProvider.getService(updatedAppConfig,sizeModeLayouts[fromSizeMode]).duplicateLayout(updatedAppConfig,layoutJson.id,fromSizeMode,toSizeMode,null);updatedAppConfig=result[0];const layoutId=result[1];null!=layoutId&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"parent"],{type:jimu_core.$4y.Widget,id:contentId}).setIn(["widgets",contentId,"layouts",layoutName,toSizeMode],layoutId))}})),updatedAppConfig}beforeRemoved(appConfig,contentId){var _a,_b,_c,_d;const widgetJson=appConfig.widgets[contentId];let updatedAppConfig=appConfig;console.debug("clear widget resource before removing",contentId);findAppConfigOperationExtensions().forEach((ext=>{if(ext.anyWidgetWillRemove)try{updatedAppConfig=ext.anyWidgetWillRemove(updatedAppConfig,contentId)}catch(e){console.error("Error when calling anyWidgetWillRemove",e)}}));const isExpressBuilder=jimu_core.WpD.isExpressMode(),numOfParents=Object.keys(null!==(_a=widgetJson.parent)&&void 0!==_a?_a:{}).length;if(isExpressBuilder&&numOfParents>1){const mainLayoutInfo=widgetJson.parent[appConfig.mainSizeMode][0];if(updatedAppConfig.layouts[mainLayoutInfo.layoutId].type!==jimu_core.p5K.FlexRowLayout){updatedAppConfig=placeholder_service.addAsSyncablePlaceholder(updatedAppConfig,mainLayoutInfo);const placeholderInfo=placeholder_service.getPlaceholderInfo(updatedAppConfig,mainLayoutInfo);[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small].filter((sizeMode=>sizeMode!==appConfig.mainSizeMode)).forEach((sizeMode=>{var _a;if((null===(_a=widgetJson.parent[sizeMode])||void 0===_a?void 0:_a.length)>0){const layoutInfo=widgetJson.parent[sizeMode][0];updatedAppConfig=updatedAppConfig.setIn(["placeholderInfos",placeholderInfo.id,"syncs",sizeMode],layoutInfo)}}))}else{const placeholderInfo=placeholder_service.getPlaceholderInfo(updatedAppConfig,mainLayoutInfo);placeholderInfo&&updatedAppConfig.placeholderInfos[placeholderInfo.id]&&(updatedAppConfig=updatedAppConfig.set("placeholderInfos",updatedAppConfig.placeholderInfos.without(placeholderInfo.id)))}}if(Object.keys(null!==(_b=widgetJson.parent)&&void 0!==_b?_b:{}).forEach((sizeMode=>{widgetJson.parent[sizeMode].length>0&&widgetJson.parent[sizeMode].forEach((item=>{if(updatedAppConfig.layouts[item.layoutId]){const service=LayoutServiceProvider.getService(updatedAppConfig,item.layoutId);updatedAppConfig=service.removeItem(updatedAppConfig,item,sizeMode,!1)}}))})),widgetJson.outputDataSources&&widgetJson.outputDataSources.forEach((odsId=>{updatedAppConfig=this.dsService.removeDataSource(updatedAppConfig,odsId)})),updatedAppConfig=this.messageActionService.removeFromWidget(updatedAppConfig,contentId),updatedAppConfig=this.dataActionService.removeFromWidget(updatedAppConfig,contentId),widgetJson.layouts&&Object.keys(widgetJson.layouts).forEach((name=>{const sizeModeLayout=widgetJson.layouts[name],service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,sizeModeLayout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,sizeModeLayout)})),null===(_d=null===(_c=widgetJson.manifest)||void 0===_c?void 0:_c.properties)||void 0===_d?void 0:_d.canCreateMapView){const appConfigOperationExtensions=findAppConfigOperationExtensions();try{appConfigOperationExtensions.forEach((extension=>{if(!extension.mapWidgetWillRemove)return;if(extension.widgetId===contentId)return;const widgetJson=updatedAppConfig.widgets[extension.widgetId];widgetJson&&widgetJson.useMapWidgetIds&&widgetJson.useMapWidgetIds.find((id=>id===contentId))&&(updatedAppConfig=extension.mapWidgetWillRemove(updatedAppConfig,contentId))}))}catch(e){console.error("Error when calling mapWidgetWillRemove",e)}updatedAppConfig=this.useMapService.remove(updatedAppConfig,widgetJson.id)}const ext=findWidgetAppConfigOperationExtension(contentId);if(ext&&ext.widgetWillRemove)try{updatedAppConfig=ext.widgetWillRemove(updatedAppConfig)}catch(e){console.error("Error when calling widgetWillRemove",e)}return updatedAppConfig}beforeDuplicated(appConfig,contentId,newWidgetJson,toSizeMode,context){var _a,_b;let updatedAppConfig=appConfig;if(console.debug("process before duplicate widget",contentId),hasEmbeddedLayoutInWidget(newWidgetJson.manifest)&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",newWidgetJson.id],newWidgetJson),Object.keys(null!==(_a=newWidgetJson.layouts)&&void 0!==_a?_a:{}).forEach((key=>{var _a;const layouts=newWidgetJson.layouts[key],duplicateContext=null!=context?context:{},duplicateResult=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,layouts).duplicateSizeModeLayouts(updatedAppConfig,{[toSizeMode]:null!==(_a=layouts[toSizeMode])&&void 0!==_a?_a:layouts[appConfig.mainSizeMode]},jimu_core.$4y.Widget,newWidgetJson.id,duplicateContext);updatedAppConfig=duplicateResult[0],newWidgetJson=newWidgetJson.setIn(["layouts",key],duplicateResult[1])}))),(null===(_b=newWidgetJson.outputDataSources)||void 0===_b?void 0:_b.length)>0){const newDsIds=newWidgetJson.outputDataSources.map((dsId=>{const result=this.dsService.duplicateDataSource(updatedAppConfig,contentId,newWidgetJson.id,dsId,context);updatedAppConfig=result[0];return result[1].id}));newWidgetJson=newWidgetJson.set("outputDataSources",newDsIds)}return updatedAppConfig=updatedAppConfig.setIn(["widgets",newWidgetJson.id],newWidgetJson),updatedAppConfig}replaceUseDataSource(useDataSource,context){const{mainDataSourceId,dataSourceId}=useDataSource;if(context[mainDataSourceId]){const newDataSourceId=dataSourceId.replace(mainDataSourceId,context[mainDataSourceId]);return useDataSource.set("mainDataSourceId",context[mainDataSourceId]).set("dataSourceId",newDataSourceId)}return useDataSource}afterBatchCopied(destAppConfig,sourceAppConfig,context){let updatedAppConfig=destAppConfig;return sourceAppConfig.messageConfigs&&Object.keys(sourceAppConfig.messageConfigs).forEach((messageId=>{var _a;const messageConfig=sourceAppConfig.messageConfigs[messageId];if(context[messageConfig.widgetId]){let newMessageConfig=messageConfig.set("id",getUniqueId("messageConfig")).set("widgetId",context[messageConfig.widgetId]);if((null===(_a=messageConfig.actions)||void 0===_a?void 0:_a.length)>0){const newActions=messageConfig.actions.map((action=>{var _a;let newAction=action.set("messageWidgetId",context[action.messageWidgetId]);if(context[action.widgetId]&&(newAction=newAction.set("widgetId",context[action.widgetId]).set("actionId",action.actionId.replace(action.widgetId,context[action.widgetId]))),(null===(_a=action.useDataSources)||void 0===_a?void 0:_a.length)>0){const newList=action.useDataSources.map((useDataSource=>this.replaceUseDataSource(useDataSource,context)));newAction=newAction.set("useDataSources",newList)}return newAction}));newMessageConfig=newMessageConfig.set("actions",newActions),updatedAppConfig=updatedAppConfig.setIn(["messageConfigs",newMessageConfig.id],newMessageConfig)}}})),Object.keys(null!=context?context:{}).forEach((contentId=>{var _a,_b;const destWidgetId=context[contentId];if(sourceAppConfig.widgets[contentId]&&updatedAppConfig.widgets[destWidgetId]){const widgetJson=updatedAppConfig.widgets[destWidgetId];if((null===(_a=widgetJson.useMapWidgetIds)||void 0===_a?void 0:_a.length)>0){const newList=widgetJson.useMapWidgetIds.map((id=>{var _a;return null!==(_a=context[id])&&void 0!==_a?_a:id}));updatedAppConfig=updatedAppConfig.setIn(["widgets",destWidgetId,"useMapWidgetIds"],newList)}if((null===(_b=widgetJson.useDataSources)||void 0===_b?void 0:_b.length)>0){const newList=widgetJson.useDataSources.map((useDataSource=>this.replaceUseDataSource(useDataSource,context)));updatedAppConfig=updatedAppConfig.setIn(["widgets",destWidgetId,"useDataSources"],newList)}let extWidgetId;widgetJson.dataActions&&Object.keys(widgetJson.dataActions).forEach((actionId=>{const dataAction=widgetJson.dataActions[actionId];if(dataAction.actions){const newActions={};Object.keys(dataAction.actions).forEach((actionKey=>{const action=dataAction.actions[actionKey];if(context[actionKey]){let newAction=action;action.widgetId&&context[action.widgetId]&&(newAction=newAction.set("widgetId",context[action.widgetId])),newActions[context[actionKey]]=newAction}else newActions[actionKey]=action})),updatedAppConfig=updatedAppConfig.setIn(["widgets",destWidgetId,"dataActions",actionId,"actions"],newActions)}})),extWidgetId=destAppConfig===sourceAppConfig?contentId:destWidgetId;const ext=findWidgetAppConfigOperationExtension(extWidgetId);if(ext&&ext.afterWidgetCopied)try{updatedAppConfig=ext.afterWidgetCopied(contentId,sourceAppConfig,destWidgetId,updatedAppConfig,context)}catch(e){console.error("Error when calling afterWidgetCopied",e)}}})),updatedAppConfig}addParent(appConfig,contentId,layoutInfo,sizeMode){var _a;const widgetJson=appConfig.widgets[contentId];if(!widgetJson)return appConfig;console.debug("add parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"to widget",contentId,"in",sizeMode);const list=this.addParentToList(appConfig,null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[sizeMode],layoutInfo);return appConfig.setIn(["widgets",contentId,"parent",sizeMode],list)}removeParent(appConfig,contentId,layoutInfo,sizeMode){const widgetJson=appConfig.widgets[contentId];if(!widgetJson||null==widgetJson.parent)return appConfig;if(console.debug("remove parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"from widget",contentId,"in",sizeMode),sizeMode){const parents=widgetJson.parent[sizeMode],newParents=this.removeParentFromList(parents,layoutInfo);return 0===newParents.length?appConfig.setIn(["widgets",contentId,"parent"],widgetJson.parent.without(sizeMode)):appConfig.setIn(["widgets",contentId,"parent",sizeMode],newParents)}let updatedAppConfig=appConfig;return Object.keys(widgetJson.parent).forEach((s=>{const parents=widgetJson.parent[s],newParents=this.removeParentFromList(parents,layoutInfo);updatedAppConfig=0===newParents.length?updatedAppConfig.setIn(["widgets",contentId,"parent"],widgetJson.parent.without(s)):updatedAppConfig.setIn(["widgets",contentId,"parent",s],newParents)})),updatedAppConfig}clearParent(appConfig,contentId){const widgetJson=appConfig.widgets[contentId];return widgetJson&&null!=widgetJson.parent?appConfig.setIn(["widgets",contentId],widgetJson.without("parent")):appConfig}removeSizeModeParent(appConfig,contentId,browserSizeMode){var _a;const widgetJson=appConfig.widgets[contentId];return widgetJson&&null!=(null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[browserSizeMode])?appConfig.setIn(["widgets",contentId,"parent"],widgetJson.parent.without(browserSizeMode)):appConfig}findParent(appConfig,contentId,browserSizeMode){var _a,_b;const widgetJson=appConfig.widgets[contentId];if(!widgetJson||!widgetJson.parent)return null;const widgetParent=null!==(_a=widgetJson.parent[browserSizeMode])&&void 0!==_a?_a:widgetJson.parent[appConfig.mainSizeMode];if(!widgetParent)return null;if(1===widgetParent.length)return widgetParent[0];const layoutId=widgetParent[0].layoutId,layout=appConfig.layouts[layoutId];return this.findParent(appConfig,null===(_b=layout.parent)||void 0===_b?void 0:_b.id,browserSizeMode)}hasParent(appConfig,contentId,browserSizeMode){var _a,_b;const widgetJson=appConfig.widgets[contentId];return!(!widgetJson||!widgetJson.parent)&&(null===(_b=null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[browserSizeMode])||void 0===_b?void 0:_b.length)>0}hasMultipleParents(appConfig,contentId,browserSizeMode){var _a,_b;const widgetJson=appConfig.widgets[contentId];return!(!widgetJson||!widgetJson.parent)&&(null===(_b=null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[browserSizeMode])||void 0===_b?void 0:_b.length)>1}};var widget_section=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-section.svg"),widget_section_default=__webpack_require__.n(widget_section),widget_section_view=__webpack_require__("../jimu-icons/svg/outlined/brand/widget-section-view.svg"),widget_section_view_default=__webpack_require__.n(widget_section_view),section_service_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const section_service=new class SectionService extends BaseContentService{createFromTemplate(appConfig,templateJson,sectionId,sizeModeList,context){return section_service_awaiter(this,void 0,void 0,(function*(){if(context[sectionId]){const sectionJson=appConfig.sections[context[sectionId]],firstView=appConfig.views[sectionJson.views[0]],originSection=templateJson.config.sections[sectionId];let updatedAppConfig=appConfig;for(let i=0;i<sizeModeList.length;i++){const sizeMode=sizeModeList[i];if(!firstView.layout[sizeMode])for(let j=0;j<originSection.views.length;j++){const viewId=originSection.views[j],layoutId=templateJson.config.views[viewId].layout[sizeMode],service=LayoutServiceProvider.getService(templateJson.config,layoutId),dupResult=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.View,context[viewId],context);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["views",context[viewId],"layout",sizeMode],newLayoutId))}}return[updatedAppConfig,context[sectionId]]}yield util_makeSureTemplateConfig(templateJson);let updatedAppConfig=appConfig;const templateSection=templateJson.config.sections[sectionId],nextSectionId=getUniqueId("section");updatedAppConfig=updatedAppConfig.setIn(["sections",nextSectionId],templateSection).setIn(["sections",nextSectionId,"id"],nextSectionId).setIn(["sections",nextSectionId,"label"],getUniqueLabel(appConfig,"section",jimu_core.Ruy.getIntl().formatMessage({id:"section"})));const newViewIds=[];for(let i=0;i<templateSection.views.length;i+=1){const viewId=templateSection.views[i],result=yield this.createViewFromTemplate(updatedAppConfig,templateJson,viewId,sizeModeList,context);updatedAppConfig=result[0],newViewIds.push(result[1]),updatedAppConfig=updatedAppConfig.setIn(["views",result[1],"parent"],nextSectionId)}return updatedAppConfig=updatedAppConfig.setIn(["sections",nextSectionId,"views"],newViewIds),context[sectionId]=nextSectionId,[updatedAppConfig,nextSectionId]}))}createViewFromTemplate(appConfig,templateJson,viewId,sizeModeList,context){return section_service_awaiter(this,void 0,void 0,(function*(){let updatedAppConfig=appConfig;yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config,templateView=templateConfig.views[viewId],nextViewId=getUniqueId("view");updatedAppConfig=updatedAppConfig.setIn(["views",nextViewId],templateView).setIn(["views",nextViewId,"id"],nextViewId).setIn(["views",nextViewId,"label"],getUniqueLabel(appConfig,"view",jimu_core.Ruy.getIntl().formatMessage({id:"view"})));const layoutIds=[];Object.keys(templateView.layout||{}).forEach((sizeMode=>{layoutIds.push({sizeMode,layoutId:templateView.layout[sizeMode]})}));for(let i=0;i<layoutIds.length;i+=1){const{sizeMode,layoutId}=layoutIds[i],service=LayoutServiceProvider.getService(templateConfig,layoutId),result=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.View,nextViewId,context);updatedAppConfig=result[0];const newLayoutId=result[1];updatedAppConfig=updatedAppConfig.setIn(["views",nextViewId,"layout",sizeMode],newLayoutId)}return context&&(context[viewId]=nextViewId),[updatedAppConfig,nextViewId]}))}duplicateEmbedLayout(appConfig,contentId,fromSizeMode,toSizeMode,context){var _a;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];if(!sectionJson)return[appConfig,null];let updatedAppConfig=appConfig;return console.debug(`duplicate section ${contentId} from ${fromSizeMode} to ${toSizeMode}`),sectionJson.views.forEach((viewId=>{const layouts=updatedAppConfig.views[viewId].layout;if(layouts[fromSizeMode]&&!layouts[toSizeMode]){const result=LayoutServiceProvider.getService(updatedAppConfig,layouts[fromSizeMode]).duplicateLayout(updatedAppConfig,layouts[fromSizeMode],fromSizeMode,toSizeMode,context,!1);updatedAppConfig=result[0];const newLayoutId=result[1];null!=newLayoutId&&(context[layouts[fromSizeMode]]=newLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.View,id:viewId}).setIn(["views",viewId,"layout",toSizeMode],newLayoutId))}})),[updatedAppConfig,null]}duplicate(appConfig,contentId,targetBrowserSize,context){var _a;console.debug("dplicate section",contentId,"in",targetBrowserSize);const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];if(!sectionJson)return[appConfig,null];if(null==context?void 0:context[contentId]){const sectionJson=appConfig.sections[context[contentId]];if(appConfig.views[sectionJson.views[0]].layout[targetBrowserSize])return[appConfig,context[contentId]];const originSection=appConfig.sections[contentId];let updatedAppConfig=appConfig;return originSection.views.forEach((viewId=>{const layoutId=updatedAppConfig.views[viewId].layout[targetBrowserSize],dupResult=LayoutServiceProvider.getService(updatedAppConfig,layoutId).duplicateLayout(updatedAppConfig,layoutId,targetBrowserSize,targetBrowserSize,context,!0);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["views",context[viewId],"layout",targetBrowserSize],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.View,id:context[viewId]}))})),[updatedAppConfig,context[contentId]]}let newSectionJson=sectionJson.set("id",getUniqueId("section")).set("label",getDuplicateLabel(appConfig,"section",sectionJson.label)),updatedAppConfig=appConfig.setIn(["sections",newSectionJson.id],newSectionJson);const viewIds=sectionJson.views.map((viewId=>{const result=this.duplicateView(updatedAppConfig,sectionJson.id,viewId,[targetBrowserSize],!1,context);updatedAppConfig=result[0];const newViewId=result[1];return updatedAppConfig=updatedAppConfig.setIn(["views",newViewId,"parent"],newSectionJson.id),newViewId}));return newSectionJson=newSectionJson.set("views",viewIds),updatedAppConfig=updatedAppConfig.setIn(["sections",newSectionJson.id],newSectionJson),context&&(context[contentId]=newSectionJson.id),[updatedAppConfig,newSectionJson.id]}removeDirectly(appConfig,contentId){var _a;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];let updatedAppConfig=appConfig;return sectionJson.views.forEach((viewId=>{const viewJson=updatedAppConfig.views[viewId],service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,viewJson.layout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,viewJson.layout),updatedAppConfig=updatedAppConfig.set("views",updatedAppConfig.views.without(viewId))})),updatedAppConfig=updatedAppConfig.set("sections",updatedAppConfig.sections.without(contentId)),updatedAppConfig}tryRemove(appConfig,contentId,layoutInfo,sizeMode){var _a;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];if(!sectionJson)return appConfig;console.debug(`remove section ${contentId} from ${layoutInfo.layoutId} ${layoutInfo.layoutItemId}`,sizeMode);const hasOtherModes=[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small].filter((mode=>mode!==sizeMode)).some((mode=>{var _a,_b;return(null===(_b=null===(_a=sectionJson.parent)||void 0===_a?void 0:_a[mode])||void 0===_b?void 0:_b.length)>0}));if(hasOtherModes){let updatedAppConfig=this.removeParent(appConfig,contentId,layoutInfo,sizeMode);return sectionJson.views.forEach((viewId=>{const viewJson=updatedAppConfig.views[viewId];if(viewJson.layout[sizeMode]){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,viewJson.layout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,{[sizeMode]:viewJson.layout[sizeMode]}),updatedAppConfig=updatedAppConfig.setIn(["views",viewId,"layout"],viewJson.layout.without(sizeMode))}})),updatedAppConfig}return this.remove(appConfig,contentId)}remove(appConfig,contentId){var _a,_b;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];if(!sectionJson)return appConfig;console.debug("remove section",contentId);let updatedAppConfig=appConfig;return Object.keys(null!==(_b=sectionJson.parent)&&void 0!==_b?_b:{}).forEach((sizeMode=>{sectionJson.parent[sizeMode].length>0&&sectionJson.parent[sizeMode].forEach((item=>{if(updatedAppConfig.layouts[item.layoutId]){const service=LayoutServiceProvider.getService(updatedAppConfig,item.layoutId);updatedAppConfig=service.removeItem(updatedAppConfig,item,sizeMode,!1)}}))})),this.removeDirectly(updatedAppConfig,contentId)}toTocNode(appConfig,contentId,parent,browserSizeMode){var _a,_b;const{layoutId,layoutItemId}=parent,result={label:"",layoutId,layoutItemId,type:"section",id:contentId,children:[]},sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];return sectionJson?(result.label=sectionJson.label,result.icon=null!==(_b=sectionJson.icon)&&void 0!==_b?_b:widget_section_default(),result.flipIcon=!0,sectionJson.views.forEach((viewId=>{var _a,_b;const viewJson=appConfig.views[viewId],viewLayoutId=null!==(_a=viewJson.layout[browserSizeMode])&&void 0!==_a?_a:viewJson.layout[appConfig.mainSizeMode],viewChildren=LayoutServiceProvider.getService(appConfig,viewLayoutId).getTocStructure(appConfig,viewLayoutId);result.children.push({label:viewJson.label,icon:null!==(_b=viewJson.icon)&&void 0!==_b?_b:widget_section_view_default(),flipIcon:!1,type:"view",id:viewId,children:viewChildren})})),result):result}afterMoved(appConfig,contentId,fromLayout,toLayout){return appConfig}afterAdded(appConfig,contentId,toLayout,fromSizeMode,toSizeMode){var _a;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[contentId];if(!sectionJson)return appConfig;let updatedAppConfig=appConfig;return sectionJson.views.forEach((vId=>{const viewJson=updatedAppConfig.views[vId];if(viewJson.layout[fromSizeMode]&&!viewJson.layout[toSizeMode]){const layoutJson=updatedAppConfig.layouts[viewJson.layout[fromSizeMode]],result=LayoutServiceProvider.getService(updatedAppConfig,viewJson.layout[fromSizeMode]).duplicateLayout(updatedAppConfig,layoutJson.id,fromSizeMode,toSizeMode,null);updatedAppConfig=result[0];const layoutId=result[1];null!=layoutId&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"parent"],{type:jimu_core.$4y.View,id:vId}).setIn(["views",vId,"layout",toSizeMode],layoutId))}})),updatedAppConfig}addParent(appConfig,contentId,layoutInfo,sizeMode){var _a;const sectionJson=appConfig.sections[contentId];if(!sectionJson)return appConfig;console.debug("add parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"to section",contentId,"in",sizeMode);const list=this.addParentToList(appConfig,null===(_a=sectionJson.parent)||void 0===_a?void 0:_a[sizeMode],layoutInfo);return appConfig.setIn(["sections",contentId,"parent",sizeMode],list)}removeParent(appConfig,contentId,layoutInfo,sizeMode){const sectionJson=appConfig.sections[contentId];if(!sectionJson||null==sectionJson.parent)return appConfig;if(console.debug("remove parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"from section",contentId,"in",sizeMode),sizeMode){const parents=sectionJson.parent[sizeMode],newParents=this.removeParentFromList(parents,layoutInfo);return 0===newParents.length?appConfig.setIn(["sections",contentId,"parent"],sectionJson.parent.without(sizeMode)):appConfig.setIn(["sections",contentId,"parent",sizeMode],newParents)}let updatedAppConfig=appConfig;return Object.keys(sectionJson.parent).forEach((s=>{const parents=sectionJson.parent[s],newParents=this.removeParentFromList(parents,layoutInfo);updatedAppConfig=0===newParents.length?updatedAppConfig.setIn(["sections",contentId,"parent"],sectionJson.parent.without(s)):updatedAppConfig.setIn(["sections",contentId,"parent",s],newParents)})),updatedAppConfig}clearParent(appConfig,contentId){const sectionJson=appConfig.sections[contentId];return sectionJson&&null!=sectionJson.parent?appConfig.setIn(["sections",contentId],sectionJson.without("parent")):appConfig}removeSizeModeParent(appConfig,contentId,browserSizeMode){var _a;const sectionJson=appConfig.sections[contentId];return sectionJson&&null!=(null===(_a=sectionJson.parent)||void 0===_a?void 0:_a[browserSizeMode])?appConfig.setIn(["sections",contentId,"parent"],sectionJson.parent.without(browserSizeMode)):appConfig}findParent(appConfig,contentId,sizeMode){var _a,_b;const sectionJson=appConfig.sections[contentId];if(!sectionJson.parent)return null;const sectionParent=null!==(_a=sectionJson.parent[sizeMode])&&void 0!==_a?_a:sectionJson.parent[appConfig.mainSizeMode];if(!sectionParent)return null;if(1===sectionParent.length)return sectionParent[0];const layoutId=sectionParent[0].layoutId,layout=appConfig.layouts[layoutId];return widget_service.findParent(appConfig,null===(_b=layout.parent)||void 0===_b?void 0:_b.id,sizeMode)}hasParent(appConfig,contentId,browserSizeMode){var _a;const sectionJson=appConfig.sections[contentId];return!!sectionJson.parent&&(null===(_a=sectionJson.parent[browserSizeMode])||void 0===_a?void 0:_a.length)>0}hasMultipleParents(appConfig,contentId,browserSizeMode){var _a;const sectionJson=appConfig.sections[contentId];return!!sectionJson.parent&&(null===(_a=sectionJson.parent[browserSizeMode])||void 0===_a?void 0:_a.length)>0}createSection(appConfig,sizeModeList){console.debug("create a blank section",sizeModeList);const sectionId=getUniqueId("section"),sectionJson={id:sectionId,label:getUniqueLabel(appConfig,"section",jimu_core.Ruy.getIntl().formatMessage({id:"section"})),views:[]};let updatedAppConfig=appConfig.setIn(["sections",sectionJson.id],sectionJson);return updatedAppConfig=this.addView(updatedAppConfig,sectionId,sizeModeList)[0],[updatedAppConfig,sectionId]}createBlankView(appConfig,sectionId){return{id:getUniqueId("view"),parent:sectionId,label:getUniqueLabel(appConfig,"view",jimu_core.Ruy.getIntl().formatMessage({id:"view"}))}}addView(appConfig,sectionId,sizeModeList){var _a;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[sectionId];if(!sectionJson)return[appConfig,null];let views;const viewJson=this.createBlankView(appConfig,sectionId);sectionJson.views?(views=sectionJson.views.asMutable(),views.push(viewJson.id)):views=[viewJson.id];let updatedAppConfig=appConfig.setIn(["views",viewJson.id],viewJson).setIn(["sections",sectionId,"views"],views);return sizeModeList.forEach((mode=>{const layoutJson={id:getUniqueId("layout"),type:jimu_core.p5K.FixedLayout,content:{},parent:{id:viewJson.id,type:jimu_core.$4y.View}};updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutJson.id],layoutJson).setIn(["views",viewJson.id,"layout",mode],layoutJson.id)})),[updatedAppConfig,viewJson.id]}duplicateView(appConfig,sectionId,viewId,sizeModeList,addToSection,context){if(!appConfig.views||!appConfig.views[viewId])return[appConfig,null];console.debug("duplicate a view",viewId,"in",sizeModeList);let viewJson=appConfig.views[viewId].set("id",getUniqueId("view"));viewJson=viewJson.set("label",getDuplicateLabel(appConfig,"view",viewJson.label)),addToSection||(viewJson=viewJson.without("parent"));let updatedAppConfig=appConfig.setIn(["views",viewJson.id],viewJson);const sizeModeLayouts={};sizeModeList.forEach((mode=>{sizeModeLayouts[mode]=viewJson.layout[mode]}));const duplicateContext=null!=context?context:{},duplicateResult=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,sizeModeLayouts).duplicateSizeModeLayouts(updatedAppConfig,sizeModeLayouts,jimu_core.$4y.View,viewJson.id,duplicateContext);if(updatedAppConfig=duplicateResult[0],viewJson=viewJson.set("layout",duplicateResult[1]),updatedAppConfig=updatedAppConfig.setIn(["views",viewJson.id],viewJson),addToSection){const views=updatedAppConfig.sections[sectionId].views.asMutable(),index=views.indexOf(viewId);views.splice(index,1,viewId,viewJson.id),updatedAppConfig=updatedAppConfig.setIn(["sections",sectionId,"views"],views)}return context&&(context[viewId]=viewJson.id),[updatedAppConfig,viewJson.id]}removeView(appConfig,sectionId,viewId){var _a,_b;const sectionJson=null===(_a=appConfig.sections)||void 0===_a?void 0:_a[sectionId],viewJson=null===(_b=appConfig.views)||void 0===_b?void 0:_b[viewId];if(!viewJson||!sectionJson||1===sectionJson.views.length||!sectionJson.views.includes(viewId))return appConfig;console.debug("remove a view",viewId,"from",sectionId);const views=sectionJson.views.filter((vId=>vId!==viewId));let updatedAppConfig=appConfig.setIn(["sections",sectionId,"views"],views);return updatedAppConfig=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,viewJson.layout).removeSizeModeLayouts(updatedAppConfig,viewJson.layout),updatedAppConfig=updatedAppConfig.set("views",updatedAppConfig.views.without(viewId)),updatedAppConfig}};var screen=__webpack_require__("../jimu-icons/svg/outlined/brand/screen.svg"),screen_default=__webpack_require__.n(screen),screen_group=__webpack_require__("../jimu-icons/svg/outlined/brand/screen-group.svg"),screen_group_default=__webpack_require__.n(screen_group),screen_group_service_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const screen_group_service=new class ScreenGroupService extends BaseContentService{createFromTemplate(appConfig,templateJson,screenGroupId,sizeModeList,contentMapping){return screen_group_service_awaiter(this,void 0,void 0,(function*(){if(contentMapping[screenGroupId])return[appConfig,contentMapping[screenGroupId]];let updatedAppConfig=appConfig;console.debug("create screen group",screenGroupId,"from template in",sizeModeList),yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config;screenGroupId=null!=screenGroupId?screenGroupId:Object.keys(templateConfig.screenGroups)[0];const templateScreenGroup=templateConfig.screenGroups[screenGroupId],nextGroupId=getUniqueId("screenGroup");contentMapping[screenGroupId]=nextGroupId,updatedAppConfig=updatedAppConfig.setIn(["screenGroups",nextGroupId],templateScreenGroup).setIn(["screenGroups",nextGroupId,"id"],nextGroupId).setIn(["screenGroups",nextGroupId,"label"],getUniqueLabel(appConfig,"screenGroup",jimu_core.Ruy.getIntl().formatMessage({id:"screenGroup"})));const newScreenIds=[];for(let i=0;i<templateScreenGroup.screens.length;i+=1){const screenId=templateScreenGroup.screens[i],result=yield this.createScreenFromTemplate(updatedAppConfig,templateJson,screenId,sizeModeList,contentMapping);updatedAppConfig=result[0],newScreenIds.push(result[1]),updatedAppConfig=updatedAppConfig.setIn(["screens",result[1],"parent"],nextGroupId)}return updatedAppConfig=updatedAppConfig.setIn(["screenGroups",nextGroupId,"screens"],newScreenIds),contentMapping[screenGroupId]=nextGroupId,[updatedAppConfig,nextGroupId]}))}createScreenFromTemplate(appConfig,templateJson,screenId,sizeModeList,contentMapping){return screen_group_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;let updatedAppConfig=appConfig;console.debug("create screen",screenId,"from template in",sizeModeList),yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config;screenId=null!=screenId?screenId:Object.keys(templateConfig.screens)[0];const templateScreen=templateConfig.screens[screenId],nextScreenId=getUniqueId("screen");contentMapping[screenId]=nextScreenId,updatedAppConfig=updatedAppConfig.setIn(["screens",nextScreenId],templateScreen).setIn(["screens",nextScreenId,"id"],nextScreenId).setIn(["screens",nextScreenId,"label"],getUniqueLabel(appConfig,"screen",jimu_core.Ruy.getIntl().formatMessage({id:"screen"})));const layoutIds=[];Object.keys(null!==(_b=null===(_a=templateScreen.panel)||void 0===_a?void 0:_a.layout)&&void 0!==_b?_b:{}).forEach((sizeMode=>{layoutIds.push({sizeMode,isSide:!0,layoutId:templateScreen.panel.layout[sizeMode]})})),Object.keys(null!==(_c=templateScreen.main.layout)&&void 0!==_c?_c:{}).forEach((sizeMode=>{layoutIds.push({sizeMode,isSide:!1,layoutId:templateScreen.main.layout[sizeMode]})}));for(let i=0;i<layoutIds.length;i+=1){const{sizeMode,layoutId,isSide}=layoutIds[i],service=LayoutServiceProvider.getService(templateConfig,layoutId),result=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.Screen,nextScreenId,contentMapping);updatedAppConfig=result[0];const newLayoutId=result[1];updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Screen,id:nextScreenId}),updatedAppConfig=isSide?updatedAppConfig.setIn(["screens",nextScreenId,"panel","layout",sizeMode],newLayoutId):updatedAppConfig.setIn(["screens",nextScreenId,"main","layout",sizeMode],newLayoutId)}return[updatedAppConfig,nextScreenId]}))}duplicateEmbedLayout(appConfig,contentId,fromSizeMode,toSizeMode,context){var _a;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];if(!sgJson)return[appConfig,null];let updatedAppConfig=appConfig;return sgJson.screens.forEach((screenId=>{var _a;const screenJson=updatedAppConfig.screens[screenId],mainLayouts=screenJson.main.layout;if(mainLayouts[fromSizeMode]&&!mainLayouts[toSizeMode]){const result=LayoutServiceProvider.getService(updatedAppConfig,mainLayouts[fromSizeMode]).duplicateLayout(updatedAppConfig,mainLayouts[fromSizeMode],fromSizeMode,toSizeMode,null,!1);updatedAppConfig=result[0];const newLayoutId=result[1];null!=result[1]&&(context[mainLayouts[fromSizeMode]]=newLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Screen,id:screenId}).setIn(["screens",screenId,"main","layout",toSizeMode],newLayoutId))}const panelLayouts=null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout;if(panelLayouts&&panelLayouts[fromSizeMode]&&!panelLayouts[toSizeMode]){const result=LayoutServiceProvider.getService(updatedAppConfig,panelLayouts[fromSizeMode]).duplicateLayout(updatedAppConfig,panelLayouts[fromSizeMode],fromSizeMode,toSizeMode,null,!1);updatedAppConfig=result[0];const newLayoutId=result[1];null!=result[1]&&(context[panelLayouts[fromSizeMode]]=newLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Screen,id:screenId}).setIn(["screens",screenId,"panel","layout",toSizeMode],newLayoutId))}})),[updatedAppConfig,null]}duplicate(appConfig,contentId,targetBrowserSize,context){var _a;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];if(!sgJson)return[appConfig,null];if(null==context?void 0:context[contentId]){const sgJson=appConfig.screenGroups[context[contentId]];if(appConfig.screens[sgJson.screens[0]].main.layout[targetBrowserSize])return[appConfig,context[contentId]];{const originSg=appConfig.screenGroups[contentId];let updatedAppConfig=appConfig;return originSg.screens.forEach((screenId=>{var _a;const screenJson=updatedAppConfig.screens[screenId],mLayoutId=screenJson.main.layout[targetBrowserSize],dupResult=LayoutServiceProvider.getService(updatedAppConfig,mLayoutId).duplicateLayout(updatedAppConfig,mLayoutId,targetBrowserSize,targetBrowserSize,context,!0);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];if(null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["screens",context[screenId],"main","layout",targetBrowserSize],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Screen,id:context[screenId]})),null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout){const pLayoutId=screenJson.panel.layout[targetBrowserSize],dupResult=LayoutServiceProvider.getService(updatedAppConfig,pLayoutId).duplicateLayout(updatedAppConfig,pLayoutId,targetBrowserSize,targetBrowserSize,context,!0);updatedAppConfig=dupResult[0];const newLayoutId=dupResult[1];null!=newLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["screens",context[screenId],"panel","layout",targetBrowserSize],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{type:jimu_core.$4y.Screen,id:context[screenId]}))}})),[updatedAppConfig,context[contentId]]}}console.debug("duplicate screen group",contentId,"to",targetBrowserSize);let newSgJson=sgJson.set("id",getUniqueId("screenGroup")).set("label",getDuplicateLabel(appConfig,"screenGroup",sgJson.label)),updatedAppConfig=appConfig.setIn(["screenGroups",newSgJson.id],newSgJson);const screenIds=sgJson.screens.map((screenId=>{const result=this.duplicateScreen(updatedAppConfig,sgJson.id,screenId,[targetBrowserSize],!1,context);updatedAppConfig=result[0];const newScreenId=result[1];return updatedAppConfig=updatedAppConfig.setIn(["screens",newScreenId,"parent"],newSgJson.id),newScreenId}));return newSgJson=newSgJson.set("screens",screenIds),updatedAppConfig=updatedAppConfig.setIn(["screenGroups",newSgJson.id],newSgJson),context&&(context[contentId]=newSgJson.id),[updatedAppConfig,newSgJson.id]}tryRemove(appConfig,contentId,layoutInfo,sizeMode){var _a;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];if(!sgJson)return appConfig;console.debug(`try remove screenGroup ${contentId} from ${layoutInfo.layoutId} ${layoutInfo.layoutItemId}`,sizeMode);const hasOtherModes=[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small].filter((mode=>mode!==sizeMode)).some((mode=>{var _a;return null!=(null===(_a=sgJson.parent)||void 0===_a?void 0:_a[mode])}));if(hasOtherModes){let updatedAppConfig=this.removeParent(appConfig,contentId,layoutInfo,sizeMode);return sgJson.screens.forEach((screenId=>{var _a;const screenJson=updatedAppConfig.screens[screenId];if(screenJson.main.layout[sizeMode]){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,screenJson.main.layout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,{[sizeMode]:screenJson.main.layout[sizeMode]}),updatedAppConfig=updatedAppConfig.setIn(["screens",screenId,"main","layout"],screenJson.main.layout.without(sizeMode))}if(null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout[sizeMode]){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,screenJson.panel.layout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,{[sizeMode]:screenJson.panel.layout[sizeMode]}),updatedAppConfig=updatedAppConfig.setIn(["screens",screenId,"panel","layout"],screenJson.panel.layout.without(sizeMode))}})),updatedAppConfig}return this.remove(appConfig,contentId)}remove(appConfig,contentId){var _a,_b;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];if(!sgJson)return appConfig;let updatedAppConfig=appConfig;return console.debug("remove screen group",contentId),Object.keys(null!==(_b=sgJson.parent)&&void 0!==_b?_b:{}).forEach((sizeMode=>{const{layoutId}=sgJson.parent[sizeMode];if(updatedAppConfig.layouts[layoutId]){const service=LayoutServiceProvider.getService(updatedAppConfig,layoutId);updatedAppConfig=service.removeItem(updatedAppConfig,sgJson.parent[sizeMode],sizeMode,!1)}})),sgJson.screens.forEach((screenId=>{var _a;const screenJson=updatedAppConfig.screens[screenId],service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,screenJson.main.layout);if(updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,screenJson.main.layout),null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,screenJson.panel.layout);updatedAppConfig=service.removeSizeModeLayouts(updatedAppConfig,screenJson.panel.layout)}updatedAppConfig=updatedAppConfig.set("screens",updatedAppConfig.screens.without(screenId))})),updatedAppConfig=updatedAppConfig.set("screenGroups",updatedAppConfig.screenGroups.without(contentId)),updatedAppConfig}toTocNode(appConfig,contentId,parent,browserSizeMode){var _a,_b;const{layoutId,layoutItemId}=parent,result={label:"",layoutId,layoutItemId,type:"screenGroup",id:contentId,children:[]},sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];return sgJson?(result.label=sgJson.label,result.icon=null!==(_b=sgJson.icon)&&void 0!==_b?_b:screen_group_default(),result.flipIcon=!1,sgJson.screens.forEach((screenId=>{var _a,_b,_c;const screenJson=appConfig.screens[screenId],screenNode={label:screenJson.label,icon:screen_default(),flipIcon:!1,type:"screen",id:screenId,children:[]},mainLayoutId=null!==(_a=screenJson.main.layout[browserSizeMode])&&void 0!==_a?_a:screenJson.main.layout[appConfig.mainSizeMode],mainChildren=LayoutServiceProvider.getService(appConfig,mainLayoutId).getTocStructure(appConfig,mainLayoutId);if(screenNode.children.push({label:jimu_core.Ruy.getIntl().formatMessage({id:"mainStage"}),isLabelReadOnly:!0,type:"layout",id:mainLayoutId,children:mainChildren}),null===(_b=screenJson.panel)||void 0===_b?void 0:_b.layout){const panelLayoutId=null!==(_c=screenJson.panel.layout[browserSizeMode])&&void 0!==_c?_c:screenJson.panel.layout[appConfig.mainSizeMode],panelChildren=LayoutServiceProvider.getService(appConfig,panelLayoutId).getTocStructure(appConfig,panelLayoutId);screenNode.children.push({label:jimu_core.Ruy.getIntl().formatMessage({id:"scrollingPanel"}),isLabelReadOnly:!0,type:"layout",id:panelLayoutId,children:panelChildren})}result.children.push(screenNode)})),result):result}afterMoved(appConfig,contentId,fromLayout,toLayout){return appConfig}afterAdded(appConfig,contentId,toLayout,fromSizeMode,toSizeMode){var _a;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId];if(!sgJson)return appConfig;let updatedAppConfig=appConfig;return sgJson.screens.forEach((screenId=>{var _a,_b;const screenJson=updatedAppConfig.screens[screenId];if(screenJson.main.layout[fromSizeMode]&&!screenJson.main.layout[toSizeMode]){const layoutJson=updatedAppConfig.layouts[screenJson.main.layout[fromSizeMode]],result=LayoutServiceProvider.getService(updatedAppConfig,screenJson.main.layout[fromSizeMode]).duplicateLayout(updatedAppConfig,layoutJson.id,fromSizeMode,toSizeMode,null);updatedAppConfig=result[0];const layoutId=result[1];null!=layoutId&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"parent"],{type:jimu_core.$4y.Screen,id:screenId}).setIn(["screens",screenId,"main","layout",toSizeMode],layoutId))}if((null===(_b=null===(_a=screenJson.panel)||void 0===_a?void 0:_a.layout)||void 0===_b?void 0:_b[fromSizeMode])&&!screenJson.panel.layout[toSizeMode]){const layoutJson=updatedAppConfig.layouts[screenJson.panel.layout[fromSizeMode]],result=LayoutServiceProvider.getService(updatedAppConfig,screenJson.panel.layout[fromSizeMode]).duplicateLayout(updatedAppConfig,layoutJson.id,fromSizeMode,toSizeMode,null);updatedAppConfig=result[0];const layoutId=result[1];null!=layoutId&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"parent"],{type:jimu_core.$4y.Screen,id:screenId}).setIn(["screens",screenId,"panel","layout",toSizeMode],layoutId))}})),updatedAppConfig}addParent(appConfig,contentId,layoutInfo,sizeMode){return appConfig.screenGroups[contentId]?(console.debug("add parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"to",contentId,"in",sizeMode),appConfig.setIn(["screenGroups",contentId,"parent",sizeMode],layoutInfo)):appConfig}removeParent(appConfig,contentId,layoutInfo,sizeMode){const sgJson=appConfig.screenGroups[contentId];if(!sgJson||!sgJson.parent)return appConfig;if(console.debug("remove parent",layoutInfo.layoutId,layoutInfo.layoutItemId,"from",contentId),sizeMode){const parent=sgJson.parent[sizeMode];return(null==parent?void 0:parent.layoutId)===layoutInfo.layoutId&&(null==parent?void 0:parent.layoutItemId)===layoutInfo.layoutItemId?appConfig.setIn(["screenGroups",contentId,"parent"],sgJson.parent.without(sizeMode)):appConfig}let updatedAppConfig=appConfig;return Object.keys(sgJson.parent).forEach((s=>{const parent=sgJson.parent[s];parent.layoutId===layoutInfo.layoutId&&parent.layoutItemId===layoutInfo.layoutItemId&&(updatedAppConfig=appConfig.setIn(["screenGroups",contentId,"parent"],sgJson.parent.without(s)))})),updatedAppConfig}clearParent(appConfig,contentId){const sgJson=appConfig.screenGroups[contentId];return sgJson?appConfig.setIn(["screenGroups",contentId],sgJson.without("parent")):appConfig}removeSizeModeParent(appConfig,contentId,browserSizeMode){var _a;const sgJson=appConfig.screenGroups[contentId];return sgJson&&(null===(_a=sgJson.parent)||void 0===_a?void 0:_a[browserSizeMode])?appConfig.setIn(["screenGroups",contentId,"parent"],sgJson.parent.without(browserSizeMode)):appConfig}findParent(appConfig,contentId,sizeMode){var _a;const sgJson=appConfig.screenGroups[contentId];if(!sgJson||!sgJson.parent)return null;return null!==(_a=sgJson.parent[sizeMode])&&void 0!==_a?_a:sgJson.parent[appConfig.mainSizeMode]}hasParent(appConfig,contentId,sizeMode){const sgJson=appConfig.screenGroups[contentId];return!(!sgJson||!sgJson.parent)&&null!=sgJson.parent[sizeMode]}hasMultipleParents(){return!1}duplicateScreen(appConfig,sgId,screenId,sizeModeList,addToScreenGroup,context){var _a,_b,_c;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[sgId],sJson=null===(_b=appConfig.screens)||void 0===_b?void 0:_b[screenId];if(!sJson||!sgJson||!sgJson.screens.includes(screenId))return[appConfig,null];console.debug("duplicate screen",screenId,"in",sizeModeList,"to",sgId);let screenJson=sJson.set("id",getUniqueId("screen")).set("label",getDuplicateLabel(appConfig,"screen",sJson.label));addToScreenGroup||(screenJson=screenJson.without("parent"));let updatedAppConfig=appConfig.setIn(["screens",screenJson.id],screenJson);const mainSizeModeLayouts={};sizeModeList.forEach((mode=>{mainSizeModeLayouts[mode]=screenJson.main.layout[mode]}));const duplicateContext=null!=context?context:{},duplicateResult=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,mainSizeModeLayouts).duplicateSizeModeLayouts(updatedAppConfig,mainSizeModeLayouts,jimu_core.$4y.Screen,screenJson.id,duplicateContext);if(updatedAppConfig=duplicateResult[0],screenJson=screenJson.setIn(["main","layout"],duplicateResult[1]),null===(_c=screenJson.panel)||void 0===_c?void 0:_c.layout){const panelSizeModeLayouts={};sizeModeList.forEach((mode=>{panelSizeModeLayouts[mode]=screenJson.panel.layout[mode]}));const duplicateResult=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,panelSizeModeLayouts).duplicateSizeModeLayouts(updatedAppConfig,panelSizeModeLayouts,jimu_core.$4y.Screen,screenJson.id,duplicateContext);updatedAppConfig=duplicateResult[0],screenJson=screenJson.setIn(["panel","layout"],duplicateResult[1])}if(updatedAppConfig=updatedAppConfig.setIn(["screens",screenJson.id],screenJson),addToScreenGroup){const screens=sgJson.screens.asMutable(),index=screens.indexOf(screenId);screens.splice(index,1,screenId,screenJson.id),updatedAppConfig=updatedAppConfig.setIn(["screenGroups",sgId,"screens"],screens)}return context&&(context[screenId]=screenJson.id),[updatedAppConfig,screenJson.id]}removeScreen(appConfig,contentId,screenId){var _a,_b;const sgJson=null===(_a=appConfig.screenGroups)||void 0===_a?void 0:_a[contentId],sJson=null===(_b=appConfig.screens)||void 0===_b?void 0:_b[screenId];if(!sJson||!sgJson||1===sgJson.screens.length||!sgJson.screens.includes(screenId))return appConfig;console.debug("remove screen",screenId,"in",contentId);const screens=sgJson.screens.filter((sId=>sId!==screenId));let updatedAppConfig=appConfig.setIn(["screenGroups",contentId,"screens"],screens);if(updatedAppConfig=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,sJson.main.layout).removeSizeModeLayouts(updatedAppConfig,sJson.main.layout),sJson.panel){updatedAppConfig=LayoutServiceProvider.getServiceFromSizeModeLayout(updatedAppConfig,sJson.panel.layout).removeSizeModeLayouts(updatedAppConfig,sJson.panel.layout)}return updatedAppConfig=updatedAppConfig.set("screens",updatedAppConfig.screens.without(screenId)),updatedAppConfig}};const empty_content_service=new class EmptyContentService{setContentId(appConfig,layoutInfo,contentId,sizeMode){if(!contentId)return appConfig;const{layoutId,layoutItemId}=layoutInfo,layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,layoutInfo);if(layoutItem){let updatedAppConfig=appConfig;switch(layoutItem.type){case jimu_core.K6q.Widget:updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",layoutItemId,"widgetId"],contentId),updatedAppConfig=widget_service.addParent(updatedAppConfig,contentId,layoutInfo,sizeMode);break;case jimu_core.K6q.Section:updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",layoutItemId,"sectionId"],contentId),updatedAppConfig=section_service.addParent(updatedAppConfig,contentId,layoutInfo,sizeMode);break;case jimu_core.K6q.ScreenGroup:updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",layoutItemId,"screenGroupId"],contentId),updatedAppConfig=screen_group_service.addParent(updatedAppConfig,contentId,layoutInfo,sizeMode);break;default:return updatedAppConfig}return updatedAppConfig}return appConfig}};var template_service_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const template_service=new class TemplateService{createPageFromTemplate(appConfig,templateJson,contentMapping){return template_service_awaiter(this,void 0,void 0,(function*(){var _a;let updatedAppConfig=appConfig;yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config,pageId=Object.keys(templateConfig.pages)[0],templatePage=templateConfig.pages[pageId],nextPageId=jimu_core.VbA.getUniqueId("page"),label=jimu_core.VbA.getUniqueLabel(appConfig,"page",jimu_core.Ruy.getIntl().formatMessage({id:"page"})),sizeModeList=Object.keys(null!==(_a=templatePage.layout)&&void 0!==_a?_a:{});contentMapping[pageId]=nextPageId,updatedAppConfig=updatedAppConfig.setIn(["pages",nextPageId],templatePage).setIn(["pages",nextPageId,"id"],nextPageId).setIn(["pages",nextPageId,"isVisible"],!0).setIn(["pages",nextPageId,"isDefault"],!1).setIn(["pages",nextPageId,"label"],label).setIn(["pages",nextPageId,"header"],!1).setIn(["pages",nextPageId,"footer"],!1);for(let i=0;i<sizeModeList.length;i+=1){const sizeMode=sizeModeList[i],layoutId=templatePage.layout[sizeMode],service=LayoutServiceProvider.getService(templateConfig,layoutId),result=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.Page,nextPageId,contentMapping);updatedAppConfig=result[0];const newLayoutId=result[1];updatedAppConfig=updatedAppConfig.setIn(["pages",nextPageId,"layout",sizeMode],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{id:nextPageId,type:jimu_core.$4y.Page})}return[updatedAppConfig,nextPageId]}))}createDialogFromTemplate(appConfig,templateJson,contentMapping){return template_service_awaiter(this,void 0,void 0,(function*(){var _a;let updatedAppConfig=appConfig;yield util_makeSureTemplateConfig(templateJson);const templateConfig=templateJson.config,dlgId=Object.keys(templateConfig.dialogs)[0],templateDlg=templateConfig.dialogs[dlgId],nextDlgId=jimu_core.VbA.getUniqueId("dialog"),label=jimu_core.VbA.getUniqueLabel(appConfig,"dialog",jimu_core.Ruy.getIntl().formatMessage({id:"dialog"})),sizeModeList=Object.keys(null!==(_a=templateDlg.layout)&&void 0!==_a?_a:{});contentMapping[dlgId]=nextDlgId;const dlgIndex=Object.keys(Object.keys(updatedAppConfig.dialogs).filter((dlgId=>updatedAppConfig.dialogs[dlgId].mode===templateDlg.mode))).length;updatedAppConfig=updatedAppConfig.setIn(["dialogs",nextDlgId],templateDlg).setIn(["dialogs",nextDlgId,"id"],nextDlgId).setIn(["dialogs",nextDlgId,"label"],label).setIn(["dialogs",nextDlgId,"index"],dlgIndex).setIn(["dialogs",nextDlgId,"isSplash"],!1).setIn(["dialogs",nextDlgId,"closeWhenClickOverlay"],templateDlg.closeWhenClickOverlay).setIn(["dialogs",nextDlgId,"sizeMode"],templateDlg.sizeMode);for(let i=0;i<sizeModeList.length;i+=1){const sizeMode=sizeModeList[i],layoutId=templateDlg.layout[sizeMode],service=LayoutServiceProvider.getService(templateConfig,layoutId),result=yield service.createLayoutFromTemplate(updatedAppConfig,templateJson,layoutId,sizeMode,jimu_core.$4y.Dialog,nextDlgId,contentMapping);updatedAppConfig=result[0];const newLayoutId=result[1];updatedAppConfig=updatedAppConfig.setIn(["dialogs",nextDlgId,"layout",sizeMode],newLayoutId).setIn(["layouts",newLayoutId,"parent"],{id:nextDlgId,type:jimu_core.$4y.Dialog})}return[updatedAppConfig,nextDlgId]}))}applyTemplateToHeader(appConfig,templateJson,currentSizeMode,context){return template_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c,_d;if(yield util_makeSureTemplateConfig(templateJson),!(null===(_a=null==templateJson?void 0:templateJson.config)||void 0===_a?void 0:_a.header))return appConfig;const templateHeaderLayout=templateJson.config.header.layout,templateHeaderLayoutId=Object.values(templateHeaderLayout)[0],headerLayout=null===(_b=null==appConfig?void 0:appConfig.header)||void 0===_b?void 0:_b.layout;if(headerLayout){const service=LayoutServiceProvider.getService(templateJson.config,templateHeaderLayoutId),result=yield service.replaceSizeModeLayout(appConfig,headerLayout,templateJson,(0,jimu_core.J3Z)(null===(_d=null===(_c=null==templateJson?void 0:templateJson.config)||void 0===_c?void 0:_c.header)||void 0===_d?void 0:_d.layout),currentSizeMode,jimu_core.$4y.Header,"header",context);let updatedAppConfig=result[0];return Object.keys(result[1]).forEach((mode=>{const layoutId=result[1][mode];updatedAppConfig=updatedAppConfig.setIn(["header","layout",mode],layoutId).setIn(["layouts",layoutId,"parent"],{id:"header",type:jimu_core.$4y.Header})})),Object.keys(templateJson.config.header).forEach((key=>{"layout"!==key&&null!=templateJson.config.header[key]&&(updatedAppConfig=updatedAppConfig.setIn(["header",key],templateJson.config.header[key]))})),updatedAppConfig}return appConfig}))}applyTemplateToFooter(appConfig,templateJson,currentSizeMode,context){return template_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c,_d;if(yield util_makeSureTemplateConfig(templateJson),!(null===(_a=null==templateJson?void 0:templateJson.config)||void 0===_a?void 0:_a.footer))return appConfig;const templateFooterLayout=templateJson.config.footer.layout,templateFooterLayoutId=Object.values(templateFooterLayout)[0],footerLayout=null===(_b=null==appConfig?void 0:appConfig.footer)||void 0===_b?void 0:_b.layout;if(footerLayout){const service=LayoutServiceProvider.getService(templateJson.config,templateFooterLayoutId),result=yield service.replaceSizeModeLayout(appConfig,footerLayout,templateJson,(0,jimu_core.J3Z)(null===(_d=null===(_c=null==templateJson?void 0:templateJson.config)||void 0===_c?void 0:_c.footer)||void 0===_d?void 0:_d.layout),currentSizeMode,jimu_core.$4y.Footer,"footer",context);let updatedAppConfig=result[0];return Object.keys(result[1]).forEach((mode=>{const layoutId=result[1][mode];updatedAppConfig=updatedAppConfig.setIn(["footer","layout",mode],layoutId).setIn(["layouts",layoutId,"parent"],{id:"footer",type:jimu_core.$4y.Footer})})),Object.keys(templateJson.config.footer).forEach((key=>{"layout"!==key&&null!=templateJson.config.footer[key]&&(updatedAppConfig=updatedAppConfig.setIn(["footer",key],templateJson.config.footer[key]))})),updatedAppConfig}return appConfig}))}applyTemplateToBody(appConfig,pageId,templateJson,currentSizeMode,context){return template_service_awaiter(this,void 0,void 0,(function*(){var _a,_b;if(yield util_makeSureTemplateConfig(templateJson),!templateJson.config){const templateContent=yield(0,templates.getTemplateConfig)(templateJson.type,templateJson.name);if(templateJson.config=templateContent,!templateJson.config)return appConfig;jimu_core.VbA.fixLayoutIds(templateJson.config),jimu_core.WpD.replaceI18nPlaceholdersInObject(templateJson.config,jimu_core.Ruy.getIntl(),translations_default.A)}const templatePageId=Object.keys(templateJson.config.pages)[0],templatePageLayout=templateJson.config.pages[templatePageId].layout,templatePageLayoutId=Object.values(templatePageLayout)[0],pageLayout=null===(_b=null===(_a=null==appConfig?void 0:appConfig.pages)||void 0===_a?void 0:_a[pageId])||void 0===_b?void 0:_b.layout;if(pageLayout){const service=LayoutServiceProvider.getService(templateJson.config,templatePageLayoutId),result=yield service.replaceSizeModeLayout(appConfig,pageLayout,templateJson,(0,jimu_core.J3Z)(templatePageLayout),currentSizeMode,jimu_core.$4y.Page,pageId,context);let updatedAppConfig=result[0];Object.keys(result[1]).forEach((mode=>{const layoutId=result[1][mode];updatedAppConfig=updatedAppConfig.setIn(["pages",pageId,"layout",mode],layoutId).setIn(["layouts",layoutId,"parent"],{id:pageId,type:jimu_core.$4y.Page})}));return["mode","maxWidth","bodyBackgroundColor","bodyBackgroundIMage","bodyBackgroundPosition"].forEach((key=>{const value=templateJson.config.pages[templatePageId][key];"layout"!==key&&null!=value&&(updatedAppConfig=updatedAppConfig.setIn(["pages",pageId,key],value))})),updatedAppConfig}return appConfig}))}applyTemplateToDialog(appConfig,dialogId,templateJson,currentSizeMode,context){return template_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;yield util_makeSureTemplateConfig(templateJson);const templateDlgId=Object.keys(templateJson.config.dialogs)[0],dialog=null===(_a=null==appConfig?void 0:appConfig.dialogs)||void 0===_a?void 0:_a[dialogId],dialogLayout=null==dialog?void 0:dialog.layout,templateDlg=null===(_c=null===(_b=null==templateJson?void 0:templateJson.config)||void 0===_b?void 0:_b.dialogs)||void 0===_c?void 0:_c[templateDlgId];if(dialogLayout&&(null==templateDlg?void 0:templateDlg.layout)){const templateDlgLayout=templateDlg.layout,templateDlgLayoutId=Object.values(templateDlgLayout)[0],service=LayoutServiceProvider.getService(templateJson.config,templateDlgLayoutId),result=yield service.replaceSizeModeLayout(appConfig,dialogLayout,templateJson,(0,jimu_core.J3Z)(templateDlgLayout),currentSizeMode,jimu_core.$4y.Dialog,dialogId,context);let updatedAppConfig=result[0];const isSameMode=dialog.mode===templateDlg.mode,dlgIndex=isSameMode?dialog.index:Object.keys(Object.keys(updatedAppConfig.dialogs).filter((dlgId=>updatedAppConfig.dialogs[dlgId].mode===templateDlg.mode))).length;updatedAppConfig=updatedAppConfig.setIn(["dialogs",dialogId,"index"],dlgIndex),Object.keys(result[1]).forEach((mode=>{const layoutId=result[1][mode];updatedAppConfig=updatedAppConfig.setIn(["dialogs",dialogId,"layout",mode],layoutId).setIn(["dialogs",dialogId,"sizeMode",currentSizeMode],templateDlg.sizeMode[currentSizeMode]||templateDlg.sizeMode[jimu_core.rHp.Large]).setIn(["layouts",layoutId,"parent"],{id:dialogId,type:jimu_core.$4y.Dialog})}));return["mode","overlayColor","dialogBackground","border","blockPage","interactionType","interactionStyles","confirmBeforeClose","alwaysShowConfirmation","closeWhenClickOverlay"].forEach((key=>{updatedAppConfig=updatedAppConfig.setIn(["dialogs",dialogId,key],templateDlg[key])})),isSameMode||Object.keys(updatedAppConfig.dialogs).forEach((dlgId=>{const dlg=updatedAppConfig.dialogs[dlgId];dlg.mode===dialog.mode&&dlg.index>dialog.index&&(updatedAppConfig=updatedAppConfig.setIn(["dialogs",dlg.id,"index"],dlg.index-1))})),updatedAppConfig}return appConfig}))}applyGridTemplate(appConfig,widgetId,templateJson,currentSizeMode,context){return template_service_awaiter(this,void 0,void 0,(function*(){var _a,_b;yield util_makeSureTemplateConfig(templateJson);const widgetLayout=null===(_b=null===(_a=null==appConfig?void 0:appConfig.widgets)||void 0===_a?void 0:_a[widgetId])||void 0===_b?void 0:_b.layouts,templateGridWidget=Object.values(templateJson.config.widgets).find((widgetJson=>"widgets/layout/grid/"===widgetJson.uri)),sizeModeLayouts=widgetLayout.DEFAULT,service=LayoutServiceProvider.getInstance().getServiceByType(jimu_core.p5K.GridLayout),result=yield service.replaceSizeModeLayout(appConfig,sizeModeLayouts,templateJson,(0,jimu_core.J3Z)(templateGridWidget.layouts.DEFAULT),currentSizeMode,jimu_core.$4y.Widget,widgetId,context);let updatedAppConfig=result[0];return Object.keys(result[1]).forEach((mode=>{const layoutId=result[1][mode];updatedAppConfig=updatedAppConfig.setIn(["widgets",widgetId,"layouts","DEFAULT",mode],layoutId).setIn(["layouts",layoutId,"parent"],{id:widgetId,type:jimu_core.$4y.Widget})})),updatedAppConfig}))}};var content_service_wrapper_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class ContentServiceWrapper{constructor(appConfig,layoutItem){switch(this.appConfig=appConfig,this.layoutItem=layoutItem,layoutItem.type){case jimu_core.K6q.Widget:this.service=widget_service,this.contentId=layoutItem.widgetId;break;case jimu_core.K6q.Section:this.service=section_service,this.contentId=layoutItem.sectionId;break;case jimu_core.K6q.ScreenGroup:this.service=screen_group_service,this.contentId=layoutItem.screenGroupId}}getConfig(){return this.appConfig}getContentId(){return this.contentId}createFromTemplate(templateJson,sizeModeList,context,options){return content_service_wrapper_awaiter(this,void 0,void 0,(function*(){if(this.contentId&&this.service){const result=yield this.service.createFromTemplate(this.appConfig,templateJson,this.contentId,sizeModeList,context,options);return this.appConfig=result[0],result}return[this.appConfig,null]}))}duplicateEmbedLayout(fromSizeMode,toSizeMdoe,context){if(this.service){const result=this.service.duplicateEmbedLayout(this.appConfig,this.contentId,fromSizeMode,toSizeMdoe,context);return this.appConfig=result[0],result}return[this.appConfig,null]}duplicate(targetBrowserSize,context){if(this.service){const result=this.service.duplicate(this.appConfig,this.contentId,targetBrowserSize,context);return this.appConfig=result[0],result}return[this.appConfig,null]}tryRemove(layoutInfo,browserSizeMode){return this.service&&(this.appConfig=this.service.tryRemove(this.appConfig,this.contentId,layoutInfo,browserSizeMode)),this.appConfig}remove(){return this.service&&(this.appConfig=this.service.remove(this.appConfig,this.contentId)),this.appConfig}toTocNode(parent,browserSizeMode){return this.service?this.service.toTocNode(this.appConfig,this.contentId,parent,browserSizeMode):null}afterMoved(fromLayoutId,toLayoutId){return this.service&&(this.appConfig=this.service.afterMoved(this.appConfig,this.contentId,fromLayoutId,toLayoutId)),this.appConfig}afterAdded(layoutId,fromSizeMode,toSizeMode){return this.service&&(this.appConfig=this.service.afterAdded(this.appConfig,this.contentId,layoutId,fromSizeMode,toSizeMode)),this.appConfig}addParent(layoutInfo,browserSizeMode){return this.service&&(this.appConfig=this.service.addParent(this.appConfig,this.contentId,layoutInfo,browserSizeMode)),this.appConfig}removeParent(layoutInfo,browserSizeMode){return this.service&&(this.appConfig=this.service.removeParent(this.appConfig,this.contentId,layoutInfo,browserSizeMode)),this.appConfig}clearParent(){return this.service&&(this.appConfig=this.service.clearParent(this.appConfig,this.contentId)),this.appConfig}removeSizeModeParent(browserSizeMode){return this.service&&(this.appConfig=this.service.removeSizeModeParent(this.appConfig,this.contentId,browserSizeMode)),this.appConfig}findParent(browserSizeMode){var _a;return null===(_a=this.service)||void 0===_a?void 0:_a.findParent(this.appConfig,this.contentId,browserSizeMode)}hasParent(browserSizeMode){var _a,_b;return null!==(_b=null===(_a=this.service)||void 0===_a?void 0:_a.hasParent(this.appConfig,this.contentId,browserSizeMode))&&void 0!==_b&&_b}hasMultipleParents(browserSizeMode){var _a,_b;return null!==(_b=null===(_a=this.service)||void 0===_a?void 0:_a.hasMultipleParents(this.appConfig,this.contentId,browserSizeMode))&&void 0!==_b&&_b}}var base_layout_service_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class BaseLayoutService{createBlankLayout(appConfig,type){const layoutId=getUniqueId("layout"),layoutJson={id:layoutId,content:{},type};console.debug("create a blank layout with type",type);return[appConfig.setIn(["layouts",layoutId],layoutJson),layoutId]}duplicateLayout(appConfig,layoutId,fromSizeMode,toSizeMode,context,duplicateContent){var _a,_b,_c;const layoutJson=appConfig.layouts[layoutId];if(!layoutJson)return[appConfig,null];const newLayoutJson=layoutJson.set("id",getUniqueId("layout"));let updatedAppConfig=appConfig.setIn(["layouts",newLayoutJson.id],newLayoutJson);if(console.debug("duplicate layout",layoutId,", from size mode",fromSizeMode,", to size mode",toSizeMode),Object.keys(null!==(_a=newLayoutJson.content)&&void 0!==_a?_a:{}).forEach((itemId=>{var _a;const layoutItem=newLayoutJson.content[itemId];if(layoutItem.isPending){const layout=updatedAppConfig.layouts[newLayoutJson.id];if(updatedAppConfig=updatedAppConfig.setIn(["layouts",layout.id,"content"],layout.content.without(itemId)),null===(_a=layout.order)||void 0===_a?void 0:_a.includes(itemId)){const order=layout.order.filter((id=>id!==itemId));updatedAppConfig=updatedAppConfig.setIn(["layouts",layout.id,"order"],order)}}else if(duplicateContent)updatedAppConfig=this.duplicateAndReplaceContent(updatedAppConfig,{layoutId,layoutItemId:itemId},{layoutId:newLayoutJson.id,layoutItemId:itemId},fromSizeMode,toSizeMode,context);else{const service=new ContentServiceWrapper(updatedAppConfig,layoutItem);if(fromSizeMode!==toSizeMode&&!service.hasMultipleParents(fromSizeMode)&&service.hasParent(toSizeMode)){const emptyLayoutItem=layoutItem.set("type",jimu_core.K6q.Widget).without("widgetId");updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutJson.id,"content",itemId],emptyLayoutItem)}else{const result=service.duplicateEmbedLayout(fromSizeMode,toSizeMode,context);if(updatedAppConfig=result[0],result[1]){const newLayoutItem=layoutItem.set("widgetId",result[1]);updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutJson.id,"content",itemId],newLayoutItem);const service2=new ContentServiceWrapper(updatedAppConfig,newLayoutItem);updatedAppConfig=service2.addParent({layoutId:newLayoutJson.id,layoutItemId:itemId},toSizeMode)}else updatedAppConfig=service.addParent({layoutId:newLayoutJson.id,layoutItemId:itemId},toSizeMode)}}})),toSizeMode===jimu_core.rHp.Large&&newLayoutJson.type===jimu_core.p5K.GridLayout&&(null===(_b=newLayoutJson.setting)||void 0===_b?void 0:_b.mainItemId)){const newMainItemId=null!==(_c=null==context?void 0:context[layoutJson.setting.mainItemId])&&void 0!==_c?_c:layoutJson.setting.mainItemId;updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutJson.id,"setting","mainItemId"],newMainItemId)}if(fromSizeMode!==toSizeMode){const layoutJson=this.transformLayout(updatedAppConfig,updatedAppConfig.layouts[newLayoutJson.id],fromSizeMode,toSizeMode);updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutJson.id],layoutJson)}return context&&(context[layoutId]=newLayoutJson.id),[updatedAppConfig,newLayoutJson.id]}duplicateSizeModeLayouts(appConfig,layouts,parentType,parentId,context){let updatedAppConfig=appConfig;const outputLayouts={};return Object.keys(null!=layouts?layouts:{}).forEach((mode=>{const layoutId=layouts[mode],result=this.duplicateLayout(updatedAppConfig,layoutId,mode,mode,context,!0);updatedAppConfig=result[0],outputLayouts[mode]=result[1],null!=result[1]&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",result[1],"parent"],{type:parentType,id:parentId}))})),[updatedAppConfig,outputLayouts]}duplicateAndReplaceContent(appConfig,originLayoutInfo,desLayoutInfo,fromSizeMode,toSizeMode,context){const{layoutId:originLayoutId,layoutItemId:originItemId}=originLayoutInfo,{layoutId:desLayoutId,layoutItemId:desItemId}=desLayoutInfo;if(!appConfig.layouts||!appConfig.layouts[originLayoutId]||!appConfig.layouts[desLayoutId])return appConfig;const oriLayoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,{layoutId:originLayoutId,layoutItemId:originItemId}),result=new ContentServiceWrapper(appConfig,oriLayoutItem).duplicate(toSizeMode,context);let updatedAppConfig=result[0];const contentId=result[1];updatedAppConfig=updatedAppConfig.setIn(["layouts",desLayoutId,"content",desItemId,"type"],oriLayoutItem.type),updatedAppConfig=empty_content_service.setContentId(updatedAppConfig,{layoutId:desLayoutId,layoutItemId:desItemId},contentId,toSizeMode);const desLayoutItem=layout_runtime.searchUtils.findLayoutItem(updatedAppConfig,desLayoutInfo),service2=new ContentServiceWrapper(updatedAppConfig,desLayoutItem);return service2.removeParent({layoutId:originLayoutId,layoutItemId:originItemId},fromSizeMode),updatedAppConfig=service2.getConfig(),fromSizeMode===toSizeMode&&toSizeMode===appConfig.mainSizeMode&&(updatedAppConfig=placeholder_service.afterLayoutItemCopied(updatedAppConfig,originLayoutInfo,desLayoutInfo)),updatedAppConfig}addContent(appConfig,layoutId,contentId,type,sizeMode){const result=this.createBlankItem(appConfig,layoutId);let updatedAppConfig=result[0];const newItemId=result[1];console.debug(`add ${contentId} to ${layoutId}`),updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",newItemId,"type"],type);const layoutInfo={layoutId,layoutItemId:newItemId};return updatedAppConfig=empty_content_service.setContentId(updatedAppConfig,layoutInfo,contentId,sizeMode),updatedAppConfig=this.afterItemAdded(updatedAppConfig,layoutInfo,sizeMode,sizeMode),[updatedAppConfig,newItemId]}removeLayout(appConfig,layoutId,sizeMode){var _a;const layoutJson=appConfig.layouts[layoutId];if(!layoutJson)return appConfig;let updatedAppConfig=appConfig;return console.debug("remove layout",layoutId,"in size mode",sizeMode),Object.keys(null!==(_a=layoutJson.content)&&void 0!==_a?_a:{}).forEach((itemId=>{updatedAppConfig=this.removeItem(updatedAppConfig,{layoutId,layoutItemId:itemId},sizeMode,!0,!1)})),updatedAppConfig=this.removeLayoutIdFromParent(updatedAppConfig,layoutId,sizeMode),updatedAppConfig=updatedAppConfig.setIn(["layouts"],updatedAppConfig.layouts.without(layoutId)),updatedAppConfig}removeSizeModeLayouts(appConfig,layouts){let updatedAppConfig=appConfig;return Object.keys(layouts).forEach((mode=>{const layoutId=layouts[mode];updatedAppConfig=this.removeLayout(updatedAppConfig,layoutId,mode)})),updatedAppConfig}removeLayoutIdFromParent(appConfig,layoutId,sizeMode){var _a,_b,_c;const layoutJson=appConfig.layouts[layoutId];if(!layoutJson)return appConfig;let updatedAppConfig=appConfig;const parentId=null===(_a=layoutJson.parent)||void 0===_a?void 0:_a.id;switch(null===(_b=layoutJson.parent)||void 0===_b?void 0:_b.type){case jimu_core.$4y.Header:updatedAppConfig.header.layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from header, in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["header","layout"],updatedAppConfig.header.layout.without(sizeMode)));break;case jimu_core.$4y.Footer:updatedAppConfig.footer.layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from footer, in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["footer","layout"],updatedAppConfig.footer.layout.without(sizeMode)));break;case jimu_core.$4y.Dialog:updatedAppConfig.dialogs[parentId].layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from dialog",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["dialogs",parentId,"layout"],updatedAppConfig.dialogs[parentId].layout.without(sizeMode)));break;case jimu_core.$4y.Page:updatedAppConfig.pages[parentId].layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from page",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["pages",parentId,"layout"],updatedAppConfig.pages[parentId].layout.without(sizeMode)));break;case jimu_core.$4y.View:updatedAppConfig.views[parentId].layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from view",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["views",parentId,"layout"],updatedAppConfig.views[parentId].layout.without(sizeMode)));break;case jimu_core.$4y.Screen:updatedAppConfig.screens[parentId].main.layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from screen main",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["screens",parentId,"main","layout"],updatedAppConfig.screens[parentId].main.layout.without(sizeMode))),(null===(_c=updatedAppConfig.screens[parentId].panel)||void 0===_c?void 0:_c.layout)&&updatedAppConfig.screens[parentId].panel.layout[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from screen panel",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["screens",parentId,"panel","layout"],updatedAppConfig.screens[parentId].panel.layout.without(sizeMode)));break;case jimu_core.$4y.Widget:const widgetJson=updatedAppConfig.widgets[parentId];Object.keys(widgetJson.layouts).forEach((name=>{const layouts=widgetJson.layouts[name];layouts[sizeMode]===layoutId&&(console.debug("remove layout",layoutId,"from widget",parentId,", in size mode",sizeMode),updatedAppConfig=updatedAppConfig.setIn(["widgets",parentId,"layouts",name],layouts.without(sizeMode)))}))}return updatedAppConfig}replaceLayoutIdInParent(appConfig,parentInfo,oldLayoutId,newLayoutId,sizeMode){let updatedAppConfig=appConfig;switch(console.debug("replace layout",oldLayoutId,"with new one",newLayoutId,"in parent",parentInfo.id,sizeMode),parentInfo.type){case jimu_core.$4y.Header:updatedAppConfig.header.layout[sizeMode]===oldLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["header","layout",sizeMode],newLayoutId));break;case jimu_core.$4y.Footer:updatedAppConfig.footer.layout[sizeMode]===oldLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["footer","layout",sizeMode],newLayoutId));break;case jimu_core.$4y.Dialog:updatedAppConfig.dialogs[parentInfo.id].layout[sizeMode]===oldLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["dialogs",parentInfo.id,"layout",sizeMode],newLayoutId));break;case jimu_core.$4y.Page:updatedAppConfig.pages[parentInfo.id].layout[sizeMode]===oldLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["pages",parentInfo.id,"layout",sizeMode],newLayoutId));break;case jimu_core.$4y.Widget:const widgetJson=updatedAppConfig.widgets[parentInfo.id];widgetJson&&Object.keys(widgetJson.layouts).some((name=>widgetJson.layouts[name][sizeMode]===oldLayoutId&&(updatedAppConfig=updatedAppConfig.setIn(["widgets",parentInfo.id,"layouts",name,sizeMode],newLayoutId),!0)))}return updatedAppConfig}transformLayout(appConfig,layoutJson,fromSizeMode,toSizeMode){let extManager;extManager=window.jimuConfig.isBuilder?window._appWindow&&window._appWindow._extensionManager:jimu_core.nH3.getInstance();const exts=extManager.getExtensions(jimu_core.vZE.R6.LayoutTransformer);if(exts.length>0){const ext=exts.find((ext=>ext.layoutType===layoutJson.type));ext&&ext.transformLayout&&(layoutJson=ext.transformLayout(layoutJson,fromSizeMode,toSizeMode,appConfig))}return layoutJson}createBlankItem(appConfig,layoutId){const nextLayoutItemId=`${layout_runtime.utils.getMaximumId(appConfig.layouts[layoutId])+1}`,newLayoutItem={id:nextLayoutItemId};return[appConfig.setIn(["layouts",layoutId,"content",nextLayoutItemId],newLayoutItem),nextLayoutItemId]}duplicateItemInSameLayout(appConfig,layoutInfo,sizeMode,context){const{layoutId,layoutItemId}=layoutInfo;if(!appConfig.layouts||!appConfig.layouts[layoutId])return[appConfig,null];console.debug("duplicate layout item",layoutId,layoutItemId,"in size mode",sizeMode);const oriLayoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,layoutInfo),newItemId=`${layout_runtime.utils.getMaximumId(appConfig.layouts[layoutId])+1}`,newItem=oriLayoutItem.set("id",newItemId);let updatedAppConfig=appConfig.setIn(["layouts",layoutId,"content",newItem.id],newItem);updatedAppConfig=this.duplicateAndReplaceContent(updatedAppConfig,{layoutId,layoutItemId},{layoutId,layoutItemId:newItem.id},sizeMode,sizeMode,context);const layoutItem=layout_runtime.searchUtils.findLayoutItem(updatedAppConfig,{layoutId,layoutItemId:newItem.id}),service=new ContentServiceWrapper(updatedAppConfig,layoutItem);return service.hasMultipleParents(sizeMode)&&(service.removeSizeModeParent(sizeMode),service.addParent({layoutId,layoutItemId:newItem.id},sizeMode),updatedAppConfig=service.getConfig()),[updatedAppConfig,newItem.id]}pendItem(appConfig,layoutInfo){const layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,layoutInfo),{layoutId,layoutItemId}=layoutInfo;let updatedConfig=appConfig;return layoutItem&&(updatedConfig=appConfig.setIn(["layouts",layoutId,"content",layoutItemId,"isPending"],!0)),updatedConfig}removeItem(appConfig,layoutInfo,sizeMode,removeContent,force,duringMoveOperation){var _a,_b;const{layoutId,layoutItemId}=layoutInfo,layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,layoutInfo);if(!layoutItem)return appConfig;console.debug(`remove layout item, ${layoutId} ${layoutItemId}, removeContent=${removeContent}, force=${force}`);const placeholderInfo=placeholder_service.getPlaceholderInfo(appConfig,layoutInfo),lockLayout=null!==(_b=null===(_a=appConfig.forBuilderAttributes)||void 0===_a?void 0:_a.lockLayout)&&void 0!==_b&&_b,isExpressBuilder=jimu_core.WpD.isExpressMode(),layoutJson=appConfig.layouts[layoutId],keepLayoutItem=lockLayout||isExpressBuilder&&layoutJson.type!==jimu_core.p5K.FlexRowLayout||placeholderInfo&&!duringMoveOperation&&(layoutItem.widgetId||layoutItem.sectionId),isPlaceholderInGridLayout=layoutJson.type===jimu_core.p5K.GridLayout&&layoutItem.type===jimu_core.K6q.Widget&&!layoutItem.widgetId;let updatedAppConfig=appConfig;(!keepLayoutItem||isExpressBuilder&&isPlaceholderInGridLayout)&&(updatedAppConfig=this.beforeItemRemoved(updatedAppConfig,layoutInfo));const service=new ContentServiceWrapper(updatedAppConfig,layoutItem);if(removeContent?force?service.remove():service.tryRemove(layoutInfo,sizeMode):service.removeParent(layoutInfo,sizeMode),updatedAppConfig=service.getConfig(),keepLayoutItem)layoutItem.type===jimu_core.K6q.Widget&&layoutItem.widgetId?updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",layoutItemId],layoutItem.without("widgetId")):layoutItem.type===jimu_core.K6q.Section&&layoutItem.sectionId&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content",layoutItemId],layoutItem.without("sectionId").set("type",jimu_core.K6q.Widget)));else{const layoutJson=updatedAppConfig.layouts[layoutId];layoutJson&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",layoutId,"content"],layoutJson.content.without(layoutItemId))),duringMoveOperation||(updatedAppConfig=placeholder_service.afterLayoutItemRemoved(updatedAppConfig,layoutInfo)),updatedAppConfig=this.afterItemRemoved(updatedAppConfig,layoutInfo)}return updatedAppConfig}replaceSizeModeLayout(appConfig,targetSizeModeLayout,templatePageJson,sourceSizeModeLayout,currentSizeMode,parentType,parentId,context){return base_layout_service_awaiter(this,void 0,void 0,(function*(){if(!sourceSizeModeLayout)return[appConfig,targetSizeModeLayout];const isMainSizeMode=currentSizeMode===appConfig.mainSizeMode;let sizemodeKeys,updatedAppConfig=appConfig,updatedSizeModeLayout=targetSizeModeLayout;sizemodeKeys=isMainSizeMode?Object.keys(sourceSizeModeLayout).filter((key=>key===currentSizeMode||null==targetSizeModeLayout[key])):[currentSizeMode];for(let i=0;i<sizemodeKeys.length;i+=1){const sizeMode=sizemodeKeys[i],layoutResult=yield this.replaceLayout(updatedAppConfig,updatedSizeModeLayout[sizeMode],templatePageJson,sourceSizeModeLayout[sizeMode],sizeMode,parentType,parentId,context);layoutResult[1]&&(updatedAppConfig=layoutResult[0],updatedSizeModeLayout=updatedSizeModeLayout.set(sizeMode,layoutResult[1]))}if(null==sourceSizeModeLayout[currentSizeMode]){const layoutResult=yield this.replaceLayout(updatedAppConfig,updatedSizeModeLayout[currentSizeMode],templatePageJson,sourceSizeModeLayout[updatedAppConfig.mainSizeMode],currentSizeMode,parentType,parentId,context);updatedAppConfig=layoutResult[0],updatedSizeModeLayout=updatedSizeModeLayout.set(currentSizeMode,layoutResult[1])}return[updatedAppConfig,updatedSizeModeLayout]}))}replaceLayout(appConfig,targetLayoutId,templatePageJson,sourceLayoutId,sizeMode,parentType,parentId,context){return base_layout_service_awaiter(this,void 0,void 0,(function*(){var _a,_b,_c;if(null==(null===(_b=null===(_a=templatePageJson.config)||void 0===_a?void 0:_a.layouts)||void 0===_b?void 0:_b[sourceLayoutId]))return[appConfig,null];console.debug(`replace ${targetLayoutId} with template ${sourceLayoutId} in ${sizeMode}`);let updatedAppConfig=appConfig;const pendingItems=[];if(null===(_c=appConfig.layouts)||void 0===_c?void 0:_c[targetLayoutId]){const targetLayout=appConfig.layouts[targetLayoutId];let isEmpty=!0;if((null==targetLayout?void 0:targetLayout.content)&&Object.keys(targetLayout.content).length>0&&(Object.keys(targetLayout.content).forEach((itemId=>{const layoutItem=targetLayout.content[itemId];layoutItem.isPending?pendingItems.push({type:layoutItem.type,id:layoutItem.widgetId||layoutItem.sectionId||layoutItem.screenGroupId}):isEmpty=!1})),!isEmpty))return[appConfig,null];updatedAppConfig=updatedAppConfig.set("layouts",updatedAppConfig.layouts.without(targetLayoutId))}const result=yield this.createLayoutFromTemplate(updatedAppConfig,templatePageJson,sourceLayoutId,sizeMode,parentType,parentId,context);updatedAppConfig=result[0];const newLayoutId=result[1];return updatedAppConfig=this.replaceLayoutIdInParent(updatedAppConfig,{type:parentType,id:parentId},targetLayoutId,newLayoutId,sizeMode),pendingItems.length>0&&pendingItems.forEach((item=>{const result=this.createBlankItem(updatedAppConfig,newLayoutId);updatedAppConfig=result[0];const newItemId=result[1];switch(updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"content",newItemId,"type"],item.type).setIn(["layouts",newLayoutId,"content",newItemId,"isPending"],!0),item.type){case jimu_core.K6q.Widget:updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"content",newItemId,"widgetId"],item.id);break;case jimu_core.K6q.Section:updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"content",newItemId,"sectionId"],item.id);break;case jimu_core.K6q.ScreenGroup:updatedAppConfig=updatedAppConfig.setIn(["layouts",newLayoutId,"content",newItemId,"screenGroupId"],item.id)}})),[updatedAppConfig,newLayoutId]}))}createLayoutFromTemplate(appConfig,templateJson,layoutId,sizeMode,parentType,parentId,context){return base_layout_service_awaiter(this,void 0,void 0,(function*(){var _a,_b;let updatedAppConfig=appConfig;yield util_makeSureTemplateConfig(templateJson),console.debug("create layout",layoutId,"from template");const templateLayout=templateJson.config.layouts[layoutId],nextLayoutId=getUniqueId("layout");context[layoutId]=nextLayoutId,updatedAppConfig=updatedAppConfig.setIn(["layouts",nextLayoutId],templateLayout).setIn(["layouts",nextLayoutId,"id"],nextLayoutId).setIn(["layouts",nextLayoutId,"parent"],{type:parentType,id:parentId});const items=templateLayout.type===jimu_core.p5K.GridLayout?Object.keys(templateLayout.content||{}):null!==(_a=templateLayout.order)&&void 0!==_a?_a:[];for(let i=0;i<items.length;i++){const itemId=items[i],layoutItem=templateLayout.content[itemId],service=new ContentServiceWrapper(updatedAppConfig,layoutItem),result=yield service.createFromTemplate(templateJson,[sizeMode],context,{isBlock:templateLayout.type===jimu_core.p5K.FlowLayout});updatedAppConfig=result[0];const newContentId=result[1];updatedAppConfig=empty_content_service.setContentId(updatedAppConfig,{layoutId:nextLayoutId,layoutItemId:itemId},newContentId,sizeMode)}if(sizeMode===jimu_core.rHp.Large&&templateLayout.type===jimu_core.p5K.GridLayout&&(null===(_b=templateLayout.setting)||void 0===_b?void 0:_b.mainItemId)){const newMainItemId=context[templateLayout.setting.mainItemId];updatedAppConfig=updatedAppConfig.setIn(["layouts",nextLayoutId,"setting","mainItemId"],newMainItemId)}return[updatedAppConfig,nextLayoutId]}))}getTocStructure(appConfig,layoutId){return null}moveLayoutItem(appConfig,fromLayoutInfo,toLayoutId,fromSizeMode,toSizeMode){var _a,_b,_c,_d;const movingLayoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,fromLayoutInfo);if(!movingLayoutItem)return[appConfig,null];let updatedAppConfig=appConfig;const fromLayout=appConfig.layouts[fromLayoutInfo.layoutId],fromLayoutItem=layout_runtime.searchUtils.findLayoutItem(updatedAppConfig,fromLayoutInfo);if(fromLayout.type===jimu_core.p5K.GridLayout&&!fromLayoutItem.isPending&&fromSizeMode===toSizeMode){const gridService=LayoutServiceProvider.getInstance().getServiceByType(jimu_core.p5K.GridLayout);updatedAppConfig=gridService.beforeItemRemoved(updatedAppConfig,fromLayoutInfo)}if(console.debug("move layout item from",fromLayoutInfo.layoutId,fromLayoutInfo.layoutItemId,"to",toLayoutId,toSizeMode),fromLayoutItem.isPending&&fromSizeMode===toSizeMode&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",fromLayoutInfo.layoutId,"content",fromLayoutInfo.layoutItemId],fromLayoutItem.without("isPending"))),fromLayoutInfo.layoutId!==toLayoutId){const fromLayoutService=LayoutServiceProvider.getService(updatedAppConfig,fromLayoutInfo.layoutId);if(fromSizeMode===toSizeMode){let parentLayoutInfos=[fromLayoutInfo];if(fromLayoutItem.type===jimu_core.K6q.Widget){const widgetJson=updatedAppConfig.widgets[fromLayoutItem.widgetId];widgetJson&&(null===(_b=null===(_a=widgetJson.parent)||void 0===_a?void 0:_a[fromSizeMode])||void 0===_b?void 0:_b.length)>1&&(parentLayoutInfos=widgetJson.parent[fromSizeMode])}else if(fromLayoutItem.type===jimu_core.K6q.Section){const sectionJson=updatedAppConfig.sections[fromLayoutItem.sectionId];(null===(_d=null===(_c=sectionJson.parent)||void 0===_c?void 0:_c[fromSizeMode])||void 0===_d?void 0:_d.length)>1&&(parentLayoutInfos=sectionJson.parent[fromSizeMode])}parentLayoutInfos.forEach((parentLayoutInfo=>{updatedAppConfig=fromLayoutService.removeItem(updatedAppConfig,parentLayoutInfo,fromSizeMode,!1,!1,!0)}))}const result=this.createBlankItem(updatedAppConfig,toLayoutId);updatedAppConfig=result[0];const newItemId=result[1];updatedAppConfig=updatedAppConfig.setIn(["layouts",toLayoutId,"content",newItemId,"type"],movingLayoutItem.type),movingLayoutItem.type===jimu_core.K6q.Widget?updatedAppConfig=updatedAppConfig.setIn(["layouts",toLayoutId,"content",newItemId,"widgetId"],movingLayoutItem.widgetId):movingLayoutItem.type===jimu_core.K6q.Section&&(updatedAppConfig=updatedAppConfig.setIn(["layouts",toLayoutId,"content",newItemId,"sectionId"],movingLayoutItem.sectionId));const newLayoutInfo={layoutId:toLayoutId,layoutItemId:newItemId},toLayoutItem=layout_runtime.searchUtils.findLayoutItem(updatedAppConfig,newLayoutInfo),service=new ContentServiceWrapper(updatedAppConfig,toLayoutItem);return service.addParent(newLayoutInfo,toSizeMode),fromSizeMode===toSizeMode?service.afterMoved(fromLayoutInfo.layoutId,toLayoutId):service.afterAdded(toLayoutId,fromSizeMode,toSizeMode),updatedAppConfig=service.getConfig(),updatedAppConfig=placeholder_service.afterLayoutItemMoved(updatedAppConfig,fromLayoutInfo,newLayoutInfo),[updatedAppConfig,newLayoutInfo]}return[updatedAppConfig,fromLayoutInfo]}afterItemAdded(appConfig,layoutInfo,fromSizeMode,currentSizeMode,options){const layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,layoutInfo),service=new ContentServiceWrapper(appConfig,layoutItem);return service.afterAdded(layoutInfo.layoutId,fromSizeMode,currentSizeMode),service.getConfig()}afterItemMoved(appConfig,layoutInfo,toLayoutId){return appConfig}beforeItemRemoved(appConfig,layoutInfo){return appConfig}afterItemRemoved(appConfig,layoutInfo){return appConfig}}var app_config_actions_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function app_config_actions_getAppConfigAction(appConfig=void 0){return window.jimuConfig.isInBuilder?window.parent._getAppConfigAction(appConfig):(appConfig||(appConfig=function getAppConfig(){const state=(0,jimu_core.Vp3)().getState();return window.jimuConfig.isBuilder?state&&state.appStateInBuilder&&state.appStateInBuilder.appConfig:state&&state.appConfig}()),new AppConfigAction(appConfig))}window._getAppConfigAction=app_config_actions_getAppConfigAction;class AppConfigAction{constructor(appConfig){this.clearDeletedWidgetMessageAction=(oldAppConfig,newAppConfig)=>{this.getDeletedWidgetsMessageConfigs(oldAppConfig,newAppConfig).forEach((message=>{this.removeMessageAction(message)}))},this.getDeletedWidgetsMessageConfigs=(oldAppConfig,newAppConfig)=>{const oldMessageConfigs=oldAppConfig.messageConfigs,newMessageConfigs=newAppConfig.messageConfigs,deletedMessageConfigs=[];if(!oldMessageConfigs)return deletedMessageConfigs;const oldMessageConfigsKeys=Object.keys(oldMessageConfigs),newMessageConfigsKeys=Object.keys(newMessageConfigs);for(let i=0;i<oldMessageConfigsKeys.length;i++)newMessageConfigsKeys.includes(oldMessageConfigsKeys[i])||deletedMessageConfigs.push(oldMessageConfigs[oldMessageConfigsKeys[i]]);return deletedMessageConfigs},this.removeMessageAction=message=>{var _a;null===(_a=null==message?void 0:message.actions)||void 0===_a||_a.forEach((actionJson=>{const actionObj=AppMessageManager.getInstance().getAction(actionJson.widgetId,actionJson.actionName);actionObj&&actionObj.onRemoveListen(message.messageType,message.widgetId)}))},this.appConfig=appConfig}setAppConfig(appConfig){return this.appConfig=appConfig,this}exec(replace=!1){if(!window.jimuConfig.isBuilder&&!window.jimuConfig.isInBuilder)return void(0,jimu_core.Vp3)().dispatch(jimu_core.tRc.appConfigChanged(this.appConfig));jimu_core.nH3.getInstance().getExtensions(jimu_core.vZE.R6.AppConfigOperations).sort(((ext1,ext2)=>ext1.index-ext2.index)).forEach((ext=>{if(ext.appConfigWillChange)try{this.appConfig=ext.appConfigWillChange(this.appConfig)}catch(e){console.error("Error in appConfigWillChange.",e)}})),(0,jimu_core.Vp3)().dispatch({type:"IN_BUILDER_APPCONFIG_REDOCLEAR"}),replace&&(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderRemoveLastAppConfigFromHistory()),publishAppConfigChangeToApp(this.appConfig);const oldAppConfig=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig,newAppConfig=this.appConfig,removedWidgets=Object.keys(oldAppConfig.widgets).filter((wId=>!newAppConfig.widgets[wId]));(0,jimu_core.Vp3)().dispatch(actions.widgetsRemoved(removedWidgets)),this.clearDeletedWidgetMessageAction(oldAppConfig,newAppConfig);const newWidgets=Object.keys(newAppConfig.widgets).filter((wId=>!oldAppConfig.widgets[wId])).map((wId=>({widgetId:wId,widgetUri:newAppConfig.widgets[wId].uri})));(0,jimu_core.Vp3)().dispatch(actions.widgetsAdded(newWidgets));const appInfo=(0,jimu_core.Vp3)().getState().appStateInBuilder.appInfo;return(0,jimu_core.Vp3)().dispatch(app_state_redux_store_extension_actions.inBuilderAppConfigChanged(this.appConfig)),(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderPutAppConfigIntoHistory({appConfig:this.appConfig,appInfo})),this}editWidgetConfig(widgetId,widgetConfig){return this.appConfig.widgets[widgetId]?(this.appConfig=this.appConfig.setIn(["widgets",widgetId,"config"],widgetConfig),this):this}editWidget(partialWidgetJson,outputDataSourcesJsons){if(!this.appConfig.widgets[partialWidgetJson.id])return this;this.handleWidgetUseDataSourceChange(this.appConfig.widgets[partialWidgetJson.id],partialWidgetJson);const oldWidgetJson=this.appConfig.widgets[partialWidgetJson.id];let newWidgetJson=oldWidgetJson;return outputDataSourcesJsons&&(outputDataSourcesJsons.forEach((dsJson=>{dsJson.isOutputFromWidget||(dsJson.isOutputFromWidget=!0)})),newWidgetJson=newWidgetJson.set("outputDataSources",outputDataSourcesJsons.map((dsJson=>dsJson.id)))),Object.keys(partialWidgetJson).forEach((k=>{null===partialWidgetJson[k]&&("outputDataSourcesJson"===k&&partialWidgetJson.outputDataSources&&partialWidgetJson.outputDataSources.forEach((dsId=>this.removeDataSource(dsId))),newWidgetJson=newWidgetJson.without(k),delete partialWidgetJson[k])})),oldWidgetJson.outputDataSources&&oldWidgetJson.outputDataSources.forEach((dsId=>{newWidgetJson.outputDataSources&&newWidgetJson.outputDataSources.includes(dsId)||this.removeDataSource(dsId)})),newWidgetJson.outputDataSources&&newWidgetJson.outputDataSources.forEach((dsId=>{const outputDataSourcesJson=outputDataSourcesJsons&&outputDataSourcesJsons.find((newDsJson=>newDsJson.id===dsId));if(outputDataSourcesJson)if(oldWidgetJson.outputDataSources&&oldWidgetJson.outputDataSources.includes(dsId)){let oldDsJson=this.appConfig.dataSources[dsId];if(!oldDsJson)return void console.error("Unknown error. Widget output data source is not in data source json.",dsId);Object.keys(outputDataSourcesJson).forEach((k=>{null===outputDataSourcesJson[k]&&(oldDsJson=oldDsJson.without(k),delete outputDataSourcesJson[k])})),this.editDataSource(oldDsJson.merge(outputDataSourcesJson))}else this.addDataSource((0,jimu_core.J3Z)(outputDataSourcesJson))})),newWidgetJson=newWidgetJson.merge(partialWidgetJson),partialWidgetJson.useDataSources&&newWidgetJson.layouts&&newWidgetJson.manifest.properties.passDataSourceToChildren&&this.copyUseDataSourceToAllChildWidgets(oldWidgetJson,newWidgetJson),this.appConfig=this.appConfig.setIn(["widgets",partialWidgetJson.id],newWidgetJson),this}editWidgetProperty(widgetId,prop,val){if(!this.appConfig.widgets||!this.appConfig.widgets[widgetId])return this;if("outputDataSources"===prop)return console.error("Please use editWidget to update outputDataSources."),this;const widgetJson=this.appConfig.widgets[widgetId],newWidgetJson=this.editJsonProperty(widgetJson,prop,val);return widgetJson===newWidgetJson?this:(this.appConfig=this.appConfig.setIn(["widgets",widgetId],newWidgetJson),prop.includes(".")?this:this.editWidget({id:widgetId,[prop]:val}))}createWidget(widgetJson_1){return app_config_actions_awaiter(this,arguments,void 0,(function*(widgetJson,createEmbedLayout=!0){try{const loadedJson=yield AppWidgetManager.getInstance().handleNewWidgetJson(widgetJson),result=widget_service.createWidget(this.appConfig,loadedJson,[layout_runtime.utils.getCurrentSizeMode()],createEmbedLayout);this.appConfig=result[0];const widgetId=result[1];return this.appConfig.widgets[widgetId]}catch(e){console.error(e)}return null}))}removeWidget(widgetId){return this.appConfig=widget_service.remove(this.appConfig,widgetId),this}editControllerPanel(controllerWidgetId,value){return this.appConfig=this.appConfig.setIn(["controllerPanels",controllerWidgetId],value),this}removeControllerPanel(controllerWidgetId){var _a;return(null===(_a=this.appConfig.controllerPanels)||void 0===_a?void 0:_a[controllerWidgetId])&&(this.appConfig=this.appConfig.set("controllerPanels",this.appConfig.controllerPanels.without(controllerWidgetId))),this}removeLayoutFromWidget(widgetId,layoutName){var _a,_b,_c;return(null===(_a=this.appConfig.widgets[widgetId])||void 0===_a?void 0:_a.layouts)&&(null===(_b=this.appConfig.widgets[widgetId])||void 0===_b?void 0:_b.layouts[layoutName])?(Object.keys(null===(_c=this.appConfig.widgets[widgetId])||void 0===_c?void 0:_c.layouts[layoutName]).forEach((sizeMode=>{var _a;const layoutId=null===(_a=this.appConfig.widgets[widgetId])||void 0===_a?void 0:_a.layouts[layoutName][sizeMode];this.removeLayout(layoutId)})),this.appConfig=this.appConfig.setIn(["widgets",widgetId,"layouts"],this.appConfig.widgets[widgetId].layouts.without(layoutName)),this):this}createSection(){const result=section_service.createSection(this.appConfig,[layout_runtime.utils.getCurrentSizeMode()]);this.appConfig=result[0];const sectionId=result[1];return this.appConfig.sections[sectionId]}editSectionProperty(sectionId,prop,val){let sectionJson=this.appConfig.sections[sectionId];return sectionJson?(sectionJson=this.editJsonProperty(sectionJson,prop,val),this.appConfig=this.appConfig.setIn(["sections",sectionId],sectionJson),this):this}editViewProperty(viewId,prop,val){let viewJson=this.appConfig.views[viewId];return viewJson?(viewJson=this.editJsonProperty(viewJson,prop,val),this.appConfig=this.appConfig.setIn(["views",viewId],viewJson),this):this}addView(sectionId){var _a;let sizeModeList;const sectionJson=this.appConfig.sections[sectionId];if((null===(_a=sectionJson.views)||void 0===_a?void 0:_a.length)>0){const firseViewId=sectionJson.views[0],viewJson=this.appConfig.views[firseViewId];sizeModeList=Object.keys(viewJson.layout)}else{const{type,id}=layout_runtime.searchUtils.getContentRootContainerInfo(this.appConfig,sectionId,jimu_core.K6q.Section,layout_runtime.utils.getCurrentSizeMode());type===jimu_core.Kk5.Header||type===jimu_core.Kk5.Footer?sizeModeList=Object.keys(this.appConfig[id].layout):type===jimu_core.Kk5.Page?sizeModeList=Object.keys(this.appConfig.pages[id].layout):type===jimu_core.Kk5.Dialog&&(sizeModeList=Object.keys(this.appConfig.dialogs[id].layout))}const result=section_service.addView(this.appConfig,sectionId,sizeModeList);return this.appConfig=result[0],result[1]}duplicateView(viewId,sectionId,addToSection){const duplicateContext={},sectionJson=this.appConfig.sections[sectionId],firstView=this.appConfig.views[sectionJson.views[0]],sizeModeList=Object.keys(firstView.layout),result=section_service.duplicateView(this.appConfig,sectionId,viewId,sizeModeList,addToSection,duplicateContext);this.appConfig=result[0];const newId=result[1];return this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,duplicateContext),this.appConfig.views[newId]}removeView(viewId,sectionId){return this.appConfig=section_service.removeView(this.appConfig,sectionId,viewId),this}moveViewInSection(sectionId,viewId,targetViewId,position){if(!(this.appConfig.sections&&this.appConfig.sections[sectionId]&&this.appConfig.views&&this.appConfig.views[viewId]&&this.appConfig.views[targetViewId]))return this;if(targetViewId===viewId)return console.error("viewId is same to targetViewId."),this;let views=this.appConfig.sections[sectionId].views.asMutable();views=views.filter((view=>view!==viewId));let index=views.indexOf(targetViewId);return"below"===position&&index++,views=views.slice(0,index).concat(viewId).concat(views.slice(index)),this.appConfig=this.appConfig.setIn(["sections",sectionId,"views"],views),this}createScreenGroup(){const screenGroupId=getUniqueId("screenGroup"),screenGroupLabel=getUniqueLabel(this.appConfig,"screenGroup",jimu_core.Ruy.getIntl().formatMessage({id:"screenGroup"})),screenGroupJson=(0,jimu_core.J3Z)({id:screenGroupId,label:screenGroupLabel,screens:[],transitionType:jimu_core.al_.Fade});return this.appConfig=this.appConfig.setIn(["screenGroups",screenGroupJson.id],screenGroupJson),screenGroupJson}editScreenGroupProperty(screenGroupId,prop,val){let sgJson=this.appConfig.screenGroups[screenGroupId];return sgJson?(sgJson=this.editJsonProperty(sgJson,prop,val),this.appConfig=this.appConfig.setIn(["screenGroups",screenGroupId],sgJson),this):this}editScreenProperty(screenId,prop,val){let screenJson=this.appConfig.screens[screenId];return screenJson?(screenJson=this.editJsonProperty(screenJson,prop,val),this.appConfig=this.appConfig.setIn(["screens",screenId],screenJson),this):this}moveScreenInGroup(screenGroupId,index,targetIndex,position){var _a;if(!(null===(_a=this.appConfig.screenGroups)||void 0===_a?void 0:_a[screenGroupId])||index===targetIndex)return this;const screens=this.appConfig.screenGroups[screenGroupId].screens.asMutable(),dragId=screens[index],targetId=screens[targetIndex];screens.splice(index,1);const newTargetIndex=screens.indexOf(targetId);return"below"===position?screens.splice(newTargetIndex,1,targetId,dragId):screens.splice(newTargetIndex,1,dragId,targetId),this.appConfig=this.appConfig.setIn(["screenGroups",screenGroupId,"screens"],screens),this}removeScreenByIndex(index,screenGroupId){var _a,_b;const screens=null===(_b=null===(_a=this.appConfig.screenGroups)||void 0===_a?void 0:_a[screenGroupId])||void 0===_b?void 0:_b.screens,screenId=null==screens?void 0:screens[index];return this.removeScreen(screenId,screenGroupId)}removeScreen(screenId,screenGroupId,force=!1){return this.appConfig=screen_group_service.removeScreen(this.appConfig,screenGroupId,screenId),this}duplicateScreenByIndex(index,screenGroupId,addToScreenGroup=!0){var _a,_b;const screens=null===(_b=null===(_a=this.appConfig.screenGroups)||void 0===_a?void 0:_a[screenGroupId])||void 0===_b?void 0:_b.screens,screenId=null==screens?void 0:screens[index];return this.duplicateScreen(screenId,screenGroupId,addToScreenGroup)}duplicateScreen(screenId,screenGroupId,addToScreenGroup=!0){const duplicateContext={},sgJson=this.appConfig.screenGroups[screenGroupId],firstScreen=this.appConfig.screens[sgJson.screens[0]],sizeModeList=Object.keys(firstScreen.main.layout),result=screen_group_service.duplicateScreen(this.appConfig,screenGroupId,screenId,sizeModeList,addToScreenGroup,duplicateContext);this.appConfig=result[0];const newId=result[1];return this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,duplicateContext),this.appConfig.screens[newId]}editPageProperty(pageId,prop,val){if(!this.appConfig.pages||!this.appConfig.pages[pageId])return this;let pageJson=this.appConfig.pages[pageId];return pageJson=this.editJsonProperty(pageJson,prop,val),this.appConfig=this.appConfig.setIn(["pages",pageId],pageJson),this}addPage(pageJson){return this.appConfig.pages&&this.appConfig.pages[pageJson.id]||(this.appConfig=this.appConfig.setIn(["pages",pageJson.id],pageJson),this.appConfig=this.appConfig.set("pageStructure",this.appConfig.pageStructure.concat([{[pageJson.id]:[]}]))),this}duplicatePage(pageId,duplicatePageJsonOnly=!1){if(!this.appConfig.pages||!this.appConfig.pages[pageId])return null;let newPageJson=this.appConfig.pages[pageId].set("id",getUniqueId("page"));if(newPageJson=newPageJson.set("label",this.getDuplicateLabel("page",newPageJson.label)),this.appConfig=this.appConfig.setIn(["pages",newPageJson.id],newPageJson),newPageJson.isDefault&&(newPageJson=newPageJson.set("isDefault",!1)),newPageJson.type!==jimu_core.g6_.Link&&newPageJson.type!==jimu_core.g6_.Folder){const duplicateContext={},result=LayoutServiceProvider.getServiceFromSizeModeLayout(this.appConfig,newPageJson.layout).duplicateSizeModeLayouts(this.appConfig,newPageJson.layout,jimu_core.$4y.Page,newPageJson.id,duplicateContext);this.appConfig=result[0],newPageJson=newPageJson.set("layout",result[1]),duplicateContext[pageId]=newPageJson.id,this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,duplicateContext)}const ps=this.appConfig.pageStructure.find((ps=>!!ps[pageId])),newSubPId=[];if(ps&&ps[pageId].forEach((subId=>{const newSubPageJson=this.duplicatePage(subId,!0);newSubPId.push(newSubPageJson.id)})),!duplicatePageJsonOnly)if(ps){if(this.appConfig=this.appConfig.set("pageStructure",this.appConfig.pageStructure.concat([{[newPageJson.id]:[]}])),newSubPId.length>0){const parentPId=newPageJson.id;let psIndex=this.appConfig.pageStructure.length-1;psIndex<0&&(psIndex=0),this.appConfig=this.appConfig.setIn(["pageStructure",psIndex+"",parentPId],newSubPId)}}else this.appConfig.pageStructure.some(((ps,i)=>{const pId=Object.keys(ps).find((pId=>ps[pId].includes(pageId)));if(pId)return this.appConfig=this.appConfig.setIn(["pageStructure",i+"",pId],this.appConfig.pageStructure[i][pId].concat(newPageJson.id)),!0}));return this.appConfig=this.appConfig.setIn(["pages",newPageJson.id],newPageJson),newPageJson}movePageIntoPage(subPageId,parentPageId){return this.appConfig.pages&&this.appConfig.pages[subPageId]&&this.appConfig.pages[parentPageId]?subPageId===parentPageId?(console.error("SubPage is same to ParentPage."),this):isFirstLevelPage(this.appConfig,parentPageId)?isPageHasSubPage(this.appConfig,subPageId)?(console.error("SubPage has sub page(s)."),this):(this.removePageFromPageStructure(subPageId),this.movePageIntoPageForPageStructure(subPageId,parentPageId),this):(console.error("ParentPage is not on the first aspect."),this):this}orderPageToPage(pageId,targetPageId,type){if(!this.appConfig.pages||!this.appConfig.pages[targetPageId]||!this.appConfig.pages[pageId])return this;if(targetPageId===pageId)return console.error("pageId is same to targetPageId."),this;const isTopPageSub=!isFirstLevelPage(this.appConfig,targetPageId);if((isPageHasSubPage(this.appConfig,pageId)||this.appConfig.pages[pageId].type===jimu_core.g6_.Folder)&&isTopPageSub)return console.error("page structure allow two aspects only"),this;const ps=this.appConfig.pageStructure.find((ps=>!!ps[pageId]));return this.removePageFromPageStructure(pageId),isTopPageSub?this.appConfig.pageStructure.some(((p,i)=>{const pId=Object.keys(p)[0];let index=p[pId].indexOf(targetPageId);if(index>-1){let subPS=this.appConfig.pageStructure[i][pId];return"bottom"===type&&(index+=1),subPS=subPS.slice(0,index).concat([pageId]).concat(subPS.slice(index)),this.appConfig=this.appConfig.setIn(["pageStructure",i+"",pId],subPS),!0}})):this.appConfig.pageStructure.some(((p,i)=>{if(Object.keys(p)[0]===targetPageId){"bottom"===type&&(i+=1);const pageStructure=this.appConfig.pageStructure.slice(0,i).concat([ps||{[pageId]:[]}]).concat(this.appConfig.pageStructure.slice(i));return this.appConfig=this.appConfig.set("pageStructure",pageStructure),!0}})),this}removePage(pageId,newHomePageId){if(!this.appConfig.pages||!this.appConfig.pages[pageId])return this;const pageJson=this.appConfig.pages[pageId];if(pageJson.type!==jimu_core.g6_.Folder&&pageJson.type!==jimu_core.g6_.Link){const service=LayoutServiceProvider.getServiceFromSizeModeLayout(this.appConfig,pageJson.layout);this.appConfig=service.removeSizeModeLayouts(this.appConfig,pageJson.layout)}const{pageStructure}=this.appConfig,ps=pageStructure&&pageStructure.find((ps=>!!ps[pageId]));return ps&&ps[pageId].length>0&&ps[pageId].forEach((subPId=>{this.removePage(subPId)})),this.removePageFromPageStructure(pageId),this.appConfig=this.appConfig.set("pages",this.appConfig.pages.without(pageId)),newHomePageId&&this.setHomePage(newHomePageId),this}setHomePage(pageId){return this.editPageProperty(pageId,"isDefault",!0)}setUseAutoSortInFixedLayout(value){return this.appConfig=this.appConfig.set("useAutoSortInFixedLayout",value),this}replaceHomePage(pageId){return Object.keys(this.appConfig.pages).some(((key,i)=>{const pageJson=this.appConfig.pages[key];if(pageJson.isDefault)return this.editPageProperty(pageJson.id,"isDefault",!1),!0})),this.editPageProperty(pageId,"isDefault",!0)}editDialog(dialogJson){const prevDilgMode=this.appConfig.dialogs[dialogJson.id].mode;if(prevDilgMode!==dialogJson.mode){const dialogs=this.appConfig.dialogs.asMutable({deep:!0});Object.keys(dialogs).forEach((dlgId=>{const dlg=dialogs[dlgId];dlg.id===dialogJson.id?dialogs[dlgId]=Object.assign({},dialogJson.asMutable({deep:!0}),{index:Object.keys(dialogs).filter((dlgId=>dialogs[dlgId].mode!==prevDilgMode)).length}):dlg.mode===prevDilgMode&&dlg.index>dialogJson.index&&(dlg.index=dlg.index-1)})),this.appConfig=this.appConfig.set("dialogs",(0,jimu_core.J3Z)(dialogs))}else this.appConfig=this.appConfig.setIn(["dialogs",dialogJson.id],dialogJson);return this}editDialogProperty(dlgId,prop,val){if(!this.appConfig.dialogs||!this.appConfig.dialogs[dlgId])return this;let dlgJson=this.appConfig.dialogs[dlgId];return dlgJson=this.editJsonProperty(dlgJson,prop,val),this.editDialog(dlgJson)}removeDialog(dialogId){var _a;const dialogJson=null===(_a=this.appConfig.dialogs)||void 0===_a?void 0:_a[dialogId];if(!dialogJson)return this;const service=LayoutServiceProvider.getServiceFromSizeModeLayout(this.appConfig,dialogJson.layout);this.appConfig=service.removeSizeModeLayouts(this.appConfig,dialogJson.layout);const currentDlgMode=dialogJson.mode,currentDlgIndex=dialogJson.index,dialogs=this.appConfig.dialogs.without(dialogId).asMutable({deep:!0});return Object.keys(dialogs).forEach((dlgId=>{const dlg=dialogs[dlgId];dlg.mode===currentDlgMode&&dlg.index>currentDlgIndex&&(dlg.index=dlg.index-1)})),this.appConfig=this.appConfig.set("dialogs",(0,jimu_core.J3Z)(dialogs)),this}duplicateDialog(dialogId){const dialogs=this.appConfig.dialogs;let newDlgJson=dialogs[dialogId];if(!dialogs||!newDlgJson)return null;const newDlgId=getUniqueId("dialog"),duplicateContext={},result=LayoutServiceProvider.getServiceFromSizeModeLayout(this.appConfig,newDlgJson.layout).duplicateSizeModeLayouts(this.appConfig,newDlgJson.layout,jimu_core.$4y.Dialog,newDlgId,duplicateContext);this.appConfig=result[0];const sizeModeLayout=result[1];duplicateContext[dialogId]=newDlgId,this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,duplicateContext);const dlgMaxIndex=Object.keys(Object.keys(dialogs).filter((dlgId=>dialogs[dlgId].mode===newDlgJson.mode))).length;return newDlgJson=newDlgJson.set("id",newDlgId).set("index",dlgMaxIndex).set("isSplash",!1).set("label",this.getDuplicateLabel("dialog",newDlgJson.label)).set("layout",sizeModeLayout),this.appConfig=this.appConfig.setIn(["dialogs",newDlgJson.id],newDlgJson),newDlgJson}orderDialogToDialog(dialogId,targetDialogId,type){const dialogs=this.appConfig.dialogs.asMutable({deep:!0}),currentDlg=dialogs[dialogId],targetDlg=dialogs[targetDialogId];if(!dialogs||!currentDlg||!targetDlg)return this;if(targetDialogId===dialogId)return console.error("dialogId is same to targetDialogId."),this;let newIndex;return targetDlg.index>currentDlg.index?(newIndex="top"===type?targetDlg.index-1:targetDlg.index,Object.keys(dialogs).forEach((dlgId=>{const dlg=dialogs[dlgId];dlg.mode===targetDlg.mode&&dlg.id!==dialogId&&dlg.index>currentDlg.index&&dlg.index<=newIndex&&(dlg.index=dlg.index-1)}))):(newIndex="top"===type?targetDlg.index:targetDlg.index+1,Object.keys(dialogs).forEach((dlgId=>{const dlg=dialogs[dlgId];dlg.mode===targetDlg.mode&&dlg.id!==dialogId&&dlg.index>=newIndex&&dlg.index<currentDlg.index&&(dlg.index=dlg.index+1)}))),dialogs[dialogId]=Object.assign({},currentDlg,{index:newIndex,mode:targetDlg.mode}),this.appConfig=this.appConfig.set("dialogs",(0,jimu_core.J3Z)(dialogs)),this}replaceSplashDialog(dialogId,splashDialogId){return splashDialogId&&this.editDialogProperty(splashDialogId,"isSplash",!1),dialogId!==splashDialogId?this.editDialogProperty(dialogId,"isSplash",!0):this}createLayoutForSizeMode(sizeMode,fromSizeMode,layouts,parentType,parentId,layoutName){var _a;if(!layouts||!layouts[fromSizeMode]||layouts[sizeMode])return null;const layoutId=layouts[fromSizeMode],result=LayoutServiceProvider.getService(this.appConfig,layoutId).duplicateLayout(this.appConfig,layouts[fromSizeMode],fromSizeMode,sizeMode,{},!1);if(result[1]){this.appConfig=result[0];const newLayoutId=result[1];this.appConfig=this.appConfig.setIn(["layouts",newLayoutId,"parent"],{id:parentId,type:parentType});const newLayouts=layouts.set(sizeMode,newLayoutId);switch(parentType){case jimu_core.$4y.Dialog:this.appConfig=this.appConfig.setIn(["dialogs",parentId,"layout"],newLayouts);break;case jimu_core.$4y.Page:this.appConfig=this.appConfig.setIn(["pages",parentId,"layout"],newLayouts);break;case jimu_core.$4y.Header:this.appConfig=this.appConfig.setIn(["header","layout"],newLayouts);break;case jimu_core.$4y.Footer:this.appConfig=this.appConfig.setIn(["footer","layout"],newLayouts);break;case jimu_core.$4y.Screen:this.appConfig=this.appConfig.setIn(["screens",parentId,"layout"],newLayouts);break;case jimu_core.$4y.View:this.appConfig=this.appConfig.setIn(["views",parentId,"layout"],newLayouts);break;case jimu_core.$4y.Widget:{const widgetJson=this.appConfig.widgets[parentId];(null===(_a=null==widgetJson?void 0:widgetJson.layouts)||void 0===_a?void 0:_a[layoutName])&&(this.appConfig=this.appConfig.setIn(["widgets",parentId,"layouts",layoutName],newLayouts));break}}return newLayouts}return null}removeSizeModeLayout(layoutId,sizeMode){const service=LayoutServiceProvider.getService(this.appConfig,layoutId);return this.appConfig=service.removeLayout(this.appConfig,layoutId,sizeMode),this}addNewSectionToLayout(targetLayoutId){const sectionJson=this.createSection(),result=LayoutServiceProvider.getService(this.appConfig,targetLayoutId).createBlankItem(this.appConfig,targetLayoutId);this.appConfig=result[0];const newItemId=result[1],newLayoutInfo={layoutId:targetLayoutId,layoutItemId:newItemId};return this.editLayoutItemProperty(newLayoutInfo,"type",jimu_core.K6q.Section).editLayoutItemProperty(newLayoutInfo,"sectionId",sectionJson.id),this.appConfig=section_service.addParent(this.appConfig,sectionJson.id,newLayoutInfo,layout_runtime.utils.getCurrentSizeMode()),newItemId}addPlaceholderToLayout(targetLayoutId){const result=LayoutServiceProvider.getService(this.appConfig,targetLayoutId).createBlankItem(this.appConfig,targetLayoutId);this.appConfig=result[0];const newItemId=result[1],newLayoutInfo={layoutId:targetLayoutId,layoutItemId:newItemId};return this.editLayoutItemProperty(newLayoutInfo,"type",jimu_core.K6q.Widget),this.appConfig=placeholder_service.addAsSyncablePlaceholder(this.appConfig,newLayoutInfo),newItemId}addNewWidgetToLayout(targetLayoutId_1,widgetJson_1){return app_config_actions_awaiter(this,arguments,void 0,(function*(targetLayoutId,widgetJson,runInExpressMode=!1){if(!runInExpressMode&&jimu_core.WpD.isExpressMode())return;const newWidgetJson=yield this.createWidget(widgetJson,!0);if(newWidgetJson){const result=LayoutServiceProvider.getService(this.appConfig,targetLayoutId).createBlankItem(this.appConfig,targetLayoutId);this.appConfig=result[0];const newItemId=result[1],newLayoutInfo={layoutId:targetLayoutId,layoutItemId:newItemId};this.editLayoutItemProperty(newLayoutInfo,"type",jimu_core.K6q.Widget,!0).editLayoutItemProperty(newLayoutInfo,"widgetId",newWidgetJson.id,!0);const sizeMode=layout_runtime.utils.getCurrentSizeMode();return this.appConfig=widget_service.addParent(this.appConfig,newWidgetJson.id,newLayoutInfo,sizeMode),this.appConfig=widget_service.afterAdded(this.appConfig,newWidgetJson.id,targetLayoutId,sizeMode,sizeMode),newItemId}return null}))}addTemplateContentToLayout(targetLayoutId,type,templateContentId){const result=LayoutServiceProvider.getService(this.appConfig,targetLayoutId).addContent(this.appConfig,targetLayoutId,templateContentId,type,layout_runtime.utils.getCurrentSizeMode());return this.appConfig=result[0],{layoutId:targetLayoutId,layoutItemId:result[1]}}addContentToPlaceholder(placeholderLayoutInfo,type,contentId){var _a;let groups=[{layoutInfo:placeholderLayoutInfo,sizeMode:layout_runtime.utils.getCurrentSizeMode()}];const placeholderInfo=placeholder_service.getPlaceholderInfo(this.appConfig,placeholderLayoutInfo);return placeholderInfo&&(groups=[{layoutInfo:placeholderInfo.layoutInfo,sizeMode:this.appConfig.mainSizeMode}],Object.keys(null!==(_a=placeholderInfo.syncs)&&void 0!==_a?_a:{}).forEach((sizeMode=>{groups.push({layoutInfo:placeholderInfo.syncs[sizeMode],sizeMode})}))),groups.forEach((group=>{var _a;const{layoutInfo,sizeMode}=group,{layoutId}=layoutInfo;this.editLayoutItemProperty(layoutInfo,"type",type),this.appConfig=empty_content_service.setContentId(this.appConfig,layoutInfo,contentId,sizeMode);const layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo),service=new ContentServiceWrapper(this.appConfig,layoutItem);this.appConfig=service.afterAdded(layoutId,sizeMode,sizeMode),(null===(_a=layoutItem.setting)||void 0===_a?void 0:_a.placeholderStyle)&&this.editLayoutItemProperty(placeholderLayoutInfo,"setting",layoutItem.setting.without("placeholderStyle"))})),this}removeParentsOfOtherSizeModes(layoutInfo,allSizeModes,currentSizeMode){const layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo);let innerWidgets=[];const innerLayoutIds=[];if(layoutItem.type===jimu_core.K6q.Widget){const widgetId=layoutItem.widgetId,widgetJson=this.appConfig.widgets[widgetId];(null==widgetJson?void 0:widgetJson.layouts)&&Object.keys(widgetJson.layouts).forEach((name=>{const layoutId=widgetJson.layouts[name][currentSizeMode];innerLayoutIds.push(layoutId)}))}else if(layoutItem.type===jimu_core.K6q.Section){const sectionId=layoutItem.sectionId;this.appConfig.sections[sectionId].views.forEach((viewId=>{const viewJson=this.appConfig.views[viewId];innerLayoutIds.push(viewJson.layout[currentSizeMode])}))}else if(layoutItem.type===jimu_core.K6q.ScreenGroup){const screenGroupId=layoutItem.screenGroupId;this.appConfig.screenGroups[screenGroupId].screens.forEach((screenId=>{const screenJson=this.appConfig.screens[screenId];innerLayoutIds.push(screenJson.main.layout[currentSizeMode]),screenJson.panel&&innerLayoutIds.push(screenJson.panel.layout[currentSizeMode])}))}innerLayoutIds.length>0&&innerLayoutIds.forEach((innerLayoutId=>{const widgets=layout_runtime.searchUtils.getContentsInLayoutRecursive(this.appConfig,innerLayoutId,jimu_core.K6q.Widget,currentSizeMode);innerWidgets=innerWidgets.concat(widgets)})),innerWidgets.length>0&&innerWidgets.forEach((innerWidgetId=>{allSizeModes.forEach((sizeMode=>{sizeMode!==currentSizeMode&&(this.appConfig=widget_service.removeSizeModeParent(this.appConfig,innerWidgetId,sizeMode))}))}))}duplicateLayoutItemInSameLayout(layoutInfo){const{layoutId}=layoutInfo,service=LayoutServiceProvider.getService(this.appConfig,layoutId),context={},currentSizeMode=layout_runtime.utils.getCurrentSizeMode(),result=service.duplicateItemInSameLayout(this.appConfig,layoutInfo,currentSizeMode,context);this.appConfig=result[0];const layoutItemId=result[1];this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,context);const layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,{layoutId,layoutItemId}),contentService=new ContentServiceWrapper(this.appConfig,layoutItem),allSizeModes=[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small];return allSizeModes.forEach((sizeMode=>{sizeMode!==currentSizeMode&&contentService.removeSizeModeParent(sizeMode)})),this.appConfig=contentService.getConfig(),this.removeParentsOfOtherSizeModes({layoutId,layoutItemId},allSizeModes,currentSizeMode),result[1]}duplicateLayoutItemToOtherLayout(layoutInfo,targetLayoutId){const layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo),contentService=new ContentServiceWrapper(this.appConfig,layoutItem),context={},currentSizeMode=layout_runtime.utils.getCurrentSizeMode(),dupResult=contentService.duplicate(currentSizeMode,context);this.appConfig=dupResult[0];const newContentId=dupResult[1];this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,context),this.appConfig=widget_service.removeParent(this.appConfig,newContentId,layoutInfo);const cResult=LayoutServiceProvider.getService(this.appConfig,targetLayoutId).createBlankItem(this.appConfig,targetLayoutId);this.appConfig=cResult[0];const newItemId=cResult[1],newLayoutInfo={layoutId:targetLayoutId,layoutItemId:newItemId};switch(this.editLayoutItemProperty(newLayoutInfo,"type",layoutItem.type),layoutItem.type){case jimu_core.K6q.Widget:this.editLayoutItemProperty(newLayoutInfo,"widgetId",newContentId);break;case jimu_core.K6q.Section:this.editLayoutItemProperty(newLayoutInfo,"sectionId",newContentId);break;case jimu_core.K6q.ScreenGroup:this.editLayoutItemProperty(newLayoutInfo,"screenGroupId",newContentId)}const newLayoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,newLayoutInfo),newContentService=new ContentServiceWrapper(this.appConfig,newLayoutItem);newContentService.addParent(newLayoutInfo,currentSizeMode);const allSizeModes=[jimu_core.rHp.Large,jimu_core.rHp.Medium,jimu_core.rHp.Small];allSizeModes.forEach((sizeMode=>{sizeMode!==currentSizeMode&&newContentService.removeSizeModeParent(sizeMode)})),this.appConfig=newContentService.getConfig(),this.removeParentsOfOtherSizeModes(newLayoutInfo,allSizeModes,currentSizeMode);return getSizeModeOfALayout(this.appConfig,layoutInfo.layoutId)===currentSizeMode&&currentSizeMode===this.appConfig.mainSizeMode&&(this.appConfig=placeholder_service.afterLayoutItemCopied(this.appConfig,layoutInfo,newLayoutInfo)),newItemId}syncPlaceholder(layoutInfo,placeholderId,sizeMode){var _a,_b;const info=placeholder_service.getPlaceholderInfo(this.appConfig,layoutInfo);if(null===(_a=null==info?void 0:info.syncs)||void 0===_a?void 0:_a[sizeMode]){const{layoutId,layoutItemId}=info.syncs[sizeMode];layoutId===layoutInfo.layoutId&&layoutItemId===layoutInfo.layoutItemId&&(this.appConfig=this.appConfig.setIn(["placeholderInfos",info.id,"syncs"],info.syncs.without(sizeMode)))}return placeholderId>0&&(null===(_b=this.appConfig.placeholderInfos)||void 0===_b?void 0:_b[placeholderId])&&(this.appConfig=this.appConfig.setIn(["placeholderInfos",placeholderId,"syncs",sizeMode],layoutInfo)),this}moveLayoutItem(fromLayoutInfo,toLayoutId,fromSizeMode,toSizeMode){const result=LayoutServiceProvider.getService(this.appConfig,toLayoutId).moveLayoutItem(this.appConfig,fromLayoutInfo,toLayoutId,fromSizeMode,toSizeMode);return this.appConfig=result[0],result[1]}setLayoutItemToPending(layoutInfo,value){if(!layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo))return this;if(value){const service=LayoutServiceProvider.getService(this.appConfig,layoutInfo.layoutId);this.appConfig=service.pendItem(this.appConfig,layoutInfo)}else this.appConfig=this.appConfig.setIn(["layouts",layoutInfo.layoutId,"content",layoutInfo.layoutItemId,"isPending"],value);return this}removeLayoutItem(layoutInfo,removeContent,force){const service=LayoutServiceProvider.getService(this.appConfig,layoutInfo.layoutId);return this.appConfig=service.removeItem(this.appConfig,layoutInfo,layout_runtime.utils.getCurrentSizeMode(),removeContent,force),this}removeLayout(layoutId){return this.removeSizeModeLayout(layoutId,layout_runtime.utils.getCurrentSizeMode())}clearLayoutContent(layoutId){var _a;const layoutJson=this.appConfig.layouts[layoutId];return layoutJson?(Object.keys(null!==(_a=layoutJson.content)&&void 0!==_a?_a:{}).forEach((itemId=>{this.removeLayoutItem({layoutId,layoutItemId:itemId},!0,!1)})),this):this}duplicateLayout(layoutId,duplicateContent){if(!this.appConfig.layouts[layoutId])return null;const service=LayoutServiceProvider.getService(this.appConfig,layoutId),sizeMode=layout_runtime.utils.getCurrentSizeMode(),context={},result=service.duplicateLayout(this.appConfig,layoutId,sizeMode,sizeMode,context,duplicateContent);this.appConfig=result[0];const newLayoutId=result[1];return duplicateContent&&(this.appConfig=widget_service.afterBatchCopied(this.appConfig,this.appConfig,context)),this.appConfig.layouts[newLayoutId]}editLayoutProperty(layoutId,prop,val){let layoutJson=this.appConfig.layouts[layoutId];return layoutJson?(layoutJson=this.editJsonProperty(layoutJson,prop,val),this.appConfig=this.appConfig.setIn(["layouts",layoutId],layoutJson),this):this}editLayoutItemProperty(layoutInfo,prop,val,runInExpressMode=!1){if(!runInExpressMode&&jimu_core.WpD.isExpressMode())return this;const{layoutId,layoutItemId}=layoutInfo;let layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo);return layoutItem?(layoutItem=this.editJsonProperty(layoutItem,prop,val),this.appConfig=this.appConfig.setIn(["layouts",layoutId,"content",layoutItemId],layoutItem),this):this}editLabelOfTocNode(node,label){switch(node.type){case"view":return this.editViewProperty(node.id,"label",label);case"screen":return this.editScreenProperty(node.id,"label",label);case"widget":return this.editWidgetProperty(node.id,"label",label);case"section":return this.editSectionProperty(node.id,"label",label);case"screenGroup":return this.editScreenGroupProperty(node.id,"label",label);case"layoutItem":return this.editLayoutItemProperty({layoutId:node.layoutId,layoutItemId:node.layoutItemId},"label",label);default:return this}}editLayoutItemSize(layoutInfo,width,height,runInExpressMode=!1){var _a;if(0===width||0===height||!runInExpressMode&&jimu_core.WpD.isExpressMode())return this;const{layoutId,layoutItemId}=layoutInfo,layout=this.appConfig.layouts[layoutId],layoutItem=null===(_a=null==layout?void 0:layout.content)||void 0===_a?void 0:_a[layoutItemId];if(!layout||!layoutItem)return this;let setting=layoutItem.setting||(0,jimu_core.J3Z)({});if(layout.type===jimu_core.p5K.FixedLayout){const bbox=layoutItem.bbox.set("width",`${width}px`).set("height",`${height}px`);return setting=setting.setIn(["autoProps","width"],!1).setIn(["autoProps","height"],!1),this.editLayoutItemProperty(layoutInfo,"bbox",bbox).editLayoutItemProperty(layoutInfo,"setting",setting)}return setting=setting.setIn(["autoProps","width"],!1).setIn(["autoProps","height"],!1).set("heightMode","ratio").set("aspectRatio",Number((height/width).toFixed(2))),this.editLayoutItemProperty(layoutInfo,"setting",setting)}exchangeWidthAndHeight(runInExpressMode=!1){var _a,_b,_c,_d,_e;if(!runInExpressMode&&jimu_core.WpD.isExpressMode())return this;let layoutInfo;const state=(0,jimu_core.Vp3)().getState();if(layoutInfo=window.jimuConfig.isBuilder?null===(_b=null===(_a=null==state?void 0:state.appStateInBuilder)||void 0===_a?void 0:_a.appRuntimeInfo)||void 0===_b?void 0:_b.selection:null===(_c=null==state?void 0:state.appRuntimeInfo)||void 0===_c?void 0:_c.selection,!layoutInfo)return this;const{layoutId}=layoutInfo,layout=this.appConfig.layouts[layoutId];if((null==layout?void 0:layout.type)===jimu_core.p5K.FixedLayout){const layoutItem=layout_runtime.searchUtils.findLayoutItem(this.appConfig,layoutInfo);if(layoutItem){let bbox=layoutItem.bbox,settingChanged=!1,setting=null!==(_d=layoutItem.setting)&&void 0!==_d?_d:(0,jimu_core.J3Z)({});const autoProps=null!==(_e=setting.autoProps)&&void 0!==_e?_e:{right:!0,bottom:!0};bbox=bbox.set("width",bbox.height).set("height",bbox.width),["left","right","top","bottom"].forEach((prop=>{autoProps[prop]&&(bbox=bbox.without(prop))})),this.editLayoutItemProperty(layoutInfo,"bbox",bbox),null==autoProps.width&&null==autoProps.height||(setting=setting.setIn(["autoProps","width"],autoProps.height).setIn(["autoProps","height"],autoProps.width),settingChanged=!0),"ratio"===setting.heightMode&&(setting=setting.set("heightMode","fixed"),settingChanged=!0),settingChanged&&this.editLayoutItemProperty(layoutInfo,"setting",setting)}}return this}adjustOrderOfItem(layoutInfo,insertIndex,runInExpressMode=!1){if(!runInExpressMode&&jimu_core.WpD.isExpressMode())return this;const{layoutId,layoutItemId}=layoutInfo,layout=this.appConfig.layouts[layoutId];let order=[].concat(layout.order||[]);if(null!=insertIndex&&insertIndex>=0&&insertIndex<=order.length){const oldIndex=order.indexOf(layoutItemId);oldIndex>=0&&order.splice(oldIndex,1),order.splice(insertIndex,0,layoutItemId)}else order.includes(layoutItemId)&&(order=order.filter((item=>item!==layoutItemId))),order.push(layoutItemId);return this.appConfig=this.appConfig.setIn(["layouts",layoutId,"order"],order),this}createLayout(type){const result=LayoutServiceProvider.getInstance().getServiceByType(type).createBlankLayout(this.appConfig,type);return this.appConfig=result[0],result[1]}createPageFromTemplate(templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={},result=yield template_service.createPageFromTemplate(this.appConfig,templateJson,context);this.appConfig=result[0];const pageId=result[1];return this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context),pageId}))}createDialogFromTemplate(templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={},result=yield template_service.createDialogFromTemplate(this.appConfig,templateJson,context);this.appConfig=result[0];const dialogId=result[1];return this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context),dialogId}))}applyHeaderTemplate(templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={};this.appConfig=yield template_service.applyTemplateToHeader(this.appConfig,templateJson,layout_runtime.utils.getCurrentSizeMode(),context),this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context)}))}applyFooterTemplate(templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={};this.appConfig=yield template_service.applyTemplateToFooter(this.appConfig,templateJson,layout_runtime.utils.getCurrentSizeMode(),context),this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context)}))}applyPageBodyTemplate(pageId,templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={};this.appConfig=yield template_service.applyTemplateToBody(this.appConfig,pageId,templateJson,layout_runtime.utils.getCurrentSizeMode(),context),this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context)}))}applyDialogTemplate(dialogId_1,templateJson_1){return app_config_actions_awaiter(this,arguments,void 0,(function*(dialogId,templateJson,sizeMode=layout_runtime.utils.getCurrentSizeMode()){const context={};this.appConfig=yield template_service.applyTemplateToDialog(this.appConfig,dialogId,templateJson,sizeMode,context),this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context)}))}applyGridTemplate(widgetId,templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={};this.appConfig=yield template_service.applyGridTemplate(this.appConfig,widgetId,templateJson,layout_runtime.utils.getCurrentSizeMode(),context),this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context)}))}createScreenFromTemplate(screenId,templateJson){return app_config_actions_awaiter(this,void 0,void 0,(function*(){const context={},result=yield screen_group_service.createScreenFromTemplate(this.appConfig,templateJson,screenId,[layout_runtime.utils.getCurrentSizeMode()],context);return this.appConfig=result[0],this.appConfig=widget_service.afterBatchCopied(this.appConfig,(0,jimu_core.J3Z)(templateJson.config),context),result[1]}))}copyUseDataSourceToAllChildWidgets(oldParentWidgetJson,newParentWidgetJson){const allChildrenWidgets=layout_runtime.searchUtils.getChildrenContents(this.appConfig,newParentWidgetJson.id,jimu_core.K6q.Widget,!0),newUseDs=newParentWidgetJson.useDataSources&&newParentWidgetJson.useDataSources.map((useDs=>useDs.set("fields",[])))[0],oldUseDs=oldParentWidgetJson.useDataSources&&oldParentWidgetJson.useDataSources.map((useDs=>useDs.set("fields",[])))[0];return newUseDs&&oldUseDs&&newUseDs.dataSourceId===oldUseDs.dataSourceId||allChildrenWidgets.forEach((widgetId=>{let widgetJson=this.appConfig.widgets[widgetId];const oldUseDsInChildWidget=oldUseDs&&widgetJson.useDataSources?widgetJson.useDataSources.find((useDs=>useDs.dataSourceId===oldUseDs.dataSourceId)):null,ext=findWidgetAppConfigOperationExtension(widgetJson.id);if((null==ext?void 0:ext.useDataSourceWillChange)&&(this.appConfig=ext.useDataSourceWillChange(this.appConfig,null==oldUseDs?void 0:oldUseDs.dataSourceId,null==newUseDs?void 0:newUseDs.dataSourceId)),oldUseDsInChildWidget&&(widgetJson=this.appConfig.widgets[widgetId],widgetJson=widgetJson.set("useDataSources",widgetJson.useDataSources.filter((useDs=>useDs.dataSourceId!==oldUseDs.dataSourceId)))),newUseDs){let newUseDsInChildWidget=newUseDs;oldUseDsInChildWidget&&(null==oldUseDs?void 0:oldUseDs.mainDataSourceId)===newUseDs.mainDataSourceId&&Object.keys(oldUseDsInChildWidget).forEach((key=>{"dataViewId"===key||(Array.isArray(newUseDsInChildWidget[key])?0!==newUseDsInChildWidget[key].length:newUseDsInChildWidget[key])||(newUseDsInChildWidget=newUseDsInChildWidget.set(key,oldUseDsInChildWidget[key]))})),widgetJson=widgetJson.set("useDataSources",widgetJson.useDataSources?widgetJson.useDataSources.concat(newUseDsInChildWidget):[newUseDsInChildWidget]).set("useDataSourcesEnabled",!0)}this.appConfig=this.appConfig.setIn(["widgets",widgetId],widgetJson)})),this}addDataSource(dataSourceJson){return this.appConfig=data_source_service.addDataSource(this.appConfig,dataSourceJson),this}addDataSources(dataSourceJsons){return dataSourceJsons.forEach((dataSourceJson=>{this.appConfig.dataSources&&this.appConfig.dataSources[dataSourceJson.id]||(this.appConfig=this.appConfig.setIn(["dataSources",dataSourceJson.id],dataSourceJson))})),this}addUtility(utility){var _a;let utilities=null!==(_a=this.appConfig.utilities)&&void 0!==_a?_a:(0,jimu_core.J3Z)({});return utilities=utilities.set(utility.id,utility),this.appConfig=this.appConfig.set("utilities",utilities),this}removeUtility(utilityId){var _a;let utilities=null!==(_a=this.appConfig.utilities)&&void 0!==_a?_a:(0,jimu_core.J3Z)({});const appConfigOperationExtensions=findAppConfigOperationExtensions();try{appConfigOperationExtensions.forEach((extension=>{if(!extension.utilityWillRemove)return;const widgetJson=this.appConfig.widgets[extension.widgetId];widgetJson&&widgetJson.useUtilities&&widgetJson.useUtilities.find((useUtility=>useUtility.utilityId===utilityId))&&(this.appConfig=extension.utilityWillRemove(this.appConfig,utilityId))}))}catch(e){console.error("Error when calling utilityWillRemove",e)}return utilities=utilities.without(utilityId),this.appConfig=this.appConfig.set("utilities",utilities),this}updateUtilities(utilities){return this.appConfig=this.appConfig.set("utilities",utilities),this}removeDataSource(dataSourceId){return this.appConfig=data_source_service.removeDataSource(this.appConfig,dataSourceId),this}removeUseDataSource(dataSourceId){return this.appConfig=data_source_service.removeUseDataSource(this.appConfig,dataSourceId),this}editDataSource(dataSourceJson){return this.appConfig=this.appConfig.setIn(["dataSources",dataSourceJson.id],dataSourceJson),this}addAppProxy(proxyJson){return this.appConfig.appProxies&&this.appConfig.appProxies[proxyJson.id]||(this.appConfig=this.appConfig.setIn(["appProxies",proxyJson.id],proxyJson)),this}editAppProxy(proxyJson){return this.appConfig=this.appConfig.setIn(["appProxies",proxyJson.id],proxyJson),this}removeAppProxy(appProxyId){return this.appConfig.appProxies&&this.appConfig.appProxies[appProxyId]?(this.appConfig=this.appConfig.set("appProxies",this.appConfig.appProxies.without(appProxyId)),this):this}addMessage(messageJson){return this.appConfig=this.appConfig.setIn(["messageConfigs",messageJson.id],messageJson),this}editMessage(messageJson){return this.appConfig=this.appConfig.setIn(["messageConfigs",messageJson.id],messageJson),this}removeMessage(messageJson){return this.appConfig.messageConfigs&&this.appConfig.messageConfigs[messageJson.id]?(this.appConfig=this.appConfig.set("messageConfigs",this.appConfig.messageConfigs.without(messageJson.id)),this):this}editTheme(themeName){return this.appConfig=this.appConfig.set("theme",themeName),this}editCustomTheme(customTheme){return this.appConfig=this.appConfig.set("customTheme",customTheme),this}editCustomThemeOption(themeOption){return this.appConfig=this.appConfig.set("customThemeOptions",themeOption),this}initHeaderLayout(){const layoutId=this.createLayout(jimu_core.p5K.FixedLayout);return this.editLayoutProperty(layoutId,"setting.lockDescendants",!0),this.appConfig=this.appConfig.setIn(["layouts",layoutId,"parent"],{id:"",type:jimu_core.$4y.Header}).setIn(["header","layout",this.appConfig.mainSizeMode],layoutId),this}editHeaderProperty(prop,val){let header=this.appConfig.header;return header?(header=this.editJsonProperty(header,prop,val),this.appConfig=this.appConfig.set("header",header),this):this}initFooterLayout(){const layoutId=this.createLayout(jimu_core.p5K.FixedLayout);return this.editLayoutProperty(layoutId,"setting.lockDescendants",!0),this.appConfig=this.appConfig.setIn(["layouts",layoutId,"parent"],{id:"",type:jimu_core.$4y.Footer}).setIn(["footer","layout",this.appConfig.mainSizeMode],layoutId),this}editFooterProperty(prop,val){let footer=this.appConfig.footer;return footer?(footer=this.editJsonProperty(footer,prop,val),this.appConfig=this.appConfig.set("footer",footer),this):this}setViewportSize(browserSizeMode,size){return this.appConfig=this.appConfig.setIn(["forBuilderAttributes","viewPortSize",browserSizeMode],size),this}setLockLayout(lockLayout){return this.appConfig=this.appConfig.setIn(["forBuilderAttributes","lockLayout"],lockLayout),this}editAttributes(attributesJson){return this.appConfig=this.appConfig.setIn(["attributes"],attributesJson),this}updateAnalyticsConfig(analyticsJson){return this.appConfig=this.appConfig.setIn(["analytics"],analyticsJson),this}updateCookieBannerConfig(cookieBannerJson){return this.appConfig=this.appConfig.setIn(["cookieBanner"],cookieBannerJson),this}editCookieBannerConfig(propName,value){return this.appConfig="string"==typeof propName?this.appConfig.setIn(["cookieBanner",propName],value):this.appConfig.setIn(["cookieBanner",...propName],value),this}removeCookieBannerConfig(){return this.appConfig=this.appConfig.without("cookieBanner"),this}updateUrlParamsConfig(urlParams){this.appConfig.urlParams||(this.appConfig=this.appConfig.set("urlParams",{}));const urlParamsConfigs=this.appConfig.urlParams.merge(urlParams);return this.appConfig=this.appConfig.set("urlParams",urlParamsConfigs),this}getDuplicateLabel(type,label){const[prefix]=parseUniqueLabel(label);let newLabel=getUniqueLabel(this.appConfig,type,prefix);return newLabel===prefix&&(newLabel=`${prefix} 1`),newLabel}removePageFromPageStructure(pageId){if(!this.appConfig.pageStructure)return this;return this.appConfig.pageStructure.find((ps=>!!ps[pageId]))?this.appConfig=this.appConfig.set("pageStructure",this.appConfig.pageStructure.flatMap((item=>item[pageId]?[]:[item]))):this.appConfig.pageStructure.forEach(((ps,i)=>{const pId=Object.keys(ps).find((pId=>ps[pId].includes(pageId)));if(pId)return this.appConfig=this.appConfig.setIn(["pageStructure",i+"",pId],ps[pId].flatMap((subPid=>subPid===pageId?[]:[subPid]))),!0})),this}movePageIntoPageForPageStructure(subPageId,parentPageId){return this.appConfig.pageStructure?(this.appConfig.pageStructure.some(((ps,i)=>{const pId=Object.keys(ps).find((pId=>pId===parentPageId));if(pId)return this.appConfig=this.appConfig.setIn(["pageStructure",i+"",pId],this.appConfig.pageStructure[i][pId].concat([subPageId])),!0})),this):this}editJsonProperty(json,prop,value){if(!json)return json;const props=prop.split(".").filter((item=>""!==item));if(props.length>0){if(json.getIn(props)===value)return json;if(null==value){if(1===props.length)return json.without(props[0]);const lastProp=props.pop(),remainValue=json.getIn(props);return json.setIn(props,remainValue.without(lastProp))}return json.setIn(props,value)}return json}handleWidgetUseDataSourceChange(oldWidgetJson,partialWidgetJson){var _a,_b,_c,_d;if(void 0===partialWidgetJson.useDataSources||jimu_core.CM0.isDeepEqual(oldWidgetJson.useDataSources,partialWidgetJson.useDataSources))return;const useDsReplace=[];useDsReplace[0]=null===(_b=null===(_a=oldWidgetJson.useDataSources)||void 0===_a?void 0:_a.find((oldUseDs=>{var _a;return!(null===(_a=partialWidgetJson.useDataSources)||void 0===_a?void 0:_a.find((useDs=>(null==useDs?void 0:useDs.dataSourceId)===(null==oldUseDs?void 0:oldUseDs.dataSourceId))))})))||void 0===_b?void 0:_b.dataSourceId,useDsReplace[1]=null===(_d=null===(_c=partialWidgetJson.useDataSources)||void 0===_c?void 0:_c.find((useDs=>{var _a;return!(null===(_a=oldWidgetJson.useDataSources)||void 0===_a?void 0:_a.find((oldUseDs=>(null==oldUseDs?void 0:oldUseDs.dataSourceId)===(null==useDs?void 0:useDs.dataSourceId))))})))||void 0===_d?void 0:_d.dataSourceId;const ext=findWidgetAppConfigOperationExtension(partialWidgetJson.id);(null==ext?void 0:ext.useDataSourceWillChange)&&(this.appConfig=ext.useDataSourceWillChange(this.appConfig,useDsReplace[0],useDsReplace[1]))}}var app_data_action_manager_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const{getTranslatedLocale:app_data_action_manager_getSupportedLocale}=jimu_core.Ruy;class AppDataActionManager{constructor(){this.actionSettings={}}static getInstance(){return AppDataActionManager.instance||(AppDataActionManager.instance=new AppDataActionManager),AppDataActionManager.instance}loadAllActionSettingClasses(){var _a;const appConfigAction=app_config_actions_getAppConfigAction();return Object.keys((null===(_a=appConfigAction.appConfig)||void 0===_a?void 0:_a.widgets)||{}).forEach((widgetId=>{var _a;const widget=appConfigAction.appConfig.widgets[widgetId],actionJsons=[].concat(null===(_a=widget.manifest)||void 0===_a?void 0:_a.dataActions).filter((action=>action));actionJsons.length>0&&actionJsons.forEach((action=>app_data_action_manager_awaiter(this,void 0,void 0,(function*(){if(action.settingUri){const uri=`${widget.uri}dist/${action.settingUri}`;this.actionSettings[uri]||(this.actionSettings[uri]=this.loadDependency(widgetId).then((()=>window.mockimport(uri).then((ActionClass=>{const rawClazz=ActionClass.default;return widget_setting_manager.getInstance().loadI18nMessagesForSetting(widget.uri).then((i18nMessages=>this.injectActionSettingProps(rawClazz,i18nMessages,widget.id)))})))))}}))))})),this.actionSettings}loadDependency(widgetId){return app_data_action_manager_awaiter(this,void 0,void 0,(function*(){var _a;const manifest=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[widgetId])||void 0===_a?void 0:_a.manifest;if(!(null==manifest?void 0:manifest.settingDependency))return Promise.resolve();const widgetDependencies="string"==typeof manifest.dependency?[manifest.dependency]:manifest.dependency.asMutable();return(0,jimu_core.cV9)(widgetDependencies)}))}injectActionSettingProps(WrappedComponent,i18nMessages,actionWidgetId){const IntlInjectedComponent=(0,jimu_core.j4T)(WrappedComponent),actionWidgetJson=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId];let widgetName=null;widgetName=actionWidgetId&&actionWidgetJson?(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[actionWidgetId].manifest.name:"Framework";class WidgetWrapper extends jimu_core.q_G.PureComponent{render(){const injectProps={messages:i18nMessages},appI18nMessages=(0,jimu_core.Vp3)().getState().appI18nMessages;let locale=null;actionWidgetId&&actionWidgetJson?(locale=app_data_action_manager_getSupportedLocale((0,jimu_core.Vp3)().getState().appContext.locale,actionWidgetJson.manifest.translatedLocales.asMutable()),locale||(locale=actionWidgetJson.manifest.translatedLocales&&actionWidgetJson.manifest.translatedLocales[0]),locale||(locale=(0,jimu_core.Vp3)().getState().appContext.locale)):locale=(0,jimu_core.Vp3)().getState().appContext.locale;const allMessages=Object.assign({},i18nMessages,appI18nMessages);return jimu_core.q_G.createElement(jimu_core.Dk7,{locale,messages:allMessages},jimu_core.q_G.createElement(IntlInjectedComponent,Object.assign({},this.props,injectProps)))}}WidgetWrapper.displayName=`ActionSettingWrapper(${widgetName})`;for(const p in WrappedComponent)WidgetWrapper[p]||(WidgetWrapper[p]=WrappedComponent[p]);return WidgetWrapper}}class UrlConfigManager{constructor(){this.isGeneralUrlConfigEnable=generalConfig=>{var _a;const appConfig=jimu_core.IWG.getAppConfig(),urlConfig=null===(_a=null==appConfig?void 0:appConfig.urlParams)||void 0===_a?void 0:_a.getIn(["general",generalConfig]);let isEnable=null==urlConfig?void 0:urlConfig.isEnable;return void 0===isEnable&&generalConfig===jimu_core.Wye.DataSelection&&(isEnable=!0),isEnable},this.isZoomToSelectionEnable=()=>{var _a,_b;const appConfig=jimu_core.IWG.getAppConfig(),dataSelectionConfig=null===(_a=null==appConfig?void 0:appConfig.urlParams)||void 0===_a?void 0:_a.getIn(["general",jimu_core.Wye.DataSelection]);return null!==(_b=null==dataSelectionConfig?void 0:dataSelectionConfig.zoomToSelection)&&void 0!==_b&&_b}}static getInstance(){return UrlConfigManager.instance||(UrlConfigManager.instance=new UrlConfigManager),UrlConfigManager.instance}getWidgetsUseUrlParamsInManifest(){const appConfig=jimu_core.IWG.getAppConfig();let widgetsWithUrlParameters=null;if(null==appConfig?void 0:appConfig.widgets){widgetsWithUrlParameters=jimu_core.J3Z.from({});for(const widgetId of Object.keys(appConfig.widgets)){const widget=appConfig.widgets[widgetId],urlParametersInManifest=widget.manifest.urlParameters;if((null==urlParametersInManifest?void 0:urlParametersInManifest.length)>0){widgetsWithUrlParameters=widgetsWithUrlParameters.set(widgetId,widget);const urlParametersWithI18nLabel=urlParametersInManifest.map((urlParameter=>{var _a,_b;const name=urlParameter.name,label=null!==(_a=widget.manifest.i18nMessages[`_url_params_${name}_label`])&&void 0!==_a?_a:urlParameter.label;if((urlParameter=urlParameter.set("label",label)).tooltip){const tooltip=null!==(_b=widget.manifest.i18nMessages[`_url_params_${name}_tooltip`])&&void 0!==_b?_b:urlParameter.tooltip;urlParameter=urlParameter.set("tooltip",tooltip)}return urlParameter}));widgetsWithUrlParameters=widgetsWithUrlParameters.setIn([widgetId,"manifest","urlParameters"],urlParametersWithI18nLabel)}}}return widgetsWithUrlParameters}updateGeneralUrlConfigEnable(generalUrlConfig,isEnable){var _a,_b;let appConfig=jimu_core.IWG.getAppConfig(),generalUrlConfigs=null===(_a=appConfig.urlParams)||void 0===_a?void 0:_a.getIn(["general",generalUrlConfig]);generalUrlConfigs||(generalUrlConfigs=jimu_core.J3Z.from({isEnable:!1})),generalUrlConfigs=null==generalUrlConfigs?void 0:generalUrlConfigs.merge({isEnable}),appConfig.urlParams||(appConfig=appConfig.setIn(["urlParams"],jimu_core.J3Z.from({general:{}})));const urlParams=null===(_b=appConfig.urlParams)||void 0===_b?void 0:_b.setIn(["general",generalUrlConfig],generalUrlConfigs);this.updateUrlParamsConfig(urlParams)}updateZoomToSelectionEnable(isEnable){var _a,_b;let appConfig=jimu_core.IWG.getAppConfig(),generalUrlConfigs=null===(_a=appConfig.urlParams)||void 0===_a?void 0:_a.getIn(["general",jimu_core.Wye.DataSelection]);generalUrlConfigs||(generalUrlConfigs=jimu_core.J3Z.from({isEnable:!0})),generalUrlConfigs=null==generalUrlConfigs?void 0:generalUrlConfigs.merge({zoomToSelection:isEnable}),appConfig.urlParams||(appConfig=appConfig.setIn(["urlParams"],jimu_core.J3Z.from({general:{}})));const urlParams=null===(_b=appConfig.urlParams)||void 0===_b?void 0:_b.setIn(["general",jimu_core.Wye.DataSelection],generalUrlConfigs);this.updateUrlParamsConfig(urlParams)}isWidgetParamEnable(widgetId,paramName,isOnlyOneWidgetParamMode){var _a;let isChecked=!0;const widget=null===(_a=jimu_core.IWG.getAppConfig().urlParams)||void 0===_a?void 0:_a.getIn(["widgets",widgetId]);return isChecked=null==widget?void 0:widget.getIn(["params",paramName]),void 0===isChecked&&(isChecked=!0,isOnlyOneWidgetParamMode&&(isChecked=!1)),isChecked}updateWidgetEnable(widgetId,isEnable){let{appConfig,widgetUrlConfig}=this.getWidgetsUrlParamsConfig(widgetId);widgetUrlConfig=null==widgetUrlConfig?void 0:widgetUrlConfig.merge({isEnable}),this._setWidgetUrlConfig(widgetId,widgetUrlConfig,appConfig,app_config_actions_getAppConfigAction())}updateWidgetParamEnable(widgetId,paramName,isEnable){let{appConfig,widgetUrlConfig}=this.getWidgetsUrlParamsConfig(widgetId);widgetUrlConfig=widgetUrlConfig.setIn(["params",paramName],isEnable),this._setWidgetUrlConfig(widgetId,widgetUrlConfig,appConfig,app_config_actions_getAppConfigAction())}getFlatPageInfos(pageStructure){let pagesInfo=[];return null==pageStructure||pageStructure.forEach((struct=>{var _a;const pageId=Object.keys(struct)[0];pagesInfo.push(pageId),(null===(_a=struct[pageId])||void 0===_a?void 0:_a.length)>0&&(pagesInfo=pagesInfo.concat(struct[pageId].flat()))})),pagesInfo}getWidgetsInPages(currentBrowserSizeMode,filterString){const infos=[],appConfig=jimu_core.IWG.getAppConfig(),pageInfos=this.getFlatPageInfos(null==appConfig?void 0:appConfig.pageStructure);return null==pageInfos||pageInfos.forEach((pageId=>{const containerInfo={type:jimu_core.Kk5.Page,id:pageId},widgetIdsInPage=layout_runtime.searchUtils.getContentsInContainerRecursive(appConfig,containerInfo,jimu_core.K6q.Widget,currentBrowserSizeMode),widgetIds=this._findCommonWidgetsInManifest(widgetIdsInPage),pageInfo={id:pageId,label:this._getPageLabel(pageId)};let widgetsInfo=[];widgetIds.forEach((widgetId=>{widgetsInfo.push({id:widgetId,label:this._getWidgetLabel(widgetId)})})),filterString&&(widgetsInfo=widgetsInfo.filter((widgetInfo=>{var _a;return null===(_a=widgetInfo.label)||void 0===_a?void 0:_a.toLowerCase().includes(filterString.toLowerCase())}))),infos.push({pageInfo,widgetsInfo})})),infos}getWidgetsInHeaderFooter(currentBrowserSizeMode,filterString){const widgetsInfoInHeaderFooter=[],appConfig=jimu_core.IWG.getAppConfig();let containerInfo={type:jimu_core.Kk5.Header,id:null};const widgetIdsInHeader=layout_runtime.searchUtils.getContentsInContainerRecursive(appConfig,containerInfo,jimu_core.K6q.Widget,currentBrowserSizeMode);let widgetIds=this._findCommonWidgetsInManifest(widgetIdsInHeader),widgetsInfo=[];widgetIds.forEach((widgetId=>{widgetsInfo.push({id:widgetId,label:this._getWidgetLabel(widgetId)})})),filterString&&(widgetsInfo=widgetsInfo.filter((widgetInfo=>{var _a;return null===(_a=widgetInfo.label)||void 0===_a?void 0:_a.toLowerCase().includes(filterString.toLowerCase())}))),widgetsInfoInHeaderFooter.push({mode:"Header",widgetsInfo}),containerInfo={type:jimu_core.Kk5.Footer,id:null};const widgetIdsInFooter=layout_runtime.searchUtils.getContentsInContainerRecursive(appConfig,containerInfo,jimu_core.K6q.Widget,currentBrowserSizeMode);return widgetIds=this._findCommonWidgetsInManifest(widgetIdsInFooter),widgetsInfo=[],widgetIds.forEach((widgetId=>{widgetsInfo.push({id:widgetId,label:this._getWidgetLabel(widgetId)})})),filterString&&(widgetsInfo=widgetsInfo.filter((widgetInfo=>{var _a;return null===(_a=widgetInfo.label)||void 0===_a?void 0:_a.toLowerCase().includes(filterString.toLowerCase())}))),widgetsInfoInHeaderFooter.push({mode:"Footer",widgetsInfo}),widgetsInfoInHeaderFooter}getWidgetsInDialogs(currentBrowserSizeMode,filterString){const widgetsInfoInDialogs=[],appConfig=jimu_core.IWG.getAppConfig(),dialogInfos=null==appConfig?void 0:appConfig.dialogs;Object.keys(dialogInfos).filter(((value,idx)=>dialogInfos[value].mode===jimu_core.oMf.Fixed)).forEach((dialogId=>{const dialogInfo=dialogInfos[dialogId],containerInfo={type:jimu_core.Kk5.Dialog,id:dialogId},widgetIdsInDialog=layout_runtime.searchUtils.getContentsInContainerRecursive(appConfig,containerInfo,jimu_core.K6q.Widget,currentBrowserSizeMode),widgetIds=this._findCommonWidgetsInManifest(widgetIdsInDialog),_dialogInfo={mode:jimu_core.oMf.Fixed,id:dialogId,label:dialogInfo.label};let widgetsInfo=[];widgetIds.forEach((widgetId=>{widgetsInfo.push({id:widgetId,label:this._getWidgetLabel(widgetId)})})),filterString&&(widgetsInfo=widgetsInfo.filter((widgetInfo=>{var _a;return null===(_a=widgetInfo.label)||void 0===_a?void 0:_a.toLowerCase().includes(filterString.toLowerCase())}))),widgetsInfoInDialogs.push({dialogInfo:_dialogInfo,widgetsInfo})}));return Object.keys(dialogInfos).filter(((value,idx)=>dialogInfos[value].mode===jimu_core.oMf.Anchored)).forEach((dialogId=>{const dialogInfo=dialogInfos[dialogId],containerInfo={type:jimu_core.Kk5.Dialog,id:dialogId},widgetIdsInDialog=layout_runtime.searchUtils.getContentsInContainerRecursive(appConfig,containerInfo,jimu_core.K6q.Widget,currentBrowserSizeMode),widgetIds=this._findCommonWidgetsInManifest(widgetIdsInDialog),_dialogInfo={mode:jimu_core.oMf.Anchored,id:dialogId,label:dialogInfo.label};let widgetsInfo=[];widgetIds.forEach((widgetId=>{widgetsInfo.push({id:widgetId,label:this._getWidgetLabel(widgetId)})})),filterString&&(widgetsInfo=widgetsInfo.filter((widgetInfo=>{var _a;return null===(_a=widgetInfo.label)||void 0===_a?void 0:_a.toLowerCase().includes(filterString.toLowerCase())}))),widgetsInfoInDialogs.push({dialogInfo:_dialogInfo,widgetsInfo})})),widgetsInfoInDialogs}_findCommonWidgetsInManifest(widgetIdsInPage){const urlParamsWidgetsInManifest=this.getWidgetsUseUrlParamsInManifest(),widgetsInManifest=Object.keys(urlParamsWidgetsInManifest),commonElements=[];return widgetIdsInPage.forEach((widgetId=>{widgetsInManifest.includes(widgetId)&&commonElements.push(widgetId)})),commonElements}_getWidgetLabel(widgetId){const widgetInfo=jimu_core.IWG.getAppConfig().widgets.getIn([widgetId]);return(null==widgetInfo?void 0:widgetInfo.label)||widgetId}_getPageLabel(pageId){const pageInfo=jimu_core.IWG.getAppConfig().pages.getIn([pageId]);return(null==pageInfo?void 0:pageInfo.label)||pageId}getWidgetsUrlParamsConfig(widgetId){var _a;const appConfig=jimu_core.IWG.getAppConfig();let widgetUrlConfig=null===(_a=appConfig.urlParams)||void 0===_a?void 0:_a.getIn(["widgets",widgetId]);return widgetUrlConfig||(widgetUrlConfig=jimu_core.J3Z.from({isEnable:!0})),{appConfig,widgetUrlConfig}}_setWidgetUrlConfig(widgetId,widgetUrlConfig,appConfig,appConfigAction){var _a;appConfig.urlParams||(appConfig=appConfig.setIn(["urlParams"],jimu_core.J3Z.from({widgets:{}})));const widgetUrlParams=null===(_a=appConfig.urlParams)||void 0===_a?void 0:_a.setIn(["widgets",widgetId],widgetUrlConfig);this.updateUrlParamsConfig(widgetUrlParams)}updateUrlParamsConfig(urlParams){app_config_actions_getAppConfigAction().updateUrlParamsConfig(urlParams).exec()}}const url_config_manager=UrlConfigManager;let pubsub;try{const parent=jimu_core.WpD.getParentWindow();pubsub=null==parent?void 0:parent._builderPubsub}catch(e){console.error("Can access parent.")}function listenBuilderEvents(){if(!pubsub)return;pubsub.unsubscribe("to_app");const store=(0,jimu_core.Vp3)();pubsub.subscribe("to_app",(function(evt,data){console.debug(evt,data)})),pubsub.subscribe(`to_app.${ToAppMessage.AppConfigChanged}`,(function(evt,appConfig){const state=store.getState();if(state.appRuntimeInfo.currentPageId&&!appConfig.pages[state.appRuntimeInfo.currentPageId]){const defaultPageId=Object.keys(appConfig.pages).find((pId=>appConfig.pages[pId].isDefault));jimu_core.e7y.changePage(defaultPageId)}store.dispatch(jimu_core.tRc.appConfigChanged(appConfig))})),pubsub.subscribe(`to_app.${ToAppMessage.AppInfoChanged}`,(function(evt,appInfo){store.dispatch(jimu_core.tRc.appInfoChanged(appInfo))})),pubsub.subscribe(`to_app.${ToAppMessage.PortalSelfChanged}`,(function(evt,portalSelf){if(store.dispatch(jimu_core.tRc.setPortalSelf(portalSelf)),portalSelf&&!portalSelf.isPortal){const newPortalUrl=`https://${portalSelf.urlKey}.${portalSelf.customBaseUrl}`;portalSelf.urlKey&&!jimu_core.zJ_.isSamePortalUrl(store.getState().portalUrl,newPortalUrl)&&store.dispatch(jimu_core.tRc.setPortalInfo({portalUrl:newPortalUrl}))}})),pubsub.subscribe(`to_app.${ToAppMessage.UserSignIn}`,(function(evt,user){store.dispatch(jimu_core.tRc.userSignIn(user))})),pubsub.subscribe(`to_app.${ToAppMessage.SetMainPortal}`,(function(evt,mainPortalInfo){const portalInfo=Object.assign({portalUrl:store.getState().portalUrl,clientId:store.getState().clientId,isWebTier:store.getState().isWebTier},mainPortalInfo);store.dispatch(jimu_core.tRc.setPortalInfo(portalInfo))})),pubsub.subscribe(`to_app.${ToAppMessage.DialogInfosChanged}`,(function(action,dialogIds){store.dispatch(jimu_core.tRc.dialogInfosChanged(dialogIds))})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeAppMode}`,(function(action,mode){store.dispatch(jimu_core.tRc.appModeChanged(mode))})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeWidgetStateProp}`,(function(action,alterState){store.dispatch(jimu_core.tRc.widgetStatePropChange(alterState.widgetId,alterState.propKey,alterState.value))})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeWidgetMutableStateProp}`,(function(action,alterState){jimu_core.vbm.getInstance().updateStateValue(alterState.widgetId,alterState.propKey,alterState.value)})),pubsub.subscribe(`to_app.${ToAppMessage.ChangePage}`,(function(action,pageId){const pageJson=(0,jimu_core.Vp3)().getState().appConfig.pages[pageId];pageJson.type===jimu_core.g6_.Link||pageJson.type===jimu_core.g6_.Folder||jimu_core.v6q.parseAppPath(location.pathname,(0,jimu_core.Vp3)().getState().appConfig).pageId===pageId?(0,jimu_core.Vp3)().dispatch(jimu_core.tRc.currentPageChanged(pageId)):jimu_core.e7y.changePage(pageId)})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeDialog}`,(function(action,dialogId){jimu_core.e7y.changeDialog(dialogId),store.dispatch(jimu_core.tRc.currentDialogChanged(dialogId))})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeSelection}`,(function(action,selection){store.dispatch(jimu_core.tRc.selectionChanged(selection))})),pubsub.subscribe(`to_app.${ToAppMessage.BuilderTriggerKeyboard}`,(function(action,event){jimu_core.LLV.triggerEvent(event)})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeBrowserSizeMode}`,(function(action,mode){store.dispatch(jimu_core.tRc.browserSizeModeChanged(mode))})),pubsub.subscribe(`to_app.${ToAppMessage.BuilderSessionChanged}`,(function(action,sessions){jimu_core.Cvv.getInstance().syncSessionsFromOtherWindow(sessions)})),pubsub.subscribe(`to_app.${ToAppMessage.BuilderNoPermissionResourceInfoListChanged}`,(function(action,noPermissionResourceInfoList){jimu_core.Cvv.getInstance().syncNoPermissionResourceInfoListFromOtherWindow(noPermissionResourceInfoList)})),pubsub.subscribe(`to_app.${ToAppMessage.ChangeZoomScale}`,(function(action,zoomScale){store.dispatch(jimu_core.tRc.zoomScaleChange(zoomScale))})),pubsub.subscribe(`to_app.${ToAppMessage.ActivePagePartChanged}`,(function(action,part){store.dispatch(jimu_core.tRc.activePagePartChanged(part))})),pubsub.subscribe(`to_app.${ToAppMessage.AnimationPreview}`,(function(action,info){store.dispatch(jimu_core.tRc.setupAnimationPreview(info))})),pubsub.subscribe(`to_app.${ToAppMessage.HoverPreview}`,(function(action,info){store.dispatch(jimu_core.tRc.setupHoverPreview(info))})),pubsub.subscribe(`to_app.${ToAppMessage.SectionNavInfoChanged}`,(function(action,data){store.dispatch(jimu_core.tRc.sectionNavInfoChanged(data.sectionId,data.navInfo)),jimu_core.e7y.changeViewBySectionNavInfo(data.sectionId,data.navInfo)})),pubsub.subscribe(`to_app.${ToAppMessage.ScreenGroupNavInfoChanged}`,(function(action,data){store.dispatch(jimu_core.tRc.screenGroupNavInfoChanged(data.screenGroupId,data.activeIndex))})),pubsub.subscribe(`to_app.${ToAppMessage.TocHoverInfoChanged}`,(function(action,data){const{layoutInfo,hovered}=data,{layoutId,layoutItemId}=layoutInfo,element=document.querySelector(`div.builder-layout-item[data-layoutid="${layoutId}"][data-layoutitemid="${layoutItemId}"]`);element&&(hovered?element.classList.add("hovered"):element.classList.remove("hovered"))})),pubsub.subscribe(`to_app.${ToAppMessage.SetClientIdAlertIsCancelled}`,(function(action,data){jimu_core.Cvv.getInstance().onClientIdDialogFinished(null==data?void 0:data.portalUrl,null,new Error("setting clientId is cancelled."))})),pubsub.subscribe(`to_app.${ToAppMessage.UtilityStateChanged}`,(function(action,data){store.dispatch(jimu_core.tRc.utilityStateChange(data.utilityId,data.state,data.isSignInError))})),pubsub.subscribe(`to_app.${ToAppMessage.OpenCookieBannerByPrivacyPanel}`,(function(action,data){const{isOpen}=data;store.dispatch(jimu_core.tRc.OpenCookieBannerByPrivacyPanel(isOpen))})),pubsub.subscribe(`to_app.${ToAppMessage.OpenCookieSettingsWindow}`,(function(action,data){const{isOpen}=data;store.dispatch(jimu_core.tRc.OpenCookieSettingsWindow(isOpen))})),pubsub.subscribe(`to_app.${ToAppMessage.WidgetToolbarStateChange}`,(function(action,data){const{widgetId,toolNames}=data;store.dispatch(jimu_core.tRc.widgetToolbarStateChange(widgetId,toolNames))})),pubsub.subscribe(`to_app.${ToAppMessage.WidgetStateChange}`,(function(action,data){const{widgetId,prop,value}=data;store.dispatch(jimu_core.tRc.widgetStatePropChange(widgetId,prop,value))})),pubsub.subscribe(`to_app.${ToAppMessage.WidgetRuntimeInfoChange}`,(function(action,data){const{widgetId,prop,value}=data;store.dispatch(jimu_core.tRc.widgetRuntimeInfoChange(widgetId,prop,value))})),pubsub.subscribe(`to_app.${ToAppMessage.SetWidgetIsInlineEditingState}`,(function(action,data){const{widgetId,isInlineEditing}=data;store.dispatch(jimu_core.tRc.setWidgetIsInlineEditingState(widgetId,isInlineEditing))}))}function publishAppSessionChangeToBuilder(){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppSessionChanged}`,jimu_core.Cvv.getInstance().getSessions())}function publishNoPermissionResourceInfoListChangeToBuilder(){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppNoPermissionResourceInfoListChanged}`,jimu_core.Cvv.getInstance().getNoPermissionResourceInfoList())}function publishCheck498ErrorToBuilder(url){publishEventToBuilder(`to_builder.${ToBuilderMessage.NeedToCheck498Error}`,url)}function publishAppStateChangeToBuilder(){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppStateChanged}`,(0,jimu_core.Vp3)().getState())}function publishAppIsLoadedToBuilder(){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppIsLoaded}`)}function letBuilderAddResource(resourceItemInfo){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppAddResource}`,resourceItemInfo)}function letBuilderClearResource(appId){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppClearResources}`,appId)}function letBuilderResponseToKeyboard(event){publishEventToBuilder(`to_builder.${ToBuilderMessage.AppTriggerKeyboard}`,event)}function letBuilderShowLayoutToolbar(tools){publishEventToBuilder(`to_builder.${ToBuilderMessage.SetLayoutTools}`,tools)}function clearLastAppConfigFromHistory(){publishEventToBuilder(`to_builder.${ToBuilderMessage.ClearLastAppConfigFromHistory}`)}function publishIsBusyToBuilder(isBusy){publishEventToBuilder(`to_builder.${ToBuilderMessage.SetIsBusy}`,isBusy)}function publishConfirmDeleteToApp(itemToDelete){publishEventToBuilder(`to_builder.${ToBuilderMessage.ConfirmDelete}`,itemToDelete)}function publishPortalUrlNeedToRegisterClientId(portalUrl,needToSignIn,serviceUrl,forceLogin){publishEventToBuilder(`to_builder.${ToBuilderMessage.NeedToRegisterClinetId}`,{portalUrl,needToSignIn,serviceUrl,forceLogin})}function publishSidePanelToApp(option){publishEventToBuilder(`to_builder.${ToBuilderMessage.SetSidePanel}`,option)}function publishCloseBannerToBuilder(){publishEventToBuilder(`to_builder.${ToBuilderMessage.CloseBannerInLiveView}`)}function publishEventToBuilder(action,data){pubsub&&pubsub.publishSync(action,data)}var page=__webpack_require__("../jimu-icons/svg/outlined/data/page.svg"),page_default=__webpack_require__.n(page),link_tilted=__webpack_require__("../jimu-icons/svg/outlined/data/link-tilted.svg"),link_tilted_default=__webpack_require__.n(link_tilted),folder=__webpack_require__("../jimu-icons/svg/outlined/application/folder.svg"),folder_default=__webpack_require__.n(folder),dialog=__webpack_require__("../jimu-icons/svg/outlined/application/dialog.svg"),dialog_default=__webpack_require__.n(dialog),utils_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function getDefaultTocPageIcon(pageJson,formatMessage,pagelabel){let icon;return icon=pageJson.type===jimu_core.g6_.Folder?{svg:folder_default(),properties:{filename:"folder",originalName:"outlined/application/folder.svg",path:["general","folder"],color:"var(--ref-palette-neutral-1100)",inlineSvg:!0}}:pageJson.type===jimu_core.g6_.Link?{svg:link_tilted_default(),properties:{filename:"link",originalName:"outlined/data/link-tilted.svg",path:["general","link"],color:"var(--ref-palette-neutral-1100)",inlineSvg:!0}}:{svg:page_default(),properties:{filename:pagelabel||(null==formatMessage?void 0:formatMessage("page"))||"",originalName:"outlined/data/page.svg",color:"var(--ref-palette-neutral-1100)",inlineSvg:!0}},icon}function getDefaultTocDialogIcon(){return dialog_default()}function getDefaultSectionIcon(){return widget_section_default()}function getPageListByDialogId(pages,dialogId){if(!pages)return[];const pageList=[];return Object.keys(pages).some((id=>{pages[id].autoOpenDialogId===dialogId&&pageList.push({id,label:pages[id].label})})),pageList}let fetchCommonWidgetListPromise=null;function fetchCommonWidgetList(){return fetchCommonWidgetListPromise||(fetchCommonWidgetListPromise=fetch(`${jimu_core.SRz.resolveModuleFullPath("widgets/")}/widgets-info.json`).then((res=>utils_awaiter(this,void 0,void 0,(function*(){return yield res.json()})))).then((widgetInfo=>widgetInfo.filter((w=>{const portalUrl=(0,jimu_core.Vp3)().getState().portalUrl;return!w.manifest.notAllowAdd&&(!jimu_core.zJ_.isAGOLDomain(portalUrl)||!w.manifest.notSupportAGOL)})).map((w=>{var _a,_b;w.manifest=jimu_core.VbA.addWidgetManifestProperties(w.manifest);const locale=jimu_core.Ruy.findLocale((0,jimu_core.Vp3)().getState().appContext.locale,w.manifest.translatedLocales);return{itemType:jimu_core.K6q.Widget,name:w.name,label:(null===(_a=w.i18nLabel)||void 0===_a?void 0:_a[locale])||w.manifest.label||w.name,description:(null===(_b=w.i18nDescription)||void 0===_b?void 0:_b[locale])||w.manifest.desription||w.name,uri:w.uri,manifest:w.manifest,icon:"../"+w.icon,group:w.group,order:w.order}})))).catch((err=>(console.error("Failed to fetch common widget list. ",err),[])))),fetchCommonWidgetListPromise}let fetchRemoteCustomWidgetListPromise=null;function fetchRemoteCustomWidgetList(){if(!showRemoteCustomWidgets())return Promise.resolve([]);if(!fetchRemoteCustomWidgetListPromise){const q='type:"Experience Builder Widget" AND typekeywords:"Widget"';fetchRemoteCustomWidgetListPromise=jimu_core._2M.restPortal.searchItems({q,num:100,start:0,authentication:jimu_core.Cvv.getInstance().getSessionByUrl((0,jimu_core.Vp3)().getState().portalUrl)}).then((res=>res.results)).then((items=>{let list=[];return items.forEach(((item,index)=>{if(!item.url)return;const uri=function getCustomUriByItemUrl(itemUrl){let uri;uri=/manifest\.json$/.test(itemUrl)?itemUrl.substring(0,itemUrl.length-13):/\/$/.test(itemUrl)?itemUrl:itemUrl+"/";return uri=uri.replace(/^http:\/\//,"https://"),uri}(item.url),widgetContext=jimu_core.VbA.getWidgetContext(uri),listItemTemplate={itemType:jimu_core.K6q.Widget,name:item.url,label:item.title,itemId:item.id,manifest:{},icon:`${widgetContext.folderUrl}icon.svg`,uri:widgetContext.folderUrl,group:CUSTOM_GROUP,order:index};list=list.concat(listItemTemplate)})),Promise.allSettled(list.map((l=>fetch(`${l.uri}manifest.json`).then((res=>res.json()))))).then((res=>res.map((r=>"fulfilled"===r.status?r.value:null)))).then((manifests=>list.map(((l,i)=>Object.assign(Object.assign({},l),{manifest:manifests[i]||{defaultSize:{width:400,height:400}}})))))})).catch((err=>(console.error("Failed to fetch custom widget list. ",err),[])))}return fetchRemoteCustomWidgetListPromise}function getWidgetsGroupLabel(group,intl){if(!group||!intl)return"";switch(group){case 1:return intl.formatMessage({id:"mapCentric",defaultMessage:jimu_ui.defaultMessages.mapCentric});case 2:return intl.formatMessage({id:"dataCentric",defaultMessage:jimu_ui.defaultMessages.dataCentric});case 3:return intl.formatMessage({id:"pageElements",defaultMessage:jimu_ui.defaultMessages.pageElements});case 4:return intl.formatMessage({id:"menuAndTollbars",defaultMessage:jimu_ui.defaultMessages.menuAndTollbars});case 8:return intl.formatMessage({id:"layout",defaultMessage:jimu_core.kgw.layout});case 9:return intl.formatMessage({id:"section",defaultMessage:jimu_core.kgw.section});case 10:return intl.formatMessage({id:"locationReferencing",defaultMessage:jimu_core.kgw.locationReferencing});case CUSTOM_GROUP:return intl.formatMessage({id:"custom",defaultMessage:jimu_ui.defaultMessages.custom});default:return""}}function getSectionItemForWidgetsList(intl){return{itemType:jimu_core.K6q.Section,label:null==intl?void 0:intl.formatMessage({id:"section",defaultMessage:jimu_core.kgw.section}),uri:"",manifest:{properties:{},defaultSize:{width:500,height:500}},icon:widget_section_default(),name:"section",group:9,order:900}}function getPlaceholderItemForWidgetsList(intl){return{itemType:jimu_core.K6q.Widget,label:null==intl?void 0:intl.formatMessage({id:"placeholder",defaultMessage:jimu_ui.defaultMessages.placeholder}),uri:null,manifest:{defaultSize:{width:300,height:300}},icon:widget_place_holder_default(),name:"placeholder",group:8,order:899}}function showRemoteCustomWidgets(){var _a,_b;return null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appContext)||void 0===_a?void 0:_a.jimuConfig)||void 0===_b?void 0:_b.isInPortal}function showCustomWidgets(commonWidgetList){return showRemoteCustomWidgets()||(null==commonWidgetList?void 0:commonWidgetList.some((w=>w.group===CUSTOM_GROUP)))}function getBuilderUrl(id,isExpressMode=!1){const qo=(0,jimu_core.Vp3)().getState().queryObject;let url=`${window.jimuConfig.mountPath}builder/?id=${id}`;return qo.locale&&(url=jimu_core.v6q.appendQueryParam(url,"locale",qo.locale)),qo.__env__&&(url=jimu_core.v6q.appendQueryParam(url,"__env__",qo.__env__)),isExpressMode&&(url=jimu_core.v6q.appendQueryParam(url,"mode","express")),url}function getHomePageUrl(isExpressMode,views){const qo=(0,jimu_core.Vp3)().getState().queryObject;let url=window.jimuConfig.mountPath;return qo.locale&&(url=jimu_core.v6q.appendQueryParam(url,"locale",qo.locale)),qo.__env__&&(url=jimu_core.v6q.appendQueryParam(url,"__env__",qo.__env__)),isExpressMode&&(url=jimu_core.v6q.appendQueryParam(url,"express","true")),views&&(url=jimu_core.v6q.appendQueryParam(url,"views",views)),url}const CUSTOM_GROUP=7;var help_utils_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const helpDocJson=__webpack_require__("../builder/help-doc.json"),supportLanguages=["en","de","es","fr","ja","ru","zh-cn"];function isSupportLanguage(){const locale=window.locale.toLowerCase();let support=!1;if(supportLanguages.includes(locale))support=!0;else{const splitLocale=locale.split("-")[0];for(let i=0;i<supportLanguages.length;i++)if(splitLocale===supportLanguages[i].split("-")[0]){support=!0;break}}return support}function getBuildAppsHelpLink(helpKey){return help_utils_awaiter(this,void 0,void 0,(function*(){return yield _getHelpLinkUrl("build-apps",helpKey,!1)}))}function getHomeHelpLink(){return help_utils_awaiter(this,void 0,void 0,(function*(){return window.jimuConfig.isDevEdition?yield _getHelpLinkUrl(void 0,"home",!0):yield _getHelpLinkUrl("get-started","what-is-arcgis-experience-builder",!0)}))}function getWhatsNewLink(){return help_utils_awaiter(this,void 0,void 0,(function*(){return yield _getHelpLinkUrl("get-started","whats-new",!0)}))}function getWidgetHelpLink(helpKey,uri){return help_utils_awaiter(this,void 0,void 0,(function*(){return yield _getHelpLinkUrl("widgets",helpKey,!1,uri)}))}function _getHelpLinkUrl(type,helpKey,isHome,uri){return help_utils_awaiter(this,void 0,void 0,(function*(){let baseUrl,helpId=null;if(helpKey=helpKey.toLowerCase(),window.jimuConfig.isDevEdition){baseUrl="https://developers.arcgis.com/experience-builder/";const helpDoc=helpDocJson.dev;if(type){if(helpId=helpDoc[type][helpKey]&&`${helpDoc[type].prefix}${helpDoc[type][helpKey]}`,!helpId&&uri){const helpUrl=window.location.origin+"/"+uri+"doc";return yield Promise.resolve(helpUrl)}}else helpId=helpDoc[helpKey]&&`${helpDoc[helpKey]}`;let onlineHelp=baseUrl+"#";return helpId?(onlineHelp=baseUrl+helpId,yield Promise.resolve(onlineHelp)):yield Promise.resolve(onlineHelp)}{const portalUrl=(0,jimu_core.Vp3)().getState().portalUrl;if(window.jimuConfig.isInPortal){const portalLocale=isSupportLanguage()?jimu_core.Ruy.findLocale(window.locale,supportLanguages):"en",helpDoc=helpDocJson.portal;helpId=type?`${helpDoc[type][helpKey]}`:`${helpDoc[helpKey]}`;const headers={"Content-Type":"text/json"},helpBase=function _getHelpBaseForPortal(portalUrl,portalLocale){let baseUrl="";const portalSelf=(0,jimu_core.Vp3)().getState().portalSelf,parts=null==portalSelf?void 0:portalSelf.helpBase.split("/");baseUrl=(null==parts?void 0:parts.includes("https:"))?parts.slice(0,3).join("/")+"/"+portalLocale:portalUrl+"/"+(null==parts?void 0:parts[2])+"/"+portalLocale;return baseUrl}(portalUrl,portalLocale),helpHome=helpBase.includes("https:")?helpBase+"/experience-builder":helpBase;return yield fetch(portalUrl+"/sharing/rest/portals/helpmap?f=json",{method:"get",headers}).then((res=>help_utils_awaiter(this,void 0,void 0,(function*(){return yield res.json()})))).then((help=>help_utils_awaiter(this,void 0,void 0,(function*(){if(help&&help.helpMap&&help.helpMap.m&&helpId&&help.helpMap.m[helpId]){const portalHelp=helpBase+"/"+help.helpMap.m[helpId];return yield Promise.resolve(portalHelp)}return isHome?yield Promise.resolve(helpHome):yield getHomeHelpLink()})))).catch((err=>help_utils_awaiter(this,void 0,void 0,(function*(){return console.warn(err),isHome?yield Promise.resolve(helpHome):yield getHomeHelpLink()}))))}{const helpDoc=helpDocJson.online;helpId=type?helpDoc[type][helpKey]&&`${helpDoc[type].prefix}${helpDoc[type][helpKey]}`:helpDoc[helpKey]&&`${helpDoc[helpKey]}`;const lead=function isProd(portalUrl){const hostname=jimu_core.v6q.getUrlHost(portalUrl),parts=hostname.split(".");parts.splice(0,1);const customBaseUrl=parts.join(".");return"www.arcgis.com"===hostname||"maps.arcgis.com"===customBaseUrl}(portalUrl)?"doc":"docdev";baseUrl="https://"+lead+".arcgis.com/en/experience-builder/";let onlineHelp=baseUrl+"#";if(!helpId)return yield Promise.resolve(onlineHelp);if(onlineHelp=baseUrl+helpId,isSupportLanguage()){jimu_core.zJ_.getPortalSelfInfoUrl(portalUrl);const helpUrl=function _getHelpLinkForAGOL(selfUrl,helpId,defaultHelpLink){let baseUrl;const portalSelf=(0,jimu_core.Vp3)().getState().portalSelf;if(portalSelf&&portalSelf.helpBase){try{baseUrl=portalSelf.helpBase.split("/").slice(0,4).join("/")+"/experience-builder/"}catch(err){return defaultHelpLink}return baseUrl?baseUrl+helpId:defaultHelpLink}return defaultHelpLink}(0,helpId,onlineHelp);return yield Promise.resolve(helpUrl)}return yield Promise.resolve(onlineHelp)}}}))}class BuilderKeyboardComponentInner extends jimu_core.q_G.PureComponent{constructor(){super(...arguments),this.isSupportKeyboard=()=>{let isSupportKeyboard=!1;return window.jimuConfig.isBuilder&&"home"!==this.props.currentPageId&&"template"!==this.props.currentPageId?(isSupportKeyboard=!0,isSupportKeyboard):isSupportKeyboard},this.switchAppMode=()=>{var _a,_b;(null===(_b=null===(_a=(0,jimu_core.Vp3)().getState().appStateInBuilder)||void 0===_a?void 0:_a.appRuntimeInfo)||void 0===_b?void 0:_b.appMode)===jimu_core.$0N.Run?publishAppModeChangeToApp(jimu_core.$0N.Design):publishAppModeChangeToApp(jimu_core.$0N.Run)},this.undo=()=>{this.props.stateHistory.past.length<=1||(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderAppConfigUndo())},this.redo=()=>{this.props.stateHistory.future.length<=0||(0,jimu_core.Vp3)().dispatch(app_state_history_extension_actions.InBuilderAppConfigRedo())},this.onKeyboardTrigger=event=>{event.key.includes("-manual")||publishKeyboardToApp(event)},this.isMac=()=>{var _a,_b;return"macOS"===(null===(_b=null===(_a=window.jimuUA)||void 0===_a?void 0:_a.os)||void 0===_b?void 0:_b.name)}}render(){return this.isMac()?this.isSupportKeyboard()?jimu_core.q_G.createElement(jimu_core.s3S,{onKeyboardTrigger:this.onKeyboardTrigger,bindings:{"shift+alt+keyx":()=>{this.switchAppMode()},"command+keyz":()=>{this.undo()},"command+shift+keyz":()=>{this.redo()}}}):null:this.isSupportKeyboard()?jimu_core.q_G.createElement(jimu_core.s3S,{onKeyboardTrigger:this.onKeyboardTrigger,bindings:{"shift+alt+keyx":()=>{this.switchAppMode()},"ctrl+keyz":()=>{this.undo()},"ctrl+shift+keyz":()=>{this.redo()}}}):null}}const builder_keyboard_component=jimu_core.E_S.connect((state=>({currentPageId:state.appRuntimeInfo.currentPageId,stateHistory:state.appStateHistory})))(BuilderKeyboardComponentInner);try{builderkeyboardcomponent.displayName="builderkeyboardcomponent",builderkeyboardcomponent.__docgenInfo={description:"",displayName:"builderkeyboardcomponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/builder-keyboard-component.tsx#builderkeyboardcomponent"]={docgenInfo:builderkeyboardcomponent.__docgenInfo,name:"builderkeyboardcomponent",path:"../jimu-for-builder/lib/builder-keyboard-component.tsx#builderkeyboardcomponent"})}catch(__react_docgen_typescript_loader_error){}const choose_connection_type=props=>{const{messageDataSource,actionDataSource,connectionType,onUseLayersRelationship,onSetCustomFields}=props,[hasRelationship,setHasRelationship]=jimu_core.q_G.useState(!1),connectionTypeRef=jimu_core.JLE.useLatest(connectionType);jimu_core.q_G.useEffect((()=>{if(!messageDataSource||!actionDataSource)return;const messageDs=jimu_core.ZkX.getMainOriginDataSource(messageDataSource),actionDs=jimu_core.ZkX.getMainOriginDataSource(actionDataSource),resetConnectionType=()=>{connectionTypeRef.current===jimu_core._lP.UseLayersRelationship&&onSetCustomFields()};(null==messageDs?void 0:messageDs.createRelatedDataSources)?messageDs.createRelatedDataSources().then(((relatedDss=[])=>{relatedDss.includes(actionDs)?setHasRelationship(!0):(setHasRelationship(!1),resetConnectionType())})):(setHasRelationship(!1),resetConnectionType())}),[messageDataSource,actionDataSource,connectionTypeRef,onSetCustomFields]),jimu_core.q_G.useEffect((()=>{connectionTypeRef.current||(hasRelationship?onUseLayersRelationship():onSetCustomFields())}),[hasRelationship,connectionTypeRef,onSetCustomFields,onUseLayersRelationship]);const translate=jimu_core.JLE.useTranslation(translations_default.A);return hasRelationship?(0,jimu_core.Yac)(jimu_core.q_G.Fragment,null,(0,jimu_core.Yac)(jimu_ui.Label,{className:"justify-content-start",onClick:onUseLayersRelationship},(0,jimu_core.Yac)(jimu_ui.Radio,{className:"mr-2",role:"radio",checked:connectionType===jimu_core._lP.UseLayersRelationship}),translate("frameworkAction_UseRelationship")),(0,jimu_core.Yac)(jimu_ui.Label,{className:"mt-3 justify-content-start",onClick:onSetCustomFields},(0,jimu_core.Yac)(jimu_ui.Radio,{className:"mr-2",role:"radio",checked:!connectionType||connectionType===jimu_core._lP.SetCustomFields}),translate("frameworkAction_CustomFields"))):null};try{chooseconnectiontype.displayName="chooseconnectiontype",chooseconnectiontype.__docgenInfo={description:"",displayName:"chooseconnectiontype",props:{messageDataSource:{defaultValue:null,description:"",name:"messageDataSource",required:!0,type:{name:"DataSource"}},actionDataSource:{defaultValue:null,description:"",name:"actionDataSource",required:!0,type:{name:"DataSource"}},connectionType:{defaultValue:null,description:"",name:"connectionType",required:!0,type:{name:"enum",value:[{value:'"USE_LAYERS_RELATIONSHIP"'},{value:'"SET_CUSTOM_FIELDS"'}]}},onUseLayersRelationship:{defaultValue:null,description:"",name:"onUseLayersRelationship",required:!0,type:{name:"() => void"}},onSetCustomFields:{defaultValue:null,description:"",name:"onSetCustomFields",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/message-actions/components/choose-connection-type.tsx#chooseconnectiontype"]={docgenInfo:chooseconnectiontype.__docgenInfo,name:"chooseconnectiontype",path:"../jimu-for-builder/lib/message-actions/components/choose-connection-type.tsx#chooseconnectiontype"})}catch(__react_docgen_typescript_loader_error){}const getNewMessage=(messageType,widgetId)=>({id:jimu_core.VbA.getUniqueId("messageConfig"),widgetId,messageType,actions:[]});function getDsIdsByWidgetId(wId,messageType){var _a;const ds=getDsByWidgetId(wId,messageType);return(0,jimu_core.J3Z)(null!==(_a=null==ds?void 0:ds.map((useDS=>null==useDS?void 0:useDS.mainDataSourceId)))&&void 0!==_a?_a:[])}function getDsByWidgetId(wId,messageType){var _a,_b,_c;const mapUseDataSources=getMapUseDataSourcesByUseMapWidgetIds(wId),messageCarryData=getMessageCarryData(wId,messageType),appConfig=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig,widgetJson=null===(_c=null==appConfig?void 0:appConfig.widgets)||void 0===_c?void 0:_c[wId];let useDataSources=(null==widgetJson?void 0:widgetJson.useDataSources)?null==widgetJson?void 0:widgetJson.useDataSources:mapUseDataSources;useDataSources=useDataSources||(0,jimu_core.J3Z)([]);const outputDataSources=initOutputDataSources(null==widgetJson?void 0:widgetJson.outputDataSources)||(0,jimu_core.J3Z)([]),bothDataSource=null==useDataSources?void 0:useDataSources.asMutable({deep:!0}).concat(null==outputDataSources?void 0:outputDataSources.asMutable({deep:!0}));switch(messageCarryData){case jimu_core.vQD.OutputDataSource:return outputDataSources;case jimu_core.vQD.UseDataSource:return useDataSources;case jimu_core.vQD.BothDataSource:return(0,jimu_core.J3Z)(bothDataSource)}}function getMessageCarryData(wId,messageType){const messageCarryData=utils_getMessageCarryDataByWidgetId(wId,messageType);return messageCarryData||jimu_core.vQD.UseDataSource}function utils_getMessageCarryDataByWidgetId(wId,messageType){var _a,_b,_c,_d;const appConfig=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig,widgetJson=null===(_c=null==appConfig?void 0:appConfig.widgets)||void 0===_c?void 0:_c[wId],publishMessages=null===(_d=null==widgetJson?void 0:widgetJson.manifest)||void 0===_d?void 0:_d.publishMessages;let messageCarryData=null;return publishMessages.forEach((el=>{const publishMessageProperty=el;(null==publishMessageProperty?void 0:publishMessageProperty.messageCarryData)&&(null==publishMessageProperty?void 0:publishMessageProperty.messageType)===messageType&&(messageCarryData=null==publishMessageProperty?void 0:publishMessageProperty.messageCarryData)})),messageCarryData}function initOutputDataSources(outputDataSources){var _a;const ds=null!==(_a=null==outputDataSources?void 0:outputDataSources.map((dsId=>({dataSourceId:dsId,mainDataSourceId:dsId,rootDataSourceId:null}))))&&void 0!==_a?_a:[];return(0,jimu_core.J3Z)(ds)}const getNewActionItem=(target,action,widgetId,messageType)=>{let configVersion;target.id,configVersion=target.id?(0,jimu_core.Vp3)().getState().appStateInBuilder?(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig.widgets[target.id].manifest.version:null:jimu_core.rEp;let config=checkIsSupportActionSetting(action,messageType,widgetId)?null:void 0;if("function"==typeof action.getDefaultMessageActionConfig){const message={widgetId,type:messageType};config=action.getDefaultMessageActionConfig(message)}return{actionId:action.id+"-"+(new Date).getTime().toString(),widgetId:target.id,messageWidgetId:widgetId,actionName:action.name,description:null,config,version:configVersion}},checkIsSupportActionSetting=(action,messageType,widgetId)=>!!AppMessageManager.getInstance().getActionSettingComponentUri(action,messageType,widgetId);function getMapUseDataSourcesByUseMapWidgetIds(widgetId){const useDataSources=[],widgetJson=getWidgetJson(widgetId),useMapWidgetIds=null==widgetJson?void 0:widgetJson.useMapWidgetIds,dataSourceIdsObj={};return(null==useMapWidgetIds?void 0:useMapWidgetIds.length)>0&&useMapWidgetIds.forEach((mapWidgetId=>{if(mapWidgetId){const mapWidgetJson=getWidgetJson(mapWidgetId),mapWidgetUseDataSources=null==mapWidgetJson?void 0:mapWidgetJson.useDataSources;mapWidgetUseDataSources&&mapWidgetUseDataSources.forEach((mapWidgetUseDataSource=>{var _a;const mapWidgetUseDataSourceObj=null===(_a=null==mapWidgetUseDataSource?void 0:mapWidgetUseDataSource.asMutable)||void 0===_a?void 0:_a.call(mapWidgetUseDataSource,{deep:!0});mapWidgetUseDataSourceObj&&mapWidgetUseDataSourceObj.dataSourceId&&!dataSourceIdsObj[mapWidgetUseDataSourceObj.dataSourceId]&&(dataSourceIdsObj[mapWidgetUseDataSourceObj.dataSourceId]=!0,useDataSources.push(mapWidgetUseDataSourceObj))}))}})),(0,jimu_core.J3Z)(useDataSources)}function getWidgetJson(widgetId){var _a;if(!widgetId)return null;const appConfig=utils_getAppConfig();return null===(_a=null==appConfig?void 0:appConfig.widgets)||void 0===_a?void 0:_a[widgetId]}function utils_getAppConfig(){var _a,_b,_c;return window.jimuConfig.isBuilder?null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig:null===(_c=(0,jimu_core.Vp3)().getState())||void 0===_c?void 0:_c.appConfig}var sql_expression_runtime=__webpack_require__("../jimu-ui/basic/sql-expression-runtime.tsx");function getDsSelectorSourceData(props){var _a,_b,_c;const{widgetId,useDataSource,messageType,arcGISDataSourceTypes}=props,appConfig=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig,widgetJson=null===(_c=null==appConfig?void 0:appConfig.widgets)||void 0===_c?void 0:_c[widgetId],dsRootIds=function getDsRootIdsByWidgetId(wId,arcGISDataSourceTypes){var _a,_b,_c;const appConfig=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig,widgetJson=null===(_c=null==appConfig?void 0:appConfig.widgets)||void 0===_c?void 0:_c[wId],rootIds=[],dsM=jimu_core.zAk.getInstance(),mapUseDataSources=getMapUseDataSourcesByUseMapWidgetIds(wId),useDataSources=(null==widgetJson?void 0:widgetJson.useDataSources)?null==widgetJson?void 0:widgetJson.useDataSources:mapUseDataSources;return null==useDataSources||useDataSources.forEach((useDS=>{const ds=dsM.getDataSource(useDS.dataSourceId);(null==ds?void 0:ds.type)!==arcGISDataSourceTypes.WebMap&&(null==ds?void 0:ds.type)!==arcGISDataSourceTypes.WebScene||rootIds.push(useDS.dataSourceId)})),rootIds.length>0?(0,jimu_core.J3Z)(rootIds):null}(widgetId,arcGISDataSourceTypes),isReadOnly=function checkIsOnlyOneDs(widgetJson,messageCarryData,dsRootIds){const outputDs=(null==widgetJson?void 0:widgetJson.outputDataSources)||[],useDs=(null==widgetJson?void 0:widgetJson.useDataSources)||[];if(dsRootIds)return!1;switch(messageCarryData){case jimu_core.vQD.OutputDataSource:return 1===(null==outputDs?void 0:outputDs.length);case jimu_core.vQD.UseDataSource:return 1===(null==useDs?void 0:useDs.length);case jimu_core.vQD.BothDataSource:return 1===outputDs.length+useDs.length}}(widgetJson,getMessageCarryData(widgetId,messageType),dsRootIds);return{isReadOnly,useDataSources:useDataSource&&useDataSource.dataSourceId?(0,jimu_core.J3Z)([useDataSource.asMutable({deep:!0})]):null,fromRootDsIds:dsRootIds,fromDsIds:dsRootIds?null:getDsIdsByWidgetId(widgetId,messageType)}}function checkAndGetInitUseDataSource(props){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;const{widgetId,oldUseDataSource,messageType,arcGISDataSourceTypes}=props,config=(0,jimu_core.Vp3)().getState().appStateInBuilder.appConfig,dsM=jimu_core.zAk.getInstance(),widgetJson=config.widgets[widgetId],mapUseDataSources=getMapUseDataSourcesByUseMapWidgetIds(widgetId),useDataSources=(null==widgetJson?void 0:widgetJson.useDataSources)?null==widgetJson?void 0:widgetJson.useDataSources:mapUseDataSources;let initUseDataSource=null,isMapDs=!1;const isOldUseDataSourceIsOutputDs=null===(_b=null===(_a=dsM.getDataSource(oldUseDataSource.dataSourceId))||void 0===_a?void 0:_a.getDataSourceJson())||void 0===_b?void 0:_b.isOutputFromWidget,ds=getDsByWidgetId(widgetId,messageType),dsId=(null==ds?void 0:ds[0])&&(null===(_c=null==ds?void 0:ds[0])||void 0===_c?void 0:_c.dataSourceId);if(!dsId)return null;const dsJson=null===(_d=dsM.getDataSource(dsId))||void 0===_d?void 0:_d.getDataSourceJson();if(!dsJson||dsJson.type!==arcGISDataSourceTypes.WebMap&&dsJson.type!==arcGISDataSourceTypes.WebScene||(isMapDs=!0),isMapDs){let isUseOldDs=!1;if(widgetJson&&useDataSources)for(let i=0;i<useDataSources.length;i++)if(useDataSources[i].dataSourceId===oldUseDataSource.rootDataSourceId){isUseOldDs=!0;break}initUseDataSource=isUseOldDs?oldUseDataSource:null}else{let isUseOldDs=!1;if(ds)for(let i=0;i<(null==ds?void 0:ds.length);i++){const useDsIdInCurrentMessageAction=isOldUseDataSourceIsOutputDs?null===(_f=null===(_e=dsM.getDataSource(oldUseDataSource.dataSourceId))||void 0===_e?void 0:_e.getMainDataSource())||void 0===_f?void 0:_f.id:oldUseDataSource.dataSourceId,mainDsIdInWidget=isOldUseDataSourceIsOutputDs?null===(_j=null===(_h=dsM.getDataSource(null===(_g=null==ds?void 0:ds[i])||void 0===_g?void 0:_g.dataSourceId))||void 0===_h?void 0:_h.getMainDataSource())||void 0===_j?void 0:_j.id:null===(_k=null==ds?void 0:ds[i])||void 0===_k?void 0:_k.mainDataSourceId;let isDsInCurrentMessageActionUsedByWidgets=(isOldUseDataSourceIsOutputDs?null===(_o=null===(_m=dsM.getDataSource(null===(_l=null==ds?void 0:ds[i])||void 0===_l?void 0:_l.dataSourceId))||void 0===_m?void 0:_m.getMainDataSource())||void 0===_o?void 0:_o.id:null===(_p=null==ds?void 0:ds[i])||void 0===_p?void 0:_p.dataSourceId)===useDsIdInCurrentMessageAction;if(messageType===jimu_core.GoH.DataRecordsSelectionChange&&(isDsInCurrentMessageActionUsedByWidgets=useDsIdInCurrentMessageAction===mainDsIdInWidget),isDsInCurrentMessageActionUsedByWidgets){isUseOldDs=!0;break}}initUseDataSource=isUseOldDs?oldUseDataSource:1===(null==ds?void 0:ds.length)?(0,jimu_core.J3Z)({dataSourceId:null===(_q=null==ds?void 0:ds[0])||void 0===_q?void 0:_q.dataSourceId,mainDataSourceId:null===(_r=null==ds?void 0:ds[0])||void 0===_r?void 0:_r.mainDataSourceId,dataViewId:null===(_s=null==ds?void 0:ds[0])||void 0===_s?void 0:_s.dataViewId,rootDataSourceId:null===(_t=null==ds?void 0:ds[0])||void 0===_t?void 0:_t.rootDataSourceId}):null}return initUseDataSource}function checkTriggerLayerIsSameToActionLayer(config){return!(!config.messageUseDataSource||!config.actionUseDataSource)&&!(config.messageUseDataSource.mainDataSourceId!==config.actionUseDataSource.mainDataSourceId||!function checkIsSameRootDataSourceId(config){return!config.messageUseDataSource.rootDataSourceId&&!config.actionUseDataSource.rootDataSourceId||config.messageUseDataSource.rootDataSourceId===config.actionUseDataSource.rootDataSourceId}(config))}function getUseDataSourceFromActionConfig(config){let useDataSources;return useDataSources=Array.isArray(config)?getAllUseDataSourceFormArrayActionConfig(config):getAllUseDataSourceFormConfig(config),useDataSources}function getNewActionDataSources(allUseDataSourceOfAction,actionUseDataSource){var _a,_b,_c;const dsM=jimu_core.zAk.getInstance();if(actionUseDataSource){const actionDataSourceId=null==actionUseDataSource?void 0:actionUseDataSource.dataSourceId,actionRootDataSourceId=null==actionUseDataSource?void 0:actionUseDataSource.rootDataSourceId,dsJson=(null===(_a=dsM.getDataSource(actionDataSourceId))||void 0===_a?void 0:_a.getDataSourceJson())||(null===(_b=dsM.getDataSource(actionRootDataSourceId))||void 0===_b?void 0:_b.getDataSourceJson()),isDsInActionUseDataSources=(null===(_c=null==allUseDataSourceOfAction?void 0:allUseDataSourceOfAction.filter((ds=>ds.dataSourceId===actionDataSourceId)))||void 0===_c?void 0:_c.length)>0;return dsJson&&isDsInActionUseDataSources?actionUseDataSource:null}return null}function getNewActionConfigItem(actionConfig,allUseDataSourceOfAction){let isConfigChange=!1,newActionConfig=actionConfig,actionUseDataSource=null==actionConfig?void 0:actionConfig.actionUseDataSource;return actionUseDataSource&&(actionUseDataSource=getNewActionDataSources(allUseDataSourceOfAction,actionUseDataSource),actionUseDataSource||(isConfigChange=!0,newActionConfig=newActionConfig.set("actionUseDataSource",null))),{isConfigChange,newActionConfig}}const getAllUseDataSourceFormConfig=config=>{var _a;const actionConfig=null==config?void 0:config.asMutable({deep:!0});let useDataSources=[];const actionUseDataSource=null==actionConfig?void 0:actionConfig.actionUseDataSource,messageUseDataSource=null==actionConfig?void 0:actionConfig.messageUseDataSource;if(messageUseDataSource&&useDataSources.push(messageUseDataSource),actionUseDataSource){const sqlExprObj=(null==actionConfig?void 0:actionConfig.sqlExprObj)||null,sqlUsedFields=(0,sql_expression_runtime.getJimuFieldNamesBySqlExpression)((0,jimu_core.J3Z)(sqlExprObj))||[],actionUseDsFields=(null==actionUseDataSource?void 0:actionUseDataSource.fields)||[];let newActionUseDataSource=(0,jimu_core.J3Z)(actionUseDataSource).set("fields",Array.from(new Set(actionUseDsFields.concat(sqlUsedFields))));(null==messageUseDataSource?void 0:messageUseDataSource.dataSourceId)===actionUseDataSource.dataSourceId&&(useDataSources=[],(null===(_a=null==messageUseDataSource?void 0:messageUseDataSource.fields)||void 0===_a?void 0:_a.length)>0&&(newActionUseDataSource=newActionUseDataSource.set("fields",Array.from(new Set(newActionUseDataSource.fields.concat(messageUseDataSource.fields)))))),useDataSources.push(null==newActionUseDataSource?void 0:newActionUseDataSource.asMutable({deep:!0}))}return useDataSources},getAllUseDataSourceFormArrayActionConfig=config=>{const actionConfig=null==config?void 0:config.asMutable({deep:!0}),allUseDataSources={};return actionConfig.forEach((actionConfigItem=>{getAllUseDataSourceFormConfig((0,jimu_core.J3Z)(actionConfigItem)).forEach((ds=>{if(null==allUseDataSources?void 0:allUseDataSources[ds.dataSourceId]){let newFields=allUseDataSources[ds.dataSourceId].fields||[];newFields=newFields.concat((null==ds?void 0:ds.fields)||[]),newFields=Array.from(new Set(newFields)),allUseDataSources[ds.dataSourceId].fields=newFields}else allUseDataSources[ds.dataSourceId]=ds}))})),Object.keys(allUseDataSources).map((dsId=>allUseDataSources[dsId]))};var link_combined=__webpack_require__("../jimu-icons/outlined/data/link-combined.tsx");class _FilterDataRecordActionSetting extends jimu_core.q_G.PureComponent{constructor(props){super(props),this.modalStyle={position:"absolute",top:"0",bottom:"0",width:"259px",height:"auto",borderRight:"",borderBottom:"",paddingBottom:"1px"},this.getInitConfig=()=>{var _a,_b,_c,_d,_e;const{messageWidgetId,messageType,config}=this.props,dsM=jimu_core.zAk.getInstance();let messageUseDataSource=null,enableQueryWithCurrentExtent=!0;const currentMessageUseDataSource=this.getMessageUseDataSource();if(currentMessageUseDataSource)messageUseDataSource=checkAndGetInitUseDataSource({widgetId:messageWidgetId,oldUseDataSource:currentMessageUseDataSource,messageType,arcGISDataSourceTypes:jimu_core.hg5});else{const ds=getDsByWidgetId(messageWidgetId,messageType);if((null==ds?void 0:ds[0])&&1===(null==ds?void 0:ds.length)){const dsJson=null===(_a=dsM.getDataSource(null==ds?void 0:ds[0].dataSourceId))||void 0===_a?void 0:_a.getDataSourceJson();messageUseDataSource=!dsJson||dsJson.type!==jimu_core.hg5.WebMap&&dsJson.type!==jimu_core.hg5.WebScene?(0,jimu_core.J3Z)({dataSourceId:null===(_b=null==ds?void 0:ds[0])||void 0===_b?void 0:_b.dataSourceId,mainDataSourceId:null===(_c=null==ds?void 0:ds[0])||void 0===_c?void 0:_c.mainDataSourceId,dataViewId:null===(_d=null==ds?void 0:ds[0])||void 0===_d?void 0:_d.dataViewId,rootDataSourceId:null===(_e=null==ds?void 0:ds[0])||void 0===_e?void 0:_e.rootDataSourceId}):null}}const configItem=Array.isArray(config)?null==config?void 0:config[0]:config;if(void 0!==(null==configItem?void 0:configItem.enableQueryWithCurrentExtent)&&(enableQueryWithCurrentExtent=configItem.enableQueryWithCurrentExtent),messageType===jimu_core.GoH.ExtentChange){if(Array.isArray(config))return null==config?void 0:config.map((item=>this.getInitActionConfigItem(messageUseDataSource,enableQueryWithCurrentExtent,item)));return[config?this.getInitActionConfigItem(messageUseDataSource,enableQueryWithCurrentExtent,config):this.getInitActionConfigItem(messageUseDataSource,enableQueryWithCurrentExtent,null)]}return this.getInitActionConfigItem(messageUseDataSource,enableQueryWithCurrentExtent,config)},this.getInitActionConfigItem=(messageUseDataSource,enableQueryWithCurrentExtent,configItem)=>{const{useDataSources:allUseDataSourceOfAction}=this.props,actionUseDataSource=getNewActionDataSources(allUseDataSourceOfAction,null==configItem?void 0:configItem.actionUseDataSource);return{messageUseDataSource,actionUseDataSource,sqlExprObj:(null==actionUseDataSource?void 0:actionUseDataSource.dataSourceId)?configItem.sqlExprObj:null,enableQueryWithCurrentExtent}},this.onSettingChange=config=>{const useDataSources=getUseDataSourceFromActionConfig(config);this.props.onSettingChange({actionId:this.props.actionId,config,useDataSources})},this.handleTriggerLayerChange=useDataSources=>{let newConfig=this.props.config;Array.isArray(newConfig)?newConfig=null==newConfig?void 0:newConfig.map((item=>item=item.set("messageUseDataSource",(null==useDataSources?void 0:useDataSources[0])||null))):(newConfig=newConfig.set("messageUseDataSource",(null==useDataSources?void 0:useDataSources[0])||null),0===useDataSources.length&&(newConfig=newConfig.set("connectionType",null))),this.onSettingChange(newConfig)},this.handleActionLayerChange=useDataSources=>{let newConfig=this.props.config;if(Array.isArray(newConfig)){const defaultActionConfigItem={messageUseDataSource:this.getMessageUseDataSource(),actionUseDataSource:null,sqlExprObj:null,enableQueryWithCurrentExtent:!0,enabledDataRelationShip:!0};if(0===(null==useDataSources?void 0:useDataSources.length))newConfig=(0,jimu_core.J3Z)([defaultActionConfigItem]);else{const newMessageConfig=null==useDataSources?void 0:useDataSources.map((useDataSource=>Object.assign(Object.assign({},defaultActionConfigItem),{actionUseDataSource:useDataSource})));newConfig=(0,jimu_core.J3Z)(newMessageConfig)}}else newConfig=newConfig.set("actionUseDataSource",(null==useDataSources?void 0:useDataSources[0])||null).set("sqlExprObj",null),0===useDataSources.length&&(newConfig=newConfig.set("connectionType",null));this.onSettingChange(newConfig)},this.showSqlExprPopup=()=>{this.setState({isSqlExprShow:!0})},this.toggleSqlExprPopup=()=>{this.setState({isSqlExprShow:!this.state.isSqlExprShow})},this.onSqlExprBuilderChange=sqlExprObj=>{this.handleActionConditionsChange("sqlExprObj",sqlExprObj)},this.handleActionConditionsChange=(key,value)=>{const{config}=this.props;let newConfig=config;if(Array.isArray(config)&&1===(null==config?void 0:config.length)){const newConfigItem=newConfig[0].set(key,value);newConfig=(0,jimu_core.J3Z)([newConfigItem])}else newConfig=config.set(key,value);this.onSettingChange(newConfig)},this.onMessageFieldSelected=(allSelectedFields,ds)=>{const{config}=this.props,newConfig=config.set("messageUseDataSource",{dataSourceId:config.messageUseDataSource.dataSourceId,mainDataSourceId:config.messageUseDataSource.mainDataSourceId,dataViewId:config.messageUseDataSource.dataViewId,rootDataSourceId:config.messageUseDataSource.rootDataSourceId,fields:allSelectedFields.map((f=>f.jimuName))});this.onSettingChange(newConfig)},this.onActionFieldSelected=(allSelectedFields,ds)=>{const{config}=this.props,newConfig=config.set("actionUseDataSource",{dataSourceId:config.actionUseDataSource.dataSourceId,mainDataSourceId:config.actionUseDataSource.mainDataSourceId,dataViewId:config.actionUseDataSource.dataViewId,rootDataSourceId:config.actionUseDataSource.rootDataSourceId,fields:allSelectedFields.map((f=>f.jimuName))});this.onSettingChange(newConfig)},this.switchEnabledDataRelationShip=checked=>{this.onSettingChange(this.props.config.set("enabledDataRelationShip",checked))},this.switchEnabledQueryWithCurrentExtent=checked=>{this.handleActionConditionsChange("enableQueryWithCurrentExtent",checked)},this.checkIsDisableDataView=widgetId=>{var _a,_b,_c,_d;if(this.props.messageType===jimu_core.GoH.DataRecordsSelectionChange)return!0;const appConfig=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appStateInBuilder)||void 0===_b?void 0:_b.appConfig,widgetJson=null===(_c=null==appConfig?void 0:appConfig.widgets)||void 0===_c?void 0:_c[widgetId];if(widgetJson){return"Map"===(null===(_d=null==widgetJson?void 0:widgetJson.manifest)||void 0===_d?void 0:_d.label)}return!1},this.onUseLayersRelationship=()=>{const newConfig=this.props.config.setIn(["messageUseDataSource","fields"],[]).setIn(["actionUseDataSource","fields"],[]).set("connectionType",jimu_core._lP.UseLayersRelationship);this.onSettingChange(newConfig)},this.onSetCustomFields=()=>{const newConfig=this.props.config.setIn(["messageUseDataSource","fields"],[]).setIn(["actionUseDataSource","fields"],[]).set("connectionType",jimu_core._lP.SetCustomFields);this.onSettingChange(newConfig)},this.checkIsShowFrameworkActionConditions=()=>{var _a;return!(window.isExpressBuilder||!(null===(_a=this.props.config)||void 0===_a?void 0:_a.actionUseDataSource)||!this.props.config.messageUseDataSource||Array.isArray(this.props.config))},this.getMessageUseDataSource=()=>{var _a;const{config}=this.props;return Array.isArray(config)?null===(_a=config[0])||void 0===_a?void 0:_a.messageUseDataSource:null==config?void 0:config.messageUseDataSource},this.checkIsNotRenderActionSetting=()=>{const{Button,Icon,Switch,Collapse,SettingSection,SettingRow,FieldSelector,DataSourceSelector,SqlExpressionBuilderPopup}=this.state;return!(Button&&Icon&&Switch&&Collapse&&SettingSection&&SettingRow&&FieldSelector&&DataSourceSelector&&SqlExpressionBuilderPopup)},this.renderFrameworkActionConditions=()=>{var _a,_b;const{Button,Switch,Collapse,SettingSection,SettingRow,FieldSelector,SqlExpressionBuilderPopup}=this.state,{config,theme}=this.props,messageUseDataSourceInstance=config.messageUseDataSource&&jimu_core.zAk.getInstance().getDataSource(this.props.config.messageUseDataSource.dataSourceId),actionUseDataSourceInstance=config.actionUseDataSource&&jimu_core.zAk.getInstance().getDataSource(config.actionUseDataSource.dataSourceId),isSameLayer=checkTriggerLayerIsSameToActionLayer(config),isCustomFields=!config.connectionType||config.connectionType===jimu_core._lP.SetCustomFields;return(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_Conditions",defaultMessage:translations_default.A.frameworkAction_Conditions})},(0,jimu_core.Yac)(SettingRow,{tag:"label",label:this.props.intl.formatMessage({id:"frameworkAction_RelateMessage",defaultMessage:translations_default.A.frameworkAction_RelateMessage})},(0,jimu_core.Yac)(Switch,{checked:this.props.config.enabledDataRelationShip,onChange:evt=>{this.switchEnabledDataRelationShip(evt.target.checked)}})),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)(Collapse,{isOpen:this.props.config.enabledDataRelationShip,className:"w-100"},(0,jimu_core.Yac)(choose_connection_type,{messageDataSource:messageUseDataSourceInstance,actionDataSource:actionUseDataSourceInstance,connectionType:config.connectionType,onUseLayersRelationship:this.onUseLayersRelationship,onSetCustomFields:this.onSetCustomFields}),isSameLayer&&(0,jimu_core.Yac)("div",{className:"w-100 border p-1 mr-2"},this.props.intl.formatMessage({id:"frameworkAction_AutoBind",defaultMessage:translations_default.A.frameworkAction_AutoBind})),!isSameLayer&&isCustomFields&&(0,jimu_core.Yac)("div",{className:"w-100 d-flex align-items-center mt-3"},(0,jimu_core.Yac)("div",{className:"d-flex flex-column relate-panel-left"},(0,jimu_core.Yac)(FieldSelector,{className:"w-100",useDataSources:(0,jimu_core.J3Z)([null===(_a=this.props.config.messageUseDataSource)||void 0===_a?void 0:_a.asMutable({deep:!0})]),isDataSourceDropDownHidden:!0,placeholder:this.props.intl.formatMessage({id:"frameworkAction_TriggerLayerField",defaultMessage:translations_default.A.frameworkAction_TriggerLayerField}),onChange:this.onMessageFieldSelected,useDropdown:!0,selectedFields:this.props.config.messageUseDataSource&&this.props.config.messageUseDataSource.fields?this.props.config.messageUseDataSource.fields:(0,jimu_core.J3Z)([])}),(0,jimu_core.Yac)(FieldSelector,{className:"w-100 action-select-chooser",placeholder:this.props.intl.formatMessage({id:"frameworkAction_ActionLayerField",defaultMessage:translations_default.A.frameworkAction_ActionLayerField}),useDataSources:(0,jimu_core.J3Z)([null===(_b=this.props.config.actionUseDataSource)||void 0===_b?void 0:_b.asMutable({deep:!0})]),isDataSourceDropDownHidden:!0,onChange:this.onActionFieldSelected,useDropdown:!0,selectedFields:this.props.config.actionUseDataSource&&this.props.config.actionUseDataSource.fields?this.props.config.actionUseDataSource.fields:(0,jimu_core.J3Z)([])})),(0,jimu_core.Yac)(link_combined.W,{autoFlip:!0,className:"flex-none",width:12,height:40,color:theme.ref.palette.neutral[900]})))),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)(Button,{type:"link",disabled:!this.props.config.actionUseDataSource,className:"w-100 d-flex justify-content-start",onClick:this.showSqlExprPopup},(0,jimu_core.Yac)("div",{className:"w-100 text-truncate",style:{textAlign:"start"}},this.props.intl.formatMessage({id:"frameworkAction_MoreConditions",defaultMessage:translations_default.A.frameworkAction_MoreConditions}))),this.props.config.actionUseDataSource&&(0,jimu_core.Yac)(jimu_core.pjH,{useDataSource:this.props.config.actionUseDataSource},(ds=>(0,jimu_core.Yac)(SqlExpressionBuilderPopup,{dataSource:ds,mode:jimu_core.YuP.Simple,isOpen:this.state.isSqlExprShow,toggle:this.toggleSqlExprPopup,expression:this.props.config.sqlExprObj,onChange:sqlExprObj=>{this.onSqlExprBuilderChange(sqlExprObj)},id:"filter-widget-sql-expression-builder-popup"})))),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)("div",{className:"sql-expr-display"},this.props.config.sqlExprObj&&actionUseDataSourceInstance?jimu_core.ZkX.getArcGISSQL(this.props.config.sqlExprObj,actionUseDataSourceInstance).displaySQL:this.props.intl.formatMessage({id:"frameworkAction_SetExpression",defaultMessage:translations_default.A.frameworkAction_SetExpression}))))},this.renderFrameworkConditionsWhenQueryByExtent=()=>{const{Button,Switch,SettingSection,SettingRow,SqlExpressionBuilderPopup}=this.state,configInProps=this.props.config;let config,enableQueryWithCurrentExtent;Array.isArray(configInProps)?(config=null==configInProps?void 0:configInProps[0],enableQueryWithCurrentExtent=configInProps.length>1||config.enableQueryWithCurrentExtent):(config=configInProps,enableQueryWithCurrentExtent=config.enableQueryWithCurrentExtent);const actionUseDataSourceInstance=config.actionUseDataSource&&jimu_core.zAk.getInstance().getDataSource(config.actionUseDataSource.dataSourceId);return(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_Conditions",defaultMessage:translations_default.A.frameworkAction_Conditions})},(0,jimu_core.Yac)(SettingRow,{tag:"label",label:this.props.intl.formatMessage({id:"frameworkAction_QueryByExtent",defaultMessage:translations_default.A.frameworkAction_QueryByExtent})},(0,jimu_core.Yac)(Switch,{checked:enableQueryWithCurrentExtent,onChange:evt=>{this.switchEnabledQueryWithCurrentExtent(evt.target.checked)}})),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)(Button,{className:"p-0 text-left",type:"link",disabled:!config.actionUseDataSource,onClick:this.showSqlExprPopup,title:this.props.intl.formatMessage({id:"frameworkAction_MoreConditions",defaultMessage:translations_default.A.frameworkAction_MoreConditions})},this.props.intl.formatMessage({id:"frameworkAction_MoreConditions",defaultMessage:translations_default.A.frameworkAction_MoreConditions}))),(0,jimu_core.Yac)(SettingRow,null,config.actionUseDataSource&&(0,jimu_core.Yac)(jimu_core.pjH,{useDataSource:config.actionUseDataSource},(ds=>(0,jimu_core.Yac)(SqlExpressionBuilderPopup,{dataSource:ds,mode:jimu_core.YuP.Simple,isOpen:this.state.isSqlExprShow,toggle:this.toggleSqlExprPopup,expression:config.sqlExprObj,onChange:sqlExprObj=>{this.onSqlExprBuilderChange(sqlExprObj)},id:"filter-widget-sql-expression-builder-popup"}))),(0,jimu_core.Yac)("div",{className:"sql-expr-display body-1"},config.sqlExprObj&&actionUseDataSourceInstance?jimu_core.ZkX.getArcGISSQL(config.sqlExprObj,actionUseDataSourceInstance).displaySQL:this.props.intl.formatMessage({id:"frameworkAction_SetExpression",defaultMessage:translations_default.A.frameworkAction_SetExpression}))))},this.getActionbactionUseDataSource=()=>{const{config}=this.props,actionbactionUseDataSources=[];return Array.isArray(config)?config.forEach((configItem=>{(null==configItem?void 0:configItem.actionUseDataSource)&&actionbactionUseDataSources.push(null==configItem?void 0:configItem.actionUseDataSource)})):(null==config?void 0:config.actionUseDataSource)&&actionbactionUseDataSources.push(null==config?void 0:config.actionUseDataSource),actionbactionUseDataSources},this.checkIsShowConditions=()=>{let isActionNeedConditions;return isActionNeedConditions=!Array.isArray(this.props.config)||1===this.props.config.length,!window.isExpressBuilder&&isActionNeedConditions},this.modalStyle.borderRight="1px solid black",this.modalStyle.borderBottom="1px solid black",this.state={isShowLayerList:!1,currentLayerType:null,isSqlExprShow:!1}}componentDidMount(){jimu_core.SRz.loadModules(["jimu-ui","jimu-ui/advanced/setting-components","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/sql-expression-builder"]).then((modules=>{this.setState({Button:modules[0].Button,Icon:modules[0].Icon,Switch:modules[0].Switch,Collapse:modules[0].Collapse,SettingSection:modules[1].SettingSection,SettingRow:modules[1].SettingRow,FieldSelector:modules[2].FieldSelector,DataSourceSelector:modules[2].DataSourceSelector,SqlExpressionBuilderPopup:modules[3].SqlExpressionBuilderPopup,DSSelectorTypes:(0,jimu_core.J3Z)([jimu_core.hg5.FeatureLayer,jimu_core.hg5.SceneLayer,jimu_core.hg5.OrientedImageryLayer,jimu_core.hg5.ImageryLayer,jimu_core.hg5.BuildingComponentSubLayer,jimu_core.hg5.SubtypeGroupLayer,jimu_core.hg5.SubtypeSublayer])},(()=>{let initConfig=this.getInitConfig(),newConfig=this.props.config;newConfig=this.props.messageType===jimu_core.GoH.ExtentChange?(0,jimu_core.J3Z)(initConfig):newConfig.set("messageUseDataSource",initConfig.messageUseDataSource).set("actionUseDataSource",initConfig.actionUseDataSource).set("sqlExprObj",initConfig.sqlExprObj),this.onSettingChange(newConfig)}))}))}componentDidUpdate(prevProps,preState){const{useDataSources:allUseDataSourceOfAction,config}=this.props;if(prevProps.config&&config){const getNewActionConfigRes=function getNewActionConfigWhenAllUseDataSourceChange(actionConfig,allUseDataSourceOfAction){let isConfigChange=!1,newActionConfig=actionConfig;if(Array.isArray(actionConfig))newActionConfig=actionConfig.map((configItem=>{const getNewActionConfigItemRes=getNewActionConfigItem(configItem,allUseDataSourceOfAction);return getNewActionConfigItemRes.isConfigChange?(isConfigChange=!0,getNewActionConfigItemRes.newActionConfig):configItem}));else{const getNewActionConfigItemRes=getNewActionConfigItem(actionConfig,allUseDataSourceOfAction);getNewActionConfigItemRes.isConfigChange&&(isConfigChange=!0,newActionConfig=getNewActionConfigItemRes.newActionConfig)}return{isConfigChange,newActionConfig}}(config,allUseDataSourceOfAction);(null==getNewActionConfigRes?void 0:getNewActionConfigRes.isConfigChange)&&this.onSettingChange(getNewActionConfigRes.newActionConfig)}}getStyle(theme){return jimu_core.AHW`
      .setting-header {
        padding: ${jimu_core.PLL.rem(10)} ${jimu_core.PLL.rem(16)} ${jimu_core.PLL.rem(0)} ${jimu_core.PLL.rem(16)}
      }
      .jimu-collapse {
        flex: 1;
      }

      .deleteIcon {
        cursor: pointer;
        opacity: .8;
      }

      .deleteIcon:hover {
        opacity: 1;
      }

      .sql-expr-display {
        width: 100%;
        height: auto;
        min-height: 60px;
        line-height: 25px;
        padding: 3px 5px;
        color: ${theme.ref.palette.neutral[900]};
        border: 1px solid ${theme.ref.palette.neutral[500]};
      }

      .relate-panel-left {
        flex: auto;
        overflow: hidden;
        .action-select-chooser {
          margin-top: ${jimu_core.PLL.rem(12)};
        }
      }
    `}render(){const{SettingSection,DataSourceSelector}=this.state,{messageWidgetId,messageType}=this.props;if(this.checkIsNotRenderActionSetting())return null;const triggerDsSelectorSourceData=getDsSelectorSourceData({widgetId:messageWidgetId,useDataSource:this.getMessageUseDataSource(),messageType,arcGISDataSourceTypes:jimu_core.hg5}),actionUseDataSources=this.getActionbactionUseDataSource();return this.props.messageType===jimu_core.GoH.ExtentChange?(0,jimu_core.Yac)("div",{css:this.getStyle(this.props.theme)},(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_ActionLayer",defaultMessage:translations_default.A.frameworkAction_ActionLayer})},(0,jimu_core.Yac)(DataSourceSelector,{isMultiple:!0,types:this.state.DSSelectorTypes,useDataSources:(0,jimu_core.J3Z)(actionUseDataSources),hideAddDataButton:!0,hideTypeDropdown:!0,mustUseDataSource:!0,onChange:this.handleActionLayerChange,widgetId:this.props.widgetId,enableToSelectOutputDsFromSelf:!0})),this.checkIsShowConditions()&&this.renderFrameworkConditionsWhenQueryByExtent()):(0,jimu_core.Yac)("div",{css:this.getStyle(this.props.theme)},(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"messageAction_TriggerData",defaultMessage:jimu_core.kgw.messageAction_TriggerData})},(0,jimu_core.Yac)(DataSourceSelector,{types:this.state.DSSelectorTypes,useDataSources:triggerDsSelectorSourceData.useDataSources,fromRootDsIds:triggerDsSelectorSourceData.fromRootDsIds,fromDsIds:triggerDsSelectorSourceData.fromDsIds,closeDataSourceListOnChange:!0,disableRemove:()=>triggerDsSelectorSourceData.isReadOnly,disableDataSourceList:triggerDsSelectorSourceData.isReadOnly,hideAddDataButton:!0,hideTypeDropdown:!0,mustUseDataSource:!0,onChange:this.handleTriggerLayerChange,widgetId:this.props.messageWidgetId,disableDataView:!0,hideDataView:this.checkIsDisableDataView(this.props.messageWidgetId),enableToSelectOutputDsFromSelf:!0})),(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_ActionLayer",defaultMessage:translations_default.A.frameworkAction_ActionLayer})},(0,jimu_core.Yac)(DataSourceSelector,{isMultiple:Array.isArray(this.props.config),types:this.state.DSSelectorTypes,useDataSources:(0,jimu_core.J3Z)(actionUseDataSources),closeDataSourceListOnChange:!0,hideAddDataButton:!0,hideTypeDropdown:!0,mustUseDataSource:!0,onChange:this.handleActionLayerChange,widgetId:this.props.widgetId,enableToSelectOutputDsFromSelf:!0})),this.checkIsShowFrameworkActionConditions()&&this.renderFrameworkActionConditions())}}_FilterDataRecordActionSetting.defaultProps={config:(0,jimu_core.J3Z)({messageUseDataSource:null,actionUseDataSource:null,sqlExprObj:null,enabledDataRelationShip:!0,enableQueryWithCurrentExtent:!0})};const filter_data_record_action_setting=jimu_core.E_S.connect((state=>({dataSources:state.appStateInBuilder&&state.appStateInBuilder.appConfig&&state.appStateInBuilder.appConfig.dataSources,dataSourcesInfo:state.appStateInBuilder&&state.appStateInBuilder.dataSourcesInfo})))((0,jimu_theme.SL)(_FilterDataRecordActionSetting));try{filterdatarecordactionsetting.displayName="filterdatarecordactionsetting",filterdatarecordactionsetting.__docgenInfo={description:"",displayName:"filterdatarecordactionsetting",props:{actionId:{defaultValue:null,description:"",name:"actionId",required:!0,type:{name:"string"}},widgetId:{defaultValue:null,description:"",name:"widgetId",required:!0,type:{name:"string"}},messageWidgetId:{defaultValue:null,description:"",name:"messageWidgetId",required:!0,type:{name:"string"}},config:{defaultValue:null,description:"",name:"config",required:!1,type:{name:"IMConfig"}},messageType:{defaultValue:null,description:"",name:"messageType",required:!0,type:{name:"enum",value:[{value:'"STRING_SELECTION_CHANGE"'},{value:'"EXTENT_CHANGE"'},{value:'"DATA_RECORDS_SELECTION_CHANGE"'},{value:'"DATA_SOURCE_FILTER_CHANGE"'},{value:'"DATA_RECORD_SET_CHANGE"'},{value:'"DATA_SOURCES_CHANGE"'},{value:'"LOCATION_CHANGE"'},{value:'"SELECT_DATA_RECORD"'},{value:'"BUTTON_CLICK"'},{value:'"VIEW_CHANGE"'}]}},useDataSources:{defaultValue:null,description:"",name:"useDataSources",required:!1,type:{name:"UseDataSource[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"IntlShape"}},onSettingChange:{defaultValue:null,description:"",name:"onSettingChange",required:!0,type:{name:"ActionSettingChangeFunction"}},onDisableDoneBtn:{defaultValue:null,description:"",name:"onDisableDoneBtn",required:!1,type:{name:"(isDisable: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/message-actions/filter-data-record-action-setting.tsx#filterdatarecordactionsetting"]={docgenInfo:filterdatarecordactionsetting.__docgenInfo,name:"filterdatarecordactionsetting",path:"../jimu-for-builder/lib/message-actions/filter-data-record-action-setting.tsx#filterdatarecordactionsetting"})}catch(__react_docgen_typescript_loader_error){}class _SelectDataRecordActionSetting extends jimu_core.q_G.PureComponent{constructor(props){super(props),this.modalStyle={position:"absolute",top:"0",bottom:"0",width:"259px",height:"auto",borderRight:"",borderBottom:"",paddingBottom:"1px"},this.getInitConfig=()=>{var _a,_b,_c,_d,_e;const{messageWidgetId,messageType,config,useDataSources:allUseDataSourceOfAction}=this.props,dsM=jimu_core.zAk.getInstance();let messageUseDataSource=null;const actionUseDataSource=getNewActionDataSources(allUseDataSourceOfAction,null==config?void 0:config.actionUseDataSource);if(this.props.config.messageUseDataSource)messageUseDataSource=checkAndGetInitUseDataSource({widgetId:messageWidgetId,oldUseDataSource:this.props.config.messageUseDataSource,messageType,arcGISDataSourceTypes:jimu_core.hg5});else{const ds=getDsByWidgetId(messageWidgetId,messageType);if((null==ds?void 0:ds[0])&&1===(null==ds?void 0:ds.length)){const dsJson=null===(_a=dsM.getDataSource(null==ds?void 0:ds[0].dataSourceId))||void 0===_a?void 0:_a.getDataSourceJson();messageUseDataSource=!dsJson||dsJson.type!==jimu_core.hg5.WebMap&&dsJson.type!==jimu_core.hg5.WebScene?(0,jimu_core.J3Z)({dataSourceId:null===(_b=null==ds?void 0:ds[0])||void 0===_b?void 0:_b.dataSourceId,mainDataSourceId:null===(_c=null==ds?void 0:ds[0])||void 0===_c?void 0:_c.mainDataSourceId,dataViewId:null===(_d=null==ds?void 0:ds[0])||void 0===_d?void 0:_d.dataViewId,rootDataSourceId:null===(_e=null==ds?void 0:ds[0])||void 0===_e?void 0:_e.rootDataSourceId}):null}}return actionUseDataSource&&actionUseDataSource.dataSourceId?{messageUseDataSource,actionUseDataSource,sqlExprObj:this.props.config.sqlExprObj}:{messageUseDataSource,actionUseDataSource,sqlExprObj:null}},this.onSettingChange=config=>{const useDataSources=getUseDataSourceFromActionConfig(config);this.props.onSettingChange({actionId:this.props.actionId,config,useDataSources})},this.handleTriggerLayerChange=useDataSources=>{useDataSources&&useDataSources.length>0?this.handleTriggerLayerSelected(useDataSources[0]):this.handleRemoveLayerForTriggerLayer()},this.handleActionLayerChange=useDataSources=>{useDataSources&&useDataSources.length>0?this.handleActionLayerSelected(useDataSources[0]):this.handleRemoveLayerForActionLayer()},this.handleTriggerLayerSelected=currentSelectedDs=>{const newConfig=this.props.config.set("messageUseDataSource",currentSelectedDs);this.onSettingChange(newConfig)},this.handleActionLayerSelected=currentSelectedDs=>{const newConfig=this.props.config.set("actionUseDataSource",currentSelectedDs).set("sqlExprObj",null);this.onSettingChange(newConfig)},this.handleRemoveLayerForTriggerLayer=()=>{const newConfig=this.props.config.set("messageUseDataSource",null).set("connectionType",null);this.onSettingChange(newConfig)},this.handleRemoveLayerForActionLayer=()=>{const newConfig=this.props.config.set("actionUseDataSource",null).set("sqlExprObj",null).set("connectionType",null);this.onSettingChange(newConfig)},this.showSqlExprPopup=()=>{this.setState({isSqlExprShow:!0})},this.toggleSqlExprPopup=()=>{this.setState({isSqlExprShow:!this.state.isSqlExprShow})},this.onSqlExprBuilderChange=sqlExprObj=>{const newConfig=this.props.config.set("sqlExprObj",sqlExprObj);this.onSettingChange(newConfig)},this.onMessageFieldSelected=(allSelectedFields,ds)=>{const{config}=this.props,newConfig=config.set("messageUseDataSource",{dataSourceId:config.messageUseDataSource.dataSourceId,mainDataSourceId:config.messageUseDataSource.mainDataSourceId,dataViewId:config.messageUseDataSource.dataViewId,rootDataSourceId:config.messageUseDataSource.rootDataSourceId,fields:allSelectedFields.map((f=>f.jimuName))});this.onSettingChange(newConfig)},this.onActionFieldSelected=(allSelectedFields,ds)=>{const{config}=this.props,newConfig=config.set("actionUseDataSource",{dataSourceId:config.actionUseDataSource.dataSourceId,mainDataSourceId:config.actionUseDataSource.mainDataSourceId,dataViewId:config.actionUseDataSource.dataViewId,rootDataSourceId:config.actionUseDataSource.rootDataSourceId,fields:allSelectedFields.map((f=>f.jimuName))});this.onSettingChange(newConfig)},this.switchEnabledDataRelationShip=checked=>{const newConfig=this.props.config.set("enabledDataRelationShip",checked);this.onSettingChange(newConfig)},this.onUseLayersRelationship=()=>{const newConfig=this.props.config.setIn(["messageUseDataSource","fields"],[]).setIn(["actionUseDataSource","fields"],[]).set("connectionType",jimu_core._lP.UseLayersRelationship);this.onSettingChange(newConfig)},this.onSetCustomFields=()=>{const newConfig=this.props.config.setIn(["messageUseDataSource","fields"],[]).setIn(["actionUseDataSource","fields"],[]).set("connectionType",jimu_core._lP.SetCustomFields);this.onSettingChange(newConfig)},this.modalStyle.borderRight="1px solid black",this.modalStyle.borderBottom="1px solid black",this.state={isShowLayerList:!1,currentLayerType:null,isSqlExprShow:!1}}componentDidMount(){jimu_core.SRz.loadModules(["jimu-ui","jimu-ui/advanced/setting-components","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/sql-expression-builder"]).then((modules=>{this.setState({Button:modules[0].Button,Icon:modules[0].Icon,Switch:modules[0].Switch,Collapse:modules[0].Collapse,SettingSection:modules[1].SettingSection,SettingRow:modules[1].SettingRow,FieldSelector:modules[2].FieldSelector,DataSourceSelector:modules[2].DataSourceSelector,SqlExpressionBuilderPopup:modules[3].SqlExpressionBuilderPopup,DSSelectorTypes:(0,jimu_core.J3Z)([jimu_core.at.FeatureLayer,jimu_core.at.SceneLayer,jimu_core.at.OrientedImageryLayer,jimu_core.at.ImageryLayer,jimu_core.at.BuildingComponentSubLayer,jimu_core.at.SubtypeGroupLayer,jimu_core.at.SubtypeSublayer])},(()=>{const initConfig=this.getInitConfig(),newConfig=this.props.config.set("messageUseDataSource",initConfig.messageUseDataSource).set("actionUseDataSource",initConfig.actionUseDataSource).set("sqlExprObj",initConfig.sqlExprObj);this.onSettingChange(newConfig)}))}))}getStyle(theme){return jimu_core.AHW`
      .setting-header {
        padding: ${jimu_core.PLL.rem(10)} ${jimu_core.PLL.rem(16)} ${jimu_core.PLL.rem(0)} ${jimu_core.PLL.rem(16)}
      }
      .jimu-collapse {
        flex: 1;
      }

      .deleteIcon {
        cursor: pointer;
        opacity: .8;
      }

      .deleteIcon:hover {
        opacity: 1;
      }

      .sql-expr-display {
        width: 100%;
        height: auto;
        min-height: 60px;
        line-height: 25px;
        padding: 3px 5px;
        color: ${theme.ref.palette.neutral[900]};
        border: 1px solid ${theme.ref.palette.neutral[500]};
      }

      .relate-panel-left {
        flex: auto;
        overflow: hidden;
        .action-select-chooser {
          margin-top: ${jimu_core.PLL.rem(12)};
        }
      }
    `}render(){var _a,_b;const{Button,Icon,Switch,Collapse,SettingSection,SettingRow,FieldSelector,DataSourceSelector,SqlExpressionBuilderPopup}=this.state,{messageWidgetId,messageType,config,theme}=this.props;if(!(Button&&Icon&&Switch&&Collapse&&SettingSection&&SettingRow&&FieldSelector&&DataSourceSelector&&SqlExpressionBuilderPopup))return null;const triggerDsSelectorSourceData=getDsSelectorSourceData({widgetId:messageWidgetId,useDataSource:config.messageUseDataSource,messageType,arcGISDataSourceTypes:jimu_core.hg5}),messageUseDataSourceInstance=this.props.config.messageUseDataSource&&jimu_core.zAk.getInstance().getDataSource(this.props.config.messageUseDataSource.dataSourceId),actionUseDataSourceInstance=this.props.config.actionUseDataSource&&jimu_core.zAk.getInstance().getDataSource(this.props.config.actionUseDataSource.dataSourceId),isSameLayer=checkTriggerLayerIsSameToActionLayer(config),isCustomFields=!config.connectionType||config.connectionType===jimu_core._lP.SetCustomFields;return(0,jimu_core.Yac)("div",{css:this.getStyle(this.props.theme)},(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"messageAction_TriggerData",defaultMessage:jimu_core.kgw.messageAction_TriggerData})},(0,jimu_core.Yac)(DataSourceSelector,{types:this.state.DSSelectorTypes,useDataSources:triggerDsSelectorSourceData.useDataSources,fromRootDsIds:triggerDsSelectorSourceData.fromRootDsIds,fromDsIds:triggerDsSelectorSourceData.fromDsIds,closeDataSourceListOnChange:!0,disableRemove:()=>triggerDsSelectorSourceData.isReadOnly,disableDataSourceList:triggerDsSelectorSourceData.isReadOnly,hideAddDataButton:!0,hideTypeDropdown:!0,mustUseDataSource:!0,onChange:this.handleTriggerLayerChange,widgetId:this.props.messageWidgetId,hideDataView:!0,enableToSelectOutputDsFromSelf:!0})),(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_ActionLayer",defaultMessage:translations_default.A.frameworkAction_ActionLayer})},(0,jimu_core.Yac)(DataSourceSelector,{types:this.state.DSSelectorTypes,useDataSources:this.props.config.actionUseDataSource?(0,jimu_core.J3Z)([this.props.config.actionUseDataSource]):(0,jimu_core.J3Z)([]),closeDataSourceListOnChange:!0,hideAddDataButton:!0,hideTypeDropdown:!0,mustUseDataSource:!0,onChange:this.handleActionLayerChange,widgetId:this.props.widgetId,hideDataView:!0,enableToSelectOutputDsFromSelf:!0})),this.props.config&&this.props.config.actionUseDataSource&&this.props.config.messageUseDataSource&&(0,jimu_core.Yac)(SettingSection,{title:this.props.intl.formatMessage({id:"frameworkAction_Conditions",defaultMessage:translations_default.A.frameworkAction_Conditions})},(0,jimu_core.Yac)(SettingRow,{tag:"label",label:this.props.intl.formatMessage({id:"frameworkAction_RelateMessage",defaultMessage:translations_default.A.frameworkAction_RelateMessage})},(0,jimu_core.Yac)(Switch,{checked:this.props.config.enabledDataRelationShip,onChange:evt=>{this.switchEnabledDataRelationShip(evt.target.checked)}})),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)(Collapse,{isOpen:this.props.config.enabledDataRelationShip,className:"w-100"},(0,jimu_core.Yac)(choose_connection_type,{messageDataSource:messageUseDataSourceInstance,actionDataSource:actionUseDataSourceInstance,connectionType:config.connectionType,onUseLayersRelationship:this.onUseLayersRelationship,onSetCustomFields:this.onSetCustomFields}),isSameLayer&&(0,jimu_core.Yac)("div",{className:"w-100 border p-1 mr-2"},this.props.intl.formatMessage({id:"frameworkAction_AutoBind",defaultMessage:translations_default.A.frameworkAction_AutoBind})),!isSameLayer&&isCustomFields&&(0,jimu_core.Yac)("div",{className:"w-100 d-flex align-items-center mt-3"},(0,jimu_core.Yac)("div",{className:"d-flex flex-column relate-panel-left"},(0,jimu_core.Yac)(FieldSelector,{className:"w-100",useDataSources:(0,jimu_core.J3Z)([null===(_a=this.props.config.messageUseDataSource)||void 0===_a?void 0:_a.asMutable({deep:!0})]),isDataSourceDropDownHidden:!0,placeholder:this.props.intl.formatMessage({id:"frameworkAction_TriggerLayerField",defaultMessage:translations_default.A.frameworkAction_TriggerLayerField}),onChange:this.onMessageFieldSelected,useDropdown:!0,selectedFields:this.props.config.messageUseDataSource&&this.props.config.messageUseDataSource.fields?this.props.config.messageUseDataSource.fields:(0,jimu_core.J3Z)([])}),(0,jimu_core.Yac)(FieldSelector,{className:"w-100 action-select-chooser",placeholder:this.props.intl.formatMessage({id:"frameworkAction_ActionLayerField",defaultMessage:translations_default.A.frameworkAction_ActionLayerField}),useDataSources:(0,jimu_core.J3Z)([null===(_b=this.props.config.actionUseDataSource)||void 0===_b?void 0:_b.asMutable({deep:!0})]),isDataSourceDropDownHidden:!0,onChange:this.onActionFieldSelected,useDropdown:!0,selectedFields:this.props.config.actionUseDataSource&&this.props.config.actionUseDataSource.fields?this.props.config.actionUseDataSource.fields:(0,jimu_core.J3Z)([])})),(0,jimu_core.Yac)(link_combined.W,{autoFlip:!0,className:"flex-none",width:12,height:40,color:theme.ref.palette.neutral[900]})))),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)(Button,{type:"link",disabled:!this.props.config.actionUseDataSource,className:"w-100 d-flex justify-content-start",onClick:this.showSqlExprPopup},(0,jimu_core.Yac)("div",{className:"w-100 text-truncate",style:{textAlign:"start"}},this.props.intl.formatMessage({id:"frameworkAction_MoreConditions",defaultMessage:translations_default.A.frameworkAction_MoreConditions}))),this.props.config.actionUseDataSource&&(0,jimu_core.Yac)(jimu_core.pjH,{useDataSource:this.props.config.actionUseDataSource},(ds=>(0,jimu_core.Yac)(SqlExpressionBuilderPopup,{dataSource:ds,mode:jimu_core.YuP.Simple,isOpen:this.state.isSqlExprShow,toggle:this.toggleSqlExprPopup,expression:this.props.config.sqlExprObj,onChange:sqlExprObj=>{this.onSqlExprBuilderChange(sqlExprObj)},id:"filter-widget-sql-expression-builder-popup"})))),(0,jimu_core.Yac)(SettingRow,null,(0,jimu_core.Yac)("div",{className:"sql-expr-display"},this.props.config.sqlExprObj&&actionUseDataSourceInstance?jimu_core.ZkX.getArcGISSQL(this.props.config.sqlExprObj,actionUseDataSourceInstance).displaySQL:this.props.intl.formatMessage({id:"frameworkAction_SetExpression",defaultMessage:translations_default.A.frameworkAction_SetExpression})))))}}_SelectDataRecordActionSetting.defaultProps={config:(0,jimu_core.J3Z)({messageUseDataSource:null,actionUseDataSource:null,sqlExprObj:null,enabledDataRelationShip:!0})};const select_data_record_action_setting=jimu_core.E_S.connect((state=>({dataSources:state.appStateInBuilder&&state.appStateInBuilder.appConfig&&state.appStateInBuilder.appConfig.dataSources,dataSourcesInfo:state.appStateInBuilder&&state.appStateInBuilder.dataSourcesInfo})))((0,jimu_theme.SL)(_SelectDataRecordActionSetting));try{selectdatarecordactionsetting.displayName="selectdatarecordactionsetting",selectdatarecordactionsetting.__docgenInfo={description:"",displayName:"selectdatarecordactionsetting",props:{actionId:{defaultValue:null,description:"",name:"actionId",required:!0,type:{name:"string"}},widgetId:{defaultValue:null,description:"",name:"widgetId",required:!0,type:{name:"string"}},messageWidgetId:{defaultValue:null,description:"",name:"messageWidgetId",required:!0,type:{name:"string"}},config:{defaultValue:null,description:"",name:"config",required:!1,type:{name:"IMConfig"}},messageType:{defaultValue:null,description:"",name:"messageType",required:!0,type:{name:"enum",value:[{value:'"STRING_SELECTION_CHANGE"'},{value:'"EXTENT_CHANGE"'},{value:'"DATA_RECORDS_SELECTION_CHANGE"'},{value:'"DATA_SOURCE_FILTER_CHANGE"'},{value:'"DATA_RECORD_SET_CHANGE"'},{value:'"DATA_SOURCES_CHANGE"'},{value:'"LOCATION_CHANGE"'},{value:'"SELECT_DATA_RECORD"'},{value:'"BUTTON_CLICK"'},{value:'"VIEW_CHANGE"'}]}},useDataSources:{defaultValue:null,description:"",name:"useDataSources",required:!1,type:{name:"UseDataSource[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"IntlShape"}},onSettingChange:{defaultValue:null,description:"",name:"onSettingChange",required:!0,type:{name:"ActionSettingChangeFunction"}},onDisableDoneBtn:{defaultValue:null,description:"",name:"onDisableDoneBtn",required:!1,type:{name:"(isDisable: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/message-actions/select-data-record-action-setting.tsx#selectdatarecordactionsetting"]={docgenInfo:selectdatarecordactionsetting.__docgenInfo,name:"selectdatarecordactionsetting",path:"../jimu-for-builder/lib/message-actions/select-data-record-action-setting.tsx#selectdatarecordactionsetting"})}catch(__react_docgen_typescript_loader_error){}var builder_locale_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function loadI18nMessage(){return builder_locale_awaiter(this,void 0,void 0,(function*(){const locale=(0,jimu_core.Vp3)().getState().appContext.locale;return yield function loadLocaleMessagesForJimuBuilder(locale,supportedLocales){return builder_locale_awaiter(this,void 0,void 0,(function*(){return(locale=jimu_core.Ruy.getLocaleToLoad(locale,supportedLocales))?yield jimu_core.Ruy.loadLocaleMessages("jimu-for-builder/lib/translations",locale).then((messages=>messages)):Promise.resolve(translations_default.A)}))}(locale,jimu_core.sof).then((messages=>(messages&&(0,jimu_core.Vp3)().dispatch(jimu_core.tRc.i18nMessagesLoaded("jimu-for-builder",messages)),jimu_core.Ruy.resetIntls(),messages)))}))}var dist=__webpack_require__("../node_modules/react-joyride/dist/index.mjs"),lib_translations_default=__webpack_require__("../jimu-ui/lib/translations/default.ts"),modal=__webpack_require__("../jimu-ui/lib/styles/components/modal.ts"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function utils_getMaskPositionCSS(step){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const inCanvasTargetSelector=_getSelector(step);let inCanvasTargetElm,canvasIframeRect,inCanvasTargetElmRect,zoomScale;if(window.jimuConfig.isInBuilder){const currentDocument=step.targetInCanvas?document:window.parent.document;inCanvasTargetElm=currentDocument.querySelector(inCanvasTargetSelector),zoomScale=null!==(_d=null===(_c=null===(_b=null===(_a=(0,jimu_core.Vp3)())||void 0===_a?void 0:_a.getState())||void 0===_b?void 0:_b.appRuntimeInfo)||void 0===_c?void 0:_c.zoomScale)&&void 0!==_d?_d:1;const canvasIframe=currentDocument.documentElement;canvasIframeRect=null==canvasIframe?void 0:canvasIframe.getBoundingClientRect(),inCanvasTargetElmRect=null==inCanvasTargetElm?void 0:inCanvasTargetElm.getBoundingClientRect()}else{const canvasIframe=document.querySelector('iframe[name="_appWindow"]');inCanvasTargetElm=null==canvasIframe?void 0:canvasIframe.contentDocument.querySelector(inCanvasTargetSelector),zoomScale=null!==(_j=null===(_h=null===(_g=null===(_f=null===(_e=(0,jimu_core.Vp3)())||void 0===_e?void 0:_e.getState())||void 0===_f?void 0:_f.appStateInBuilder)||void 0===_g?void 0:_g.appRuntimeInfo)||void 0===_h?void 0:_h.zoomScale)&&void 0!==_j?_j:1,canvasIframeRect=null==canvasIframe?void 0:canvasIframe.getBoundingClientRect(),inCanvasTargetElmRect=null==inCanvasTargetElm?void 0:inCanvasTargetElm.getBoundingClientRect()}return inCanvasTargetElm?inCanvasTargetElmRect?{position:"fixed",zIndex:-1,pointerEvents:step.spotlightClicks?"none":void 0,left:inCanvasTargetElmRect.left*zoomScale+canvasIframeRect.left,top:inCanvasTargetElmRect.top*zoomScale+canvasIframeRect.top,width:inCanvasTargetElmRect.width*zoomScale,height:inCanvasTargetElmRect.height*zoomScale}:{}:null}function utils_getAppTargetElement(step){const inCanvasTargetSelector=_getSelector(step);let inCanvasTargetElm;if(window.jimuConfig.isInBuilder)inCanvasTargetElm=step.targetInCanvas?document.querySelector(inCanvasTargetSelector):window.parent.document.querySelector(inCanvasTargetSelector);else{const canvasIframe=document.querySelector('iframe[name="_appWindow"]');inCanvasTargetElm=null==canvasIframe?void 0:canvasIframe.contentDocument.querySelector(inCanvasTargetSelector)}return inCanvasTargetElm||null}function utils_getTargetSelector(step){return step.targetInCanvas?'[data-component-id="guide-mask"]':_getSelector(step)}function utils_isInjectedStep(step){return!!step&&Object.prototype.hasOwnProperty.call(step,"injectedGuide")}function _getSelector(step){var _a,_b;return null!==(_b=null===(_a=step.requiredAction)||void 0===_a?void 0:_a.target)&&void 0!==_b?_b:step.target}function bidi(s,isRTL){var _a,_b;if(!s)return s;if(isRTL=null!=isRTL?isRTL:null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appContext)||void 0===_b?void 0:_b.isRTL){if(s.includes("left"))return s.replace("left","right");if(s.includes("right"))return s.replace("right","left")}return s}try{utils_getMaskPositionCSS.displayName="getMaskPositionCSS",utils_getMaskPositionCSS.__docgenInfo={description:"",displayName:"getMaskPositionCSS",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/utils/index.tsx#getMaskPositionCSS"]={docgenInfo:utils_getMaskPositionCSS.__docgenInfo,name:"getMaskPositionCSS",path:"../jimu-ui/basic/lib/guide/utils/index.tsx#getMaskPositionCSS"})}catch(__react_docgen_typescript_loader_error){}try{utils_getAppTargetElement.displayName="getAppTargetElement",utils_getAppTargetElement.__docgenInfo={description:"",displayName:"getAppTargetElement",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/utils/index.tsx#getAppTargetElement"]={docgenInfo:utils_getAppTargetElement.__docgenInfo,name:"getAppTargetElement",path:"../jimu-ui/basic/lib/guide/utils/index.tsx#getAppTargetElement"})}catch(__react_docgen_typescript_loader_error){}try{utils_getTargetSelector.displayName="getTargetSelector",utils_getTargetSelector.__docgenInfo={description:"",displayName:"getTargetSelector",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/utils/index.tsx#getTargetSelector"]={docgenInfo:utils_getTargetSelector.__docgenInfo,name:"getTargetSelector",path:"../jimu-ui/basic/lib/guide/utils/index.tsx#getTargetSelector"})}catch(__react_docgen_typescript_loader_error){}try{utils_isInjectedStep.displayName="isInjectedStep",utils_isInjectedStep.__docgenInfo={description:"",displayName:"isInjectedStep",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}},steps:{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"Step[]"}},injectedGuide:{defaultValue:null,description:'The name of the injected guide.\nAvailable injectable guides are: "insert-widget" and "ds-selection".',name:"injectedGuide",required:!0,type:{name:"string"}},widgetName:{defaultValue:null,description:"The name of the widget that is passed to the injected guide.",name:"widgetName",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/utils/index.tsx#isInjectedStep"]={docgenInfo:utils_isInjectedStep.__docgenInfo,name:"isInjectedStep",path:"../jimu-ui/basic/lib/guide/utils/index.tsx#isInjectedStep"})}catch(__react_docgen_typescript_loader_error){}const guideTourDialogVars_bg="#fff!important",guideTourDialogVars_radius="4px!important",guideTourDialogVars_pointer={bg:"#fff!important",borderColor:"#5f5fff!important"},guideTourDialogVars_link={color:"#5f5fff!important",hoverColor:"#4949ff!important"},guideTourDialogVars_primaryButton={default:{color:"#fff!important",bg:"#5f5fff!important"},hover:{color:"#fff!important",bg:"#4949ff!important"}},guideTourDialogVars_secondaryButton={default:{color:"#6a6a6a!important",borderColor:"#6a6a6a!important"},hover:{color:"#fff!important",bg:"#5f5fff!important"}},guideTourDialogVars_tertiaryButton={default:{color:"#a8a8a8!important"},hover:{color:"#6a6a6a!important"}},useStyle=props=>{var _a;const theme=props.theme,modalVars=null===(_a=null==theme?void 0:theme.components)||void 0===_a?void 0:_a.modal;return jimu_core.q_G.useMemo((()=>jimu_core.AHW`
      min-width: 360px;
      ${(0,modal.C)(props)}
      color: #333;
      a {
        color: ${guideTourDialogVars_link.color};
        &:hover {
          color: ${guideTourDialogVars_link.hoverColor};
        }
      }
      h1, h2, h3, h4, h5, h6 {
        color: #333;
      }
      .modal-content {
        background-color: ${guideTourDialogVars_bg};
        border: 0;
        border-radius: ${guideTourDialogVars_radius};
        max-width: ${460}px;
      }
      .modal-body {
        padding: ${jimu_core.PLL.rem(20)} ${jimu_core.PLL.rem(20)} 0 ${jimu_core.PLL.rem(20)};
      }
      .modal-footer {
        padding: ${jimu_core.PLL.rem(20)};
        padding-top: 0;
        .modal-footer--spacer {
          flex: 1;
        }
        .btn-secondary,
        .btn-tertiary {
          min-width: auto;
        }
        .btn-skip{
          padding-left: 0;
        }
      }
      .guide--content-horizontal {
        > div + div {
          margin-left: 1.5rem;
        }
        .guide--text-wrapper {
          h3 {
            margin-bottom: 1.5rem;
          }
        }
        .guide--img-wrapper {
        margin-bottom: 0rem;
        img {
          display: block;
          &.border {
            border-color: #e3e3e3 !important;
          }
          &.flip {
            transform: scaleX(-1);
          }
        }
      }
      .guide--img-center {
        margin-bottom: 0;
        img {
          margin: 0 auto;
        }
      }
      }
      .guide--img-wrapper {
        margin-bottom: 1rem;
        img {
          display: block;
          &.border {
            border-color: #e3e3e3 !important;
          }
          &.flip {
            transform: scaleX(-1);
          }
        }
      }
      .guide--img-center {
        margin-bottom: 1rem;
        img {
          margin: 0 auto;
        }
      }
      .guide--img-fill {
        margin: -30px -30px ${modalVars.innerPadding};
        img {
          width: 100%;
          height: auto;
        }
      }
      .guide--text-wrapper {
        overflow-y: auto;
        overflow-x: hidden;
        word-break: break-word;
        h3 {
          font-weight: 500;
          font-size: 1rem;
        }
      }
      .btn {
        padding-left: 1rem;
        padding-right: 1rem;
        &:disabled {
          opacity: .25;
          pointer-events: none;
        }
      }
      .btn-primary {
        color: ${guideTourDialogVars_primaryButton.default.color};
        background-color: ${guideTourDialogVars_primaryButton.default.bg};
        border: 1px solid transparent;
        &:hover {
          color: ${guideTourDialogVars_primaryButton.hover.color};
          background-color: ${guideTourDialogVars_primaryButton.hover.bg};
          border: 1px solid transparent;
        }
      }
      .btn-secondary {
        color: ${guideTourDialogVars_secondaryButton.default.color};
        border-color: ${guideTourDialogVars_secondaryButton.default.borderColor};
        &:hover {
          color: ${guideTourDialogVars_secondaryButton.hover.color};
          background-color: ${guideTourDialogVars_secondaryButton.hover.bg};
          border-color: ${guideTourDialogVars_secondaryButton.hover.bg};
        }
      }
      .btn-tertiary {
        color: ${guideTourDialogVars_tertiaryButton.default.color};
        &:hover {
          color: ${guideTourDialogVars_tertiaryButton.hover.color};
        }
      }
      .guide--splash {
        .guide--text-wrapper {
          h3 {
            font-size: 1.5rem;
          }
          p {
            font-size: 1.125rem;
            line-height: 1.5;
          }
        }
      }
      @media (max-width: 1200px) {
        .modal-content {
          max-width: ${360}px;
        }
        .guide--content:not(.guide--content-horizontal) {
          .guide--img-wrapper img {
            width: 100%;
            height: auto;
          }
        }
      }
    `),[props,modalVars])},StepDialogComponent=props=>{var _a,_b;const{continuous,index,isLastStep,backProps,primaryProps,skipProps,tooltipProps,theme,disabled,isStepInjected,footerNav}=props,step=props.step,MESSAGES=step.locale,dialogWidth=null===(_b=null===(_a=step.styles)||void 0===_a?void 0:_a.options)||void 0===_b?void 0:_b.width,nextLabel=MESSAGES[continuous?isLastStep?"last":"splash"===step.type?"start":"next":"next"];return(0,jimu_core.Yac)("div",{className:"guide--custom-modal",css:useStyle({theme})},(0,jimu_core.Yac)("div",{className:"modal-content "+(step.type?"guide--splash":""),style:{maxWidth:null!=dialogWidth?dialogWidth:void 0}},(0,jimu_core.Yac)("div",Object.assign({className:"modal-body"},tooltipProps),step.content),!step.hideFooter&&(0,jimu_core.Yac)("div",{className:"modal-footer"},footerNav,(isStepInjected||!isLastStep)&&(0,jimu_core.Yac)(jimu_core.q_G.Fragment,null,(0,jimu_core.Yac)(jimu_ui.Button,Object.assign({variant:"text",disableHoverEffect:!0,disableRipple:!0},skipProps,{className:"rounded-pill text-truncate btn-skip",type:"tertiary",title:MESSAGES.skip,"aria-label":MESSAGES.skip}),MESSAGES.skip),(0,jimu_core.Yac)("div",{className:"modal-footer--spacer"})),index>0&&!step.hideBackButton&&(0,jimu_core.Yac)(jimu_ui.Button,Object.assign({variant:"text",disableHoverEffect:!0,disableRipple:!0},backProps,{className:"rounded-pill text-truncate",type:"secondary",title:MESSAGES.back,"aria-label":MESSAGES.back,disabled}),MESSAGES.back),(0,jimu_core.Yac)(jimu_ui.Button,Object.assign({variant:"text",disableHoverEffect:!0,disableRipple:!0},primaryProps,{autoFocus:!0,className:"rounded-pill text-truncate",title:nextLabel,"aria-label":nextLabel,type:"primary",disabled:disabled||step.disableNextButton}),nextLabel))))},StepDialog=(0,jimu_theme.SL)(StepDialogComponent);try{StepDialogComponent.displayName="StepDialogComponent",StepDialogComponent.__docgenInfo={description:"",displayName:"StepDialogComponent",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"IMThemeVariables"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},isStepInjected:{defaultValue:null,description:"",name:"isStepInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"",name:"footerNav",required:!0,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/components/core/step-dialog/index.tsx#StepDialogComponent"]={docgenInfo:StepDialogComponent.__docgenInfo,name:"StepDialogComponent",path:"../jimu-ui/basic/lib/guide/components/core/step-dialog/index.tsx#StepDialogComponent"})}catch(__react_docgen_typescript_loader_error){}try{StepDialog.displayName="StepDialog",StepDialog.__docgenInfo={description:"",displayName:"StepDialog",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"",name:"footerNav",required:!0,type:{name:"string | Element"}},isStepInjected:{defaultValue:null,description:"",name:"isStepInjected",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"IMThemeVariables"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/components/core/step-dialog/index.tsx#StepDialog"]={docgenInfo:StepDialog.__docgenInfo,name:"StepDialog",path:"../jimu-ui/basic/lib/guide/components/core/step-dialog/index.tsx#StepDialog"})}catch(__react_docgen_typescript_loader_error){}const STATUS=Object.assign(Object.assign({},dist.XQ),{INJECTED:"injected"}),{useState,useEffect}=jimu_core.q_G,JOYRIDE_RETRY_TIMES_retryInterval=200,JOYRIDE_RETRY_TIMES_retryFailCount=6e4,JOYRIDE_STYLES={options:{zIndex:1e4},spotlight:{boxShadow:"inset 0 0 0 2px rgba(255,255,255,0.5)"}},i18nMessage=(id,intl)=>intl.formatMessage({id,defaultMessage:lib_translations_default.A[id]}),guide_GuideComponent=jimu_core.E_S.connect((state=>({})))((0,jimu_core.j4T)((props=>{const _currentStep=jimu_core.q_G.useRef(null),{disabled,isInjected,intl,footerNav}=props,[steps,setSteps]=useState([]),[run,setRun]=useState(!1),[stepIndex,setStepIndex]=useState(0),[conditionalStepIndexes,setConditionalStepIndexes]=useState({}),[maskStyles,setMaskStyles]=useState({}),mockMask=jimu_core.q_G.createRef(),_retryTimer=jimu_core.q_G.useRef(null),_retryTimerCount=jimu_core.q_G.useRef(0);const getStepData=index=>{var _a;const tempSteps=props.steps;if(tempSteps[index])return Object.prototype.hasOwnProperty.call(tempSteps[index],"steps")?tempSteps[index].steps[null!==(_a=null==conditionalStepIndexes?void 0:conditionalStepIndexes[index])&&void 0!==_a?_a:0]:tempSteps[index]},retryStep=(targetIndex,targetSelector,isInCanvas)=>{var _a,_b;let nextTarget=null;if(setRun(!1),window.jimuConfig.isInBuilder)nextTarget=isInCanvas?document.querySelector(targetSelector):window.parent.document.querySelector(targetSelector);else if(isInCanvas){const canvasIframe=document.querySelector('iframe[name="_appWindow"]'),inCanvasTargetSelector=targetSelector;nextTarget=null===(_a=null==canvasIframe?void 0:canvasIframe.contentDocument)||void 0===_a?void 0:_a.querySelector(inCanvasTargetSelector)}else nextTarget=document.querySelector(targetSelector);if(nextTarget){_retryTimerCount.current=0,clearTimeout(_retryTimer.current);const delayTimeout=setTimeout((()=>{setStepIndex(targetIndex),setRun(!0),clearTimeout(delayTimeout)}),200)}else _retryTimerCount.current+=JOYRIDE_RETRY_TIMES_retryInterval,_retryTimerCount.current>=JOYRIDE_RETRY_TIMES_retryFailCount?(console.error(new Error("Guide Tour component: Could not be able to find the next step to display for the guide.")),_retryTimerCount.current=0,clearTimeout(_retryTimer.current),setRun(!1),null===(_b=null==props?void 0:props.onStepChange)||void 0===_b||_b.call(props,{status:STATUS.ERROR,index:targetIndex,nextIndex:null,event:dist.qY.TARGET_NOT_FOUND,isInjected})):_retryTimer.current=setTimeout((()=>{retryStep(targetIndex,targetSelector,isInCanvas)}),JOYRIDE_RETRY_TIMES_retryInterval)},initResizeWhenTargetInCanvas=e=>{var _a;if(null===(_a=_currentStep.current)||void 0===_a?void 0:_a.targetInCanvas){const updatedMaskStyles=utils_getMaskPositionCSS(_currentStep.current);setMaskStyles(updatedMaskStyles)}};useEffect((()=>{const debounceInitResizeWhenTargetInCanvas=jimu_core.CM0.debounce(initResizeWhenTargetInCanvas,100);return window.addEventListener("scroll",debounceInitResizeWhenTargetInCanvas,!0),window.addEventListener("resize",debounceInitResizeWhenTargetInCanvas),()=>{window.removeEventListener("resize",debounceInitResizeWhenTargetInCanvas,!0),window.removeEventListener("scroll",debounceInitResizeWhenTargetInCanvas)}})),useEffect((()=>{setStepIndex(props.stepIndex)}),[props.stepIndex]),useEffect((()=>{setSteps(props.steps)}),[props.steps]),useEffect((()=>{setRun(props.run)}),[props.run]),useEffect((()=>{setConditionalStepIndexes(props.conditionalStepIndexes)}),[props.conditionalStepIndexes]);const mappedSteps=jimu_core.q_G.useMemo((()=>function mapStepProps(steps,condStepIndexes){return steps.map(((step,index)=>{var _a,_b,_c,_d;let tempStep;const isRTL=null===(_b=null===(_a=(0,jimu_core.Vp3)().getState())||void 0===_a?void 0:_a.appContext)||void 0===_b?void 0:_b.isRTL;if(utils_isInjectedStep(step))return{target:`injectedWidget ${step.injectedGuide}`,content:null};tempStep=Object.prototype.hasOwnProperty.call(step,"steps")&&(null===(_c=step.steps)||void 0===_c?void 0:_c.length)>0?step.steps[null!==(_d=null==condStepIndexes?void 0:condStepIndexes[index])&&void 0!==_d?_d:0]:step;const{title,content,width,requiredAction,target,spotlightClicks,targetInCanvas,placement}=tempStep,otherProps=__rest(tempStep,["title","content","width","requiredAction","target","spotlightClicks","targetInCanvas","placement"]);let contentImage;if(null==content?void 0:content.image){const _e=content.image,{position,border,src,autoFlip}=_e,otherImageProps=__rest(_e,["position","border","src","autoFlip"]);contentImage=jimu_core.q_G.createElement("div",{className:`guide--img-wrapper guide--img-${null!=position?position:"center"}`},jimu_core.q_G.createElement("img",Object.assign({className:`${border?"border":""}${isRTL&&autoFlip?" flip":""}`,src:jimu_core.v6q.isAbsoluteUrl(src)?src:`${jimu_core.v6q.getFixedRootPath()}${src}`},otherImageProps)))}const contentTitle=title&&jimu_core.q_G.createElement("h3",null,title);return Object.assign({target:targetInCanvas?'[data-component-id="guide-mask"]':target,content:jimu_core.q_G.createElement("div",{className:"guide--content "+("horizontal"===(null==content?void 0:content.direction)?"d-flex guide--content-horizontal align-items-center":"")},contentImage,jimu_core.q_G.createElement("div",{className:"guide--text-wrapper"},contentTitle,(content=>{if(!content)return null;if(content.htm)try{return jimu_core.q_G.createElement("div",{dangerouslySetInnerHTML:{__html:content.htm}})}catch(error){return console.error("Error parsing HTML string:",error),null}return content.text||content?jimu_core.q_G.createElement("p",null,content.text||content):void 0})(content))),styles:{options:{width}},spotlightClicks:null!=spotlightClicks?spotlightClicks:!!requiredAction,disableBeacon:0===index,requiredAction,targetInCanvas,placement:isRTL?bidi(placement,isRTL):placement},otherProps)}))}(steps,conditionalStepIndexes)),[steps,conditionalStepIndexes]),MESSAGES=jimu_core.q_G.useMemo((()=>({back:i18nMessage("previous",intl),close:i18nMessage("closeTour",intl),next:i18nMessage("next",intl),skip:i18nMessage("skipTour",intl),last:i18nMessage(isInjected?"next":"finishTour",intl),start:i18nMessage("startTour",intl),open:i18nMessage("openTour",intl),actionRequired:i18nMessage("actionRequired",intl),errorCannotFindNextStep:i18nMessage("errorCannotFindNextStep",intl)})),[isInjected,intl]),CustomDialog=jimu_core.q_G.memo((function(props){return(0,jimu_core.Yac)(StepDialog,Object.assign({disabled,isStepInjected:isInjected,footerNav},props))})),classes=(0,jimu_core.xWm)("jimu-guide",props.className);return(0,jimu_core.Yac)("div",{className:classes},run&&(0,jimu_core.Yac)("div",{"aria-hidden":"true","data-component-id":"guide-mask",style:maskStyles,ref:mockMask}),(0,jimu_core.Yac)(dist.Ay,{run,stepIndex,steps:mappedSteps,tooltipComponent:CustomDialog,styles:JOYRIDE_STYLES,callback:data=>{var _a,_b,_c,_d;const{action,index,type,status:stepStatus}=data,nextStepIndex=index+(action===dist.kl.PREV?-1:1),currentStep=getStepData(index),nextStep=getStepData(nextStepIndex),targetSelector=utils_getTargetSelector(currentStep);let targetElm;if(targetElm=window.jimuConfig.isInBuilder||currentStep.targetInCanvas?utils_getAppTargetElement(currentStep):document.querySelector(targetSelector),_currentStep.current=currentStep,type===dist.qY.TOUR_END)return setRun(!1),setStepIndex(0),null==targetElm||targetElm.removeEventListener("click",undefined),void(null===(_a=null==props?void 0:props.onStepChange)||void 0===_a||_a.call(props,{status:stepStatus,index,nextIndex:nextStepIndex,event:type,isInjected,step:currentStep}));if(type===dist.qY.TOUR_START&&utils_isInjectedStep(currentStep))return setRun(!1),void(null===(_b=null==props?void 0:props.onStepChange)||void 0===_b||_b.call(props,{status:STATUS.INJECTED,index:stepIndex,nextIndex:stepIndex+1,isInjected:!0,step:currentStep}));if(type===dist.qY.STEP_AFTER&&utils_isInjectedStep(nextStep))return setRun(!1),void(null===(_c=null==props?void 0:props.onStepChange)||void 0===_c||_c.call(props,{status:STATUS.INJECTED,index:nextStepIndex,event:type,isInjected,step:nextStep}));if(type!==dist.qY.STEP_AFTER&&run&&!utils_isInjectedStep(currentStep))if(currentStep.targetInCanvas){const updatedMaskStyles=utils_getMaskPositionCSS(currentStep);if(!updatedMaskStyles)return void retryStep(index,currentStep.target,!0);setMaskStyles(updatedMaskStyles)}else if(!targetElm)return void retryStep(index,targetSelector);switch(type){case dist.qY.STEP_AFTER:setStepIndex(nextStepIndex);break;case dist.qY.TARGET_NOT_FOUND:setStepIndex(index-1);break;case dist.qY.TOOLTIP:if(currentStep.requiredAction){const type=currentStep.requiredAction.type,eventHandler=e=>{props.onActionTriggered?props.onActionTriggered(e,currentStep,index):setStepIndex(nextStepIndex)};targetElm&&(targetElm.removeEventListener(type,eventHandler),targetElm.addEventListener(type,eventHandler))}}null===(_d=null==props?void 0:props.onStepChange)||void 0===_d||_d.call(props,{status:stepStatus,index,nextIndex:nextStepIndex,event:type,isInjected,step:currentStep})},continuous:!0,showSkipButton:!0,showProgress:!1,spotlightPadding:0,disableOverlayClose:!0,disableScrolling:!0,disableScrollParentFix:!0,hideBackButton:!0,locale:MESSAGES}),(0,jimu_core.Yac)(jimu_theme.mL,{styles:jimu_core.q_G.useMemo((()=>jimu_core.AHW`
      .react-joyride__overlay {
        cursor: default !important;
      }
      .__floater {
        filter: none !important;
        .__floater__arrow {
          > span {
            &::before {
              content: ' ';
              display: block;
              width: 24px;
              height: 24px;
              background-color: ${guideTourDialogVars_pointer.bg};
              border: 2px solid ${guideTourDialogVars_pointer.borderColor};
              border-radius: 50%;
              position: relative;
              z-index: 1;
            }
            &::after {
              content: ' ';
              display: block;
              background: #e3e3e3;
              position: absolute;
              z-index: 0;
            }
            svg {
              display: none;
            }
          }
        }
        &[x-placement^="bottom"] {
          padding-top: 36px !important;
          .__floater__arrow {
            margin-top: -12px;
            > span {
              &::after {
                width: 4px;
                height: 24px;
                top: 24px;
                left: 10px;
              }
            }
          }
        }
        &[x-placement^="right"] {
          ${bidi("padding-left")}: 36px !important;
          .__floater__arrow {
            ${bidi("margin-left")}: -12px;
            > span {
              ${bidi("left")}: 0;
              &::after {
                width: 24px;
                height: 4px;
                top: 10px;
                ${bidi("left")}: 24px;
              }
            }
          }
        }
        &[x-placement^="left"] {
          ${bidi("padding-right")}: 36px !important;
          .__floater__arrow {
            ${bidi("margin-right")}: -12px;
            > span {
              &::after {
                width: 24px;
                height: 4px;
                top: 10px;
                ${bidi("right")}: 24px;
              }
            }
          }
        }
        &[x-placement^="top"] {
          padding-bottom: 36px !important;
          .__floater__arrow {
            margin-bottom: -12px;
            > span {
              &::after {
                width: 4px;
                height: 24px;
                bottom: 24px;
                left: 10px;
              }
            }
          }
        }
      }
    `),[])}))})));try{guide_GuideComponent.displayName="GuideComponent",guide_GuideComponent.__docgenInfo={description:"",displayName:"GuideComponent",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/components/core/guide.tsx#GuideComponent"]={docgenInfo:guide_GuideComponent.__docgenInfo,name:"GuideComponent",path:"../jimu-ui/basic/lib/guide/components/core/guide.tsx#GuideComponent"})}catch(__react_docgen_typescript_loader_error){}const guide_renderer_GuideRenderer=jimu_core.E_S.connect((state=>({isBusy:state.appRuntimeInfo.isBusy,shouldCheckGuideDisplay:state.shouldCheckGuideDisplay,guideId:state.guideId,locale:state.appContext.locale,appI18nMessages:state.appI18nMessages})))((function GuideRendererComponent(props){const{isBusy,guideId,shouldCheckGuideDisplay}=props,[steps,setSteps]=(0,react.useState)([]),[stepIndex,setStepIndex]=(0,react.useState)(0),[run,setRun]=(0,react.useState)(!1),[GuideModule,setGuideModule]=(0,react.useState)(null),[params,setParams]=(0,react.useState)(null),[guideStack,setGuideStack]=(0,react.useState)([]),guideManager=jimu_core.YQG.getInstance(),[guide,setGuide]=(0,react.useState)(null),currentStepRef=(0,react.useRef)(null),currentRunRef=(0,react.useRef)(null),reset=()=>{setSteps([]),setRun(!1),setStepIndex(0),setGuideModule(null),setParams(null),setGuideStack([]),setGuide(null),currentStepRef.current=null,currentRunRef.current=null};(0,react.useEffect)((()=>{var _a,_b;if(guideId){const guide=guideManager.getGuideById(guideId);setGuide(guide),setSteps(guide.steps),setGuideModule(guide.module),guide.isInjected?(null===(_a=guideStack[guideStack.length-1])||void 0===_a?void 0:_a.guide.id)!==guide.id?setStepIndex(0):(setStepIndex(guideStack[guideStack.length-1].stepIndex),setGuideStack(guideStack.slice(0,guideStack.length-1))):guideStack.length>0?(setStepIndex(null===(_b=guideStack[guideStack.length-1])||void 0===_b?void 0:_b.stepIndex),setGuideStack(guideStack.slice(0,guideStack.length-1))):(setStepIndex(0),addEvents()),setRun(!0)}else reset(),removeEvents()}),[guideId]);const handleDocumentEvents=(0,react.useCallback)((event=>{var _a,_b,_c,_d;if(!1===currentRunRef.current)return;const target=event.target;if((null===(_a=document.querySelector('[id^="react-joyride-step-"] .__floater'))||void 0===_a?void 0:_a.contains(target))||(null===(_b=document.querySelector("div.react-joyride__overlay"))||void 0===_b?void 0:_b.contains(target))){if(!event.target.closest(".guide--custom-modal .modal-footer *")){if(!(null===(_c=currentStepRef.current)||void 0===_c?void 0:_c.requiredAction)&&!(null===(_d=currentStepRef.current)||void 0===_d?void 0:_d.spotlightClicks))return event.stopPropagation(),void event.preventDefault();enableHandleEvent(event)||(event.preventDefault(),event.stopPropagation())}}else enableHandleEvent(event)||(event.stopPropagation(),event.preventDefault())}),[]),enableHandleEvent=event=>{const step=currentStepRef.current;if((null==step?void 0:step.requiredAction)||(null==step?void 0:step.spotlightClicks)){let targetElm;return targetElm=window.jimuConfig.isInBuilder||step.targetInCanvas?utils_getAppTargetElement(step):document.querySelector(step.target),!!targetElm&&((targetElm,event,isInCanvas)=>{var _a,_b;const rect=targetElm.getBoundingClientRect();if(isInCanvas){const iframeRect=null===(_b=null===(_a=window.document)||void 0===_a?void 0:_a.body)||void 0===_b?void 0:_b.getBoundingClientRect();return!!iframeRect&&event.clientX>=iframeRect.left+rect.left&&event.clientX<=iframeRect.left+rect.right&&event.clientY>=iframeRect.top+rect.top&&event.clientY<=iframeRect.top+rect.bottom}return event.clientX>=rect.left&&event.clientX<=rect.right&&event.clientY>=rect.top&&event.clientY<=rect.bottom})(targetElm,event,step.targetInCanvas)}return!1},events=["mousedown","mouseup","click","keydown","keyup"],addEvents=()=>{events.forEach((event=>{var _a;document.addEventListener(event,handleDocumentEvents,!0),null===(_a=window._appWindow)||void 0===_a||_a.document.addEventListener(event,handleDocumentEvents,!0)}))},removeEvents=()=>{events.forEach((event=>{var _a;document.removeEventListener(event,handleDocumentEvents,!0),null===(_a=window._appWindow)||void 0===_a||_a.document.removeEventListener(event,handleDocumentEvents,!0)}))},allMessages=Object.assign({},props.appI18nMessages,(null==guide?void 0:guide.messages)||{});return!isBusy&&run?(0,jimu_core.Yac)("div",{className:"widget-guide"},guideId&&(0,jimu_core.Yac)(jimu_core.Dk7,{locale:props.locale,defaultLocale:props.locale,messages:allMessages},(0,jimu_core.Yac)(GuideModule,{run,steps,stepIndex,params,onStepChange:({status,index,isInjected,step,run})=>{if(status===STATUS.FINISHED||status===STATUS.SKIPPED||status===STATUS.ERROR){if(isInjected&&(status===STATUS.FINISHED||status===STATUS.ERROR)&&guideStack.length>0){const stack=guideStack[guideStack.length-1];return void guideManager.startGuide(stack.guide,stack.shouldCheckGuideDisplay)}guideStack.length>0?guideStack[guideStack.length-1].shouldCheckGuideDisplay&&guideManager.updateGuideViewedStatus(guideStack[guideStack.length-1].guide):shouldCheckGuideDisplay&&guideManager.updateGuideViewedStatus(guide),reset(),guideManager.stopGuide()}else status===STATUS.INJECTED&&(setGuideStack([...guideStack,{guide,stepIndex:index+1,shouldCheckGuideDisplay}]),guideManager.startGuide({id:step.injectedGuide,isInjected:!0,type:jimu_core.aOJ.Program,level:jimu_core.a8_.Common}));(null==step?void 0:step.params)&&setParams(step.params),currentStepRef.current=step,currentRunRef.current=run}}))):""}));try{guide_renderer_GuideRenderer.displayName="GuideRenderer",guide_renderer_GuideRenderer.__docgenInfo={description:"",displayName:"GuideRenderer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/components/guide-renderer.tsx#GuideRenderer"]={docgenInfo:guide_renderer_GuideRenderer.__docgenInfo,name:"GuideRenderer",path:"../jimu-ui/basic/lib/guide/components/guide-renderer.tsx#GuideRenderer"})}catch(__react_docgen_typescript_loader_error){}try{GuideComponent.displayName="GuideComponent",GuideComponent.__docgenInfo={description:"",displayName:"GuideComponent",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#GuideComponent"]={docgenInfo:GuideComponent.__docgenInfo,name:"GuideComponent",path:"../jimu-ui/basic/lib/guide/index.tsx#GuideComponent"})}catch(__react_docgen_typescript_loader_error){}try{GuideRenderer.displayName="GuideRenderer",GuideRenderer.__docgenInfo={description:"",displayName:"GuideRenderer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#GuideRenderer"]={docgenInfo:GuideRenderer.__docgenInfo,name:"GuideRenderer",path:"../jimu-ui/basic/lib/guide/index.tsx#GuideRenderer"})}catch(__react_docgen_typescript_loader_error){}try{getMaskPositionCSS.displayName="getMaskPositionCSS",getMaskPositionCSS.__docgenInfo={description:"",displayName:"getMaskPositionCSS",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#getMaskPositionCSS"]={docgenInfo:getMaskPositionCSS.__docgenInfo,name:"getMaskPositionCSS",path:"../jimu-ui/basic/lib/guide/index.tsx#getMaskPositionCSS"})}catch(__react_docgen_typescript_loader_error){}try{getAppTargetElement.displayName="getAppTargetElement",getAppTargetElement.__docgenInfo={description:"",displayName:"getAppTargetElement",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#getAppTargetElement"]={docgenInfo:getAppTargetElement.__docgenInfo,name:"getAppTargetElement",path:"../jimu-ui/basic/lib/guide/index.tsx#getAppTargetElement"})}catch(__react_docgen_typescript_loader_error){}try{getTargetSelector.displayName="getTargetSelector",getTargetSelector.__docgenInfo={description:"",displayName:"getTargetSelector",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#getTargetSelector"]={docgenInfo:getTargetSelector.__docgenInfo,name:"getTargetSelector",path:"../jimu-ui/basic/lib/guide/index.tsx#getTargetSelector"})}catch(__react_docgen_typescript_loader_error){}try{isInjectedStep.displayName="isInjectedStep",isInjectedStep.__docgenInfo={description:"",displayName:"isInjectedStep",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}},steps:{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"Step[]"}},injectedGuide:{defaultValue:null,description:'The name of the injected guide.\nAvailable injectable guides are: "insert-widget" and "ds-selection".',name:"injectedGuide",required:!0,type:{name:"string"}},widgetName:{defaultValue:null,description:"The name of the widget that is passed to the injected guide.",name:"widgetName",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/lib/guide/index.tsx#isInjectedStep"]={docgenInfo:isInjectedStep.__docgenInfo,name:"isInjectedStep",path:"../jimu-ui/basic/lib/guide/index.tsx#isInjectedStep"})}catch(__react_docgen_typescript_loader_error){}try{GuideComponent.displayName="GuideComponent",GuideComponent.__docgenInfo={description:"",displayName:"GuideComponent",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#GuideComponent"]={docgenInfo:GuideComponent.__docgenInfo,name:"GuideComponent",path:"../jimu-ui/basic/guide.tsx#GuideComponent"})}catch(__react_docgen_typescript_loader_error){}try{GuideRenderer.displayName="GuideRenderer",GuideRenderer.__docgenInfo={description:"",displayName:"GuideRenderer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#GuideRenderer"]={docgenInfo:GuideRenderer.__docgenInfo,name:"GuideRenderer",path:"../jimu-ui/basic/guide.tsx#GuideRenderer"})}catch(__react_docgen_typescript_loader_error){}try{getMaskPositionCSS.displayName="getMaskPositionCSS",getMaskPositionCSS.__docgenInfo={description:"",displayName:"getMaskPositionCSS",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#getMaskPositionCSS"]={docgenInfo:getMaskPositionCSS.__docgenInfo,name:"getMaskPositionCSS",path:"../jimu-ui/basic/guide.tsx#getMaskPositionCSS"})}catch(__react_docgen_typescript_loader_error){}try{getAppTargetElement.displayName="getAppTargetElement",getAppTargetElement.__docgenInfo={description:"",displayName:"getAppTargetElement",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#getAppTargetElement"]={docgenInfo:getAppTargetElement.__docgenInfo,name:"getAppTargetElement",path:"../jimu-ui/basic/guide.tsx#getAppTargetElement"})}catch(__react_docgen_typescript_loader_error){}try{getTargetSelector.displayName="getTargetSelector",getTargetSelector.__docgenInfo={description:"",displayName:"getTargetSelector",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#getTargetSelector"]={docgenInfo:getTargetSelector.__docgenInfo,name:"getTargetSelector",path:"../jimu-ui/basic/guide.tsx#getTargetSelector"})}catch(__react_docgen_typescript_loader_error){}try{isInjectedStep.displayName="isInjectedStep",isInjectedStep.__docgenInfo={description:"",displayName:"isInjectedStep",props:{target:{defaultValue:null,description:"The target for the step. It needs to be a CSS selector.",name:"target",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The step tooltip's title.",name:"title",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"The step tooltip's content.\nText, image, or both can be added.",name:"content",required:!0,type:{name:'{ text?: string; htm?: string; image?: { src: string; alt?: string; width?: string | number; height?: string | number; position?: "fill" | "center"; border?: boolean; autoFlip?: boolean; }; direction?: "vertical" | "horizontal"; }'}},placement:{defaultValue:null,description:"the placement of the tooltip.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},width:{defaultValue:null,description:"the default width of the tooltip.",name:"width",required:!1,type:{name:"string | number"}},hideFooter:{defaultValue:null,description:"hide the footer section in the tooltip.",name:"hideFooter",required:!1,type:{name:"boolean"}},spotlightPadding:{defaultValue:null,description:"The padding of the spotlight.",name:"spotlightPadding",required:!1,type:{name:"number"}},spotlightClicks:{defaultValue:null,description:"Allow mouse and touch events thru the spotlight.",name:"spotlightClicks",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:'"step"'},description:'The type of the step.\n"splash": the introductive dialog in a guide that is centered in the middle of the screen.\n"step": the default step type.',name:"type",required:!1,type:{name:"enum",value:[{value:'"step"'},{value:'"splash"'}]}},requiredAction:{defaultValue:null,description:'Requires user to perform a specific action in order to move to the next step.\nIf defined, the "Next" button is disabled in step\'s tooltip, which forces the guide\nto be controlled.',name:"requiredAction",required:!1,type:{name:'{ type: "input" | "custom" | "focus" | "click" | "hover" | "blur" | "change" | "dblclick"; target?: string; }'}},targetInCanvas:{defaultValue:null,description:"By default, the target is found in the current window. If this property is set to `true`, the target will be found within the app's iframe.",name:"targetInCanvas",required:!1,type:{name:"boolean"}},disableNextButton:{defaultValue:null,description:'Manually disable the "Next" button',name:"disableNextButton",required:!1,type:{name:"boolean"}},steps:{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"Step[]"}},injectedGuide:{defaultValue:null,description:'The name of the injected guide.\nAvailable injectable guides are: "insert-widget" and "ds-selection".',name:"injectedGuide",required:!0,type:{name:"string"}},widgetName:{defaultValue:null,description:"The name of the widget that is passed to the injected guide.",name:"widgetName",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-ui/basic/guide.tsx#isInjectedStep"]={docgenInfo:isInjectedStep.__docgenInfo,name:"isInjectedStep",path:"../jimu-ui/basic/guide.tsx#isInjectedStep"})}catch(__react_docgen_typescript_loader_error){}const{useState:ds_selection_guide_useState,useEffect:ds_selection_guide_useEffect}=jimu_core.q_G;const ds_selection_guide_DataSourceSelectionGuide=jimu_core.E_S.connect(((state,ownProps)=>{var _a,_b,_c;const appConfig=null===(_a=state.appStateInBuilder)||void 0===_a?void 0:_a.appConfig,layoutSelection=null===(_b=state.appStateInBuilder)||void 0===_b?void 0:_b.appRuntimeInfo.selection;let widget;if(layoutSelection){const layoutItem=function findLayoutItem(appConfig,layoutInfo){var _a,_b,_c;if(!layoutInfo)return null;const{layoutId,layoutItemId}=layoutInfo;return null===(_c=null===(_b=null===(_a=appConfig.layouts)||void 0===_a?void 0:_a[layoutId])||void 0===_b?void 0:_b.content)||void 0===_c?void 0:_c[layoutItemId]}(appConfig,layoutSelection);layoutItem&&layoutItem.type===jimu_core.K6q.Widget&&layoutItem.widgetId&&(widget=appConfig.widgets[layoutItem.widgetId])}return{dataSourcesInfo:null===(_c=state.appStateInBuilder)||void 0===_c?void 0:_c.dataSourcesInfo,widgetDs:null==widget?void 0:widget.useDataSources,widgetJson:widget}}))((props=>{const stepsJson=jimu_core.WpD.replaceI18nPlaceholdersInObject(__webpack_require__("../jimu-for-builder/lib/guides/components/common/ds-selection/ds-selection-steps.json"),jimu_core.Ruy.getIntl(),translations_default.A),{dataSourcesInfo,widgetDs,widgetJson}=props,[run,setRun]=ds_selection_guide_useState(!1),[stepIndex,setStepIndex]=ds_selection_guide_useState(0),[disabled,setDisabled]=ds_selection_guide_useState(!1),[conditionalStepIndexes,setConditionalStepIndexes]=ds_selection_guide_useState({0:0,2:0}),isDsAdded=function isDatasourceAdded(prevDSInfo,currentDSInfo){if(!prevDSInfo||!currentDSInfo)return!1;const prevDatasourceLength=Object.keys(null!=prevDSInfo?prevDSInfo:{}).length;return Object.keys(null!=currentDSInfo?currentDSInfo:{}).length>prevDatasourceLength}(function usePreviousAppState(value){const ref=jimu_core.q_G.useRef();return ds_selection_guide_useEffect((()=>{ref.current=value})),ref.current}(dataSourcesInfo),dataSourcesInfo);return ds_selection_guide_useEffect((()=>{var _a;0===props.stepIndex&&"arcgis-map"===(null===(_a=null==widgetJson?void 0:widgetJson.manifest)||void 0===_a?void 0:_a.name)&&setConditionalStepIndexes({0:1,2:1})}),[widgetJson,props.stepIndex]),ds_selection_guide_useEffect((()=>{setRun(props.run)}),[props.run]),ds_selection_guide_useEffect((()=>{setStepIndex(props.stepIndex)}),[props.stepIndex]),ds_selection_guide_useEffect((()=>{run&&widgetDs&&setDisabled(!widgetDs.length),!run&&isDsAdded&&(setStepIndex(stepIndex+1),setRun(!0))}),[widgetDs,isDsAdded,run]),jimu_core.q_G.createElement(guide_GuideComponent,Object.assign({},props,{run,stepIndex,steps:stepsJson.steps,conditionalStepIndexes,onActionTriggered:(e,step,index)=>{var _a;0===index?setStepIndex(1):1===index&&setRun(!1),null===(_a=null==props?void 0:props.onActionTriggered)||void 0===_a||_a.call(props,e,step,index)},onStepChange:data=>{const{index,event}=data;2===index&&event===dist.qY.TOOLTIP&&setDisabled(!0),null==props||props.onStepChange(Object.assign(Object.assign({},data),{run}))},disabled,isInjected:!0}))}));try{ds_selection_guide_DataSourceSelectionGuide.displayName="DataSourceSelectionGuide",ds_selection_guide_DataSourceSelectionGuide.__docgenInfo={description:"",displayName:"DataSourceSelectionGuide",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/components/common/ds-selection/ds-selection-guide.tsx#DataSourceSelectionGuide"]={docgenInfo:ds_selection_guide_DataSourceSelectionGuide.__docgenInfo,name:"DataSourceSelectionGuide",path:"../jimu-for-builder/lib/guides/components/common/ds-selection/ds-selection-guide.tsx#DataSourceSelectionGuide"})}catch(__react_docgen_typescript_loader_error){}const{useState:insert_widget_guide_useState,useEffect:insert_widget_guide_useEffect,useMemo,useRef}=jimu_core.q_G;function translate(id,widgetName=""){return jimu_core.Ruy.getIntl().formatMessage({id,defaultMessage:translations_default.A[id]},{widgetName})}const insert_widget_guide_InsertWidgetGuideComponent=props=>{const{params,appConfig,widgetSelection}=props,widgetName=null==params?void 0:params.widgetName,[run,setRun]=insert_widget_guide_useState(!1),[stepIndex,setStepIndex]=insert_widget_guide_useState(0),[dropDone,setDropDone]=insert_widget_guide_useState(!1),dragStartListener=useRef(null),dragEndListener=useRef(null),steps=useMemo((()=>[{title:translate("insertWidgetStep1Title"),content:{image:{src:"jimu-for-builder/guide-assets/insert-widget-guide.gif",alt:translate("insertWidgetStep1Title"),border:!0,width:400,height:220,autoFlip:!0},text:translate("insertWidgetStep1Content")},placement:"auto",target:`[data-sectionid='opts-section'] .widget-card-item[data-widget-name='${widgetName}']`,spotlightClicks:!0,requiredAction:{type:"custom"},disableNextButton:!0}]),[widgetName]),removeDnDEventHandlers=()=>{document.body.removeEventListener("dragstart",dragStartListener.current),document.body.removeEventListener("dragend",dragEndListener.current)};return insert_widget_guide_useEffect((()=>{removeDnDEventHandlers(),setRun(props.run)}),[props.run]),insert_widget_guide_useEffect((()=>{setStepIndex(props.stepIndex)}),[props.stepIndex]),insert_widget_guide_useEffect((()=>{if(!run){const layoutItem=layout_runtime.searchUtils.findLayoutItem(appConfig,widgetSelection);let widget;layoutItem&&layoutItem.type===jimu_core.K6q.Widget&&layoutItem.widgetId&&(widget=null==appConfig?void 0:appConfig.widgets[layoutItem.widgetId]),dropDone&&(null==widget?void 0:widget.manifest.name)===widgetName&&(setStepIndex(1),setRun(!0))}}),[widgetName,run,dropDone,appConfig,widgetSelection]),jimu_core.q_G.createElement(guide_GuideComponent,Object.assign({},props,{run,stepIndex,steps,onStepChange:data=>{const{index,event,step,status}=data,targetSelector=utils_getTargetSelector(step),targetElm=document.querySelector(targetSelector);if(targetElm){(element=>{if(!element)return!1;const rect=element.getBoundingClientRect(),windowHeight=window.innerHeight||document.documentElement.clientHeight,windowWidth=window.innerWidth||document.documentElement.clientWidth;if(!(rect.top>=0&&rect.left>=0&&rect.bottom<=windowHeight&&rect.right<=windowWidth))return!1;const centerX=rect.left+rect.width/2,centerY=rect.top+rect.height/2,topElement=document.elementFromPoint(centerX,centerY);return topElement===element||element.contains(topElement)})(targetElm)||targetElm.scrollIntoView({behavior:"smooth",block:"center"}),0===index&&event===dist.qY.TOOLTIP&&(publishChangeSelectionToApp(null),app_config_actions_getAppConfigAction().setLockLayout(!1).exec(),((targetElm,targetSelector)=>{dragStartListener.current=e=>{var _a,_b;(null===(_b=null===(_a=e.target)||void 0===_a?void 0:_a.parentElement)||void 0===_b?void 0:_b.querySelector(targetSelector))===e.target?(setRun(!1),targetElm.addEventListener("dragend",dragEndListener.current)):removeDnDEventHandlers()},dragEndListener.current=e=>{var _a;"none"===(null===(_a=null==e?void 0:e.dataTransfer)||void 0===_a?void 0:_a.dropEffect)?(setStepIndex(0),setRun(!0)):(setDropDone(!0),props.onStepChange({isInjected:!0,status:STATUS.FINISHED})),targetElm.removeEventListener("dragend",dragEndListener.current),removeDnDEventHandlers()},targetElm&&document.body.addEventListener("dragstart",dragStartListener.current)})(targetElm,targetSelector)),null==props||props.onStepChange(data)}else console.warn("insert widget target not found:",targetSelector);status!==STATUS.FINISHED&&status!==STATUS.SKIPPED||removeDnDEventHandlers()},isInjected:!0}))},insert_widget_guide_InsertWidgetGuide=jimu_core.E_S.connect((state=>{var _a,_b,_c;return{appConfig:null===(_a=state.appStateInBuilder)||void 0===_a?void 0:_a.appConfig,widgetSelection:null===(_c=null===(_b=state.appStateInBuilder)||void 0===_b?void 0:_b.appRuntimeInfo)||void 0===_c?void 0:_c.selection}}))(insert_widget_guide_InsertWidgetGuideComponent);try{insert_widget_guide_InsertWidgetGuideComponent.displayName="InsertWidgetGuideComponent",insert_widget_guide_InsertWidgetGuideComponent.__docgenInfo={description:"",displayName:"InsertWidgetGuideComponent",props:{steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}},appConfig:{defaultValue:null,description:"",name:"appConfig",required:!0,type:{name:"IMAppConfig"}},widgetSelection:{defaultValue:null,description:"",name:"widgetSelection",required:!0,type:{name:"IMSelection"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/components/common/insert-widget/insert-widget-guide.tsx#InsertWidgetGuideComponent"]={docgenInfo:insert_widget_guide_InsertWidgetGuideComponent.__docgenInfo,name:"InsertWidgetGuideComponent",path:"../jimu-for-builder/lib/guides/components/common/insert-widget/insert-widget-guide.tsx#InsertWidgetGuideComponent"})}catch(__react_docgen_typescript_loader_error){}try{insert_widget_guide_InsertWidgetGuide.displayName="InsertWidgetGuide",insert_widget_guide_InsertWidgetGuide.__docgenInfo={description:"",displayName:"InsertWidgetGuide",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/components/common/insert-widget/insert-widget-guide.tsx#InsertWidgetGuide"]={docgenInfo:insert_widget_guide_InsertWidgetGuide.__docgenInfo,name:"InsertWidgetGuide",path:"../jimu-for-builder/lib/guides/components/common/insert-widget/insert-widget-guide.tsx#InsertWidgetGuide"})}catch(__react_docgen_typescript_loader_error){}try{DataSourceSelectionGuide.displayName="DataSourceSelectionGuide",DataSourceSelectionGuide.__docgenInfo={description:"",displayName:"DataSourceSelectionGuide",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/index.tsx#DataSourceSelectionGuide"]={docgenInfo:DataSourceSelectionGuide.__docgenInfo,name:"DataSourceSelectionGuide",path:"../jimu-for-builder/lib/guides/index.tsx#DataSourceSelectionGuide"})}catch(__react_docgen_typescript_loader_error){}try{InsertWidgetGuideComponent.displayName="InsertWidgetGuideComponent",InsertWidgetGuideComponent.__docgenInfo={description:"",displayName:"InsertWidgetGuideComponent",props:{steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}},appConfig:{defaultValue:null,description:"",name:"appConfig",required:!0,type:{name:"IMAppConfig"}},widgetSelection:{defaultValue:null,description:"",name:"widgetSelection",required:!0,type:{name:"IMSelection"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/index.tsx#InsertWidgetGuideComponent"]={docgenInfo:InsertWidgetGuideComponent.__docgenInfo,name:"InsertWidgetGuideComponent",path:"../jimu-for-builder/lib/guides/index.tsx#InsertWidgetGuideComponent"})}catch(__react_docgen_typescript_loader_error){}try{InsertWidgetGuide.displayName="InsertWidgetGuide",InsertWidgetGuide.__docgenInfo={description:"",displayName:"InsertWidgetGuide",props:{className:{defaultValue:null,description:"Class name(s) applied to the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicates whether the guide is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},widgetJson:{defaultValue:null,description:"The Json object of the widget that is being targeted at by the guide.",name:"widgetJson",required:!1,type:{name:"WidgetJson"}},params:{defaultValue:null,description:"Other parameters required by the guide.",name:"params",required:!1,type:{name:"any"}},steps:{defaultValue:null,description:"The steps of the guide.",name:"steps",required:!0,type:{name:"Steps"}},stepIndex:{defaultValue:null,description:"Sets the index of the current step.",name:"stepIndex",required:!1,type:{name:"number"}},run:{defaultValue:null,description:"Run/stop the guide.",name:"run",required:!1,type:{name:"boolean"}},conditionalStepIndexes:{defaultValue:null,description:"Sets the index(es) of the active sub step within conditional steps.\nThe default index for a conditional step is 0.",name:"conditionalStepIndexes",required:!1,type:{name:"ConditionalStepIndexes"}},onStepChange:{defaultValue:null,description:"Callback when the step status has changed.",name:"onStepChange",required:!1,type:{name:"(data: StepOnChangeCallBackProps) => void"}},onActionTriggered:{defaultValue:null,description:"Fires when the required action in a step is triggered.",name:"onActionTriggered",required:!1,type:{name:"(e: any, step: Step, index: number) => void"}},sectionJson:{defaultValue:null,description:"The Json object of the section that is being targeted at by the guide.",name:"sectionJson",required:!1,type:{name:"SectionJson"}},isInjected:{defaultValue:null,description:"Indicates whether the guide is injected in another guide as a step.",name:"isInjected",required:!1,type:{name:"boolean"}},footerNav:{defaultValue:null,description:"The footer navigation or other element of the guide.",name:"footerNav",required:!1,type:{name:"string | Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/lib/guides/index.tsx#InsertWidgetGuide"]={docgenInfo:InsertWidgetGuide.__docgenInfo,name:"InsertWidgetGuide",path:"../jimu-for-builder/lib/guides/index.tsx#InsertWidgetGuide"})}catch(__react_docgen_typescript_loader_error){}var init_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function init(){return init_awaiter(this,void 0,void 0,(function*(){return function registerActionSettingClassInfoForBuilder(){AppMessageManager.getInstance().registerActionRawSettingClass("filter-data-record-action",filter_data_record_action_setting),AppMessageManager.getInstance().registerActionRawSettingClass("select-data-record-action",select_data_record_action_setting)}(),yield loadI18nMessage(),function registerCommonGuides(){jimu_core.YQG.getInstance().registerGuide({id:"insert-widget",module:insert_widget_guide_InsertWidgetGuide,type:jimu_core.aOJ.Program,level:jimu_core.a8_.Common,isInjected:!0}),jimu_core.YQG.getInstance().registerGuide({id:"ds-selection",module:ds_selection_guide_DataSourceSelectionGuide,type:jimu_core.aOJ.Program,level:jimu_core.a8_.Common,isInjected:!0})}(),yield Promise.resolve({})}))}try{BaseWidgetSetting.displayName="BaseWidgetSetting",BaseWidgetSetting.__docgenInfo={description:"",displayName:"BaseWidgetSetting",props:{widgetId:{defaultValue:null,description:"",name:"widgetId",required:!0,type:{name:"string"}},onSettingChange:{defaultValue:null,description:"When a setting is changed via user input, call this function to save that changed value into the widget configuration.",name:"onSettingChange",required:!0,type:{name:"SettingChangeFunction"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"ImmutableObject<WidgetContext>"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"ImmutableObject<{ border?: any; borderRadius?: any; boxShadow?: any; }>"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},manifest:{defaultValue:null,description:"The manifest is added in runtime, will not be saved in the config json.",name:"manifest",required:!0,type:{name:"ImmutableObject<WidgetManifest>"}},version:{defaultValue:null,description:"",name:"version",required:!0,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"string | ImmutableObject<IconResult>"}},visible:{defaultValue:null,description:"",name:"visible",required:!0,type:{name:"boolean"}},uri:{defaultValue:null,description:"",name:"uri",required:!0,type:{name:"string"}},itemId:{defaultValue:null,description:"",name:"itemId",required:!1,type:{name:"string"}},_originManifest:{defaultValue:null,description:"@ignore",name:"_originManifest",required:!0,type:{name:"ImmutableObject<WidgetManifest>"}},useDataSources:{defaultValue:null,description:"",name:"useDataSources",required:!1,type:{name:"ImmutableArray<UseDataSource>"}},useUtilities:{defaultValue:null,description:"",name:"useUtilities",required:!1,type:{name:"ImmutableArray<UseUtility>"}},useMapWidgetIds:{defaultValue:null,description:"",name:"useMapWidgetIds",required:!1,type:{name:"ImmutableArray<string>"}},useDataSourcesEnabled:{defaultValue:null,description:"",name:"useDataSourcesEnabled",required:!1,type:{name:"boolean"}},outputDataSources:{defaultValue:null,description:"",name:"outputDataSources",required:!1,type:{name:"ImmutableArray<string>"}},layouts:{defaultValue:null,description:'For widget that has an embedded layout, the name is declared in manifest.json.\nIf there is no layouts declared in manifest, the name is default.\n\nIf the name starts with "_", the layout will not be displayed in TOC.',name:"layouts",required:!1,type:{name:"ImmutableObject<{ [name: string]: SizeModeLayoutJson; }>"}},parent:{defaultValue:null,description:"A widget can be contained in multiple layout under a certain size mode.\nThe key is the name of the size mode.",name:"parent",required:!1,type:{name:"ImmutableObject<{ [key: string]: LayoutInfo[]; }>"}},enableDataAction:{defaultValue:null,description:"",name:"enableDataAction",required:!1,type:{name:"boolean"}},dataActions:{defaultValue:null,description:"",name:"dataActions",required:!1,type:{name:"ImmutableObject<WidgetDataActionConfig>"}},offPanel:{defaultValue:null,description:"Default value is false, this property is valid only when a widget is rendered in a widget controller.\nFalse means the widget controller will render the widget in controller's panel, and true means the controller widget will render the widget as it is.\nA widget can update this property in it's setting so it can display well in the controller widget.",name:"offPanel",required:!1,type:{name:"boolean"}},isClassLoaded:{defaultValue:null,description:"Indicator as to whether or not a widget class is loaded.",name:"isClassLoaded",required:!1,type:{name:"boolean"}},isInlineEditing:{defaultValue:null,description:"Indicator as to whether or not a widget is in inline editing state.",name:"isInlineEditing",required:!1,type:{name:"boolean"}},controllerWidgetId:{defaultValue:null,description:"The controller widget id that this widget belongs to.",name:"controllerWidgetId",required:!1,type:{name:"string"}},shouldExpandContextTool:{defaultValue:null,description:"",name:"shouldExpandContextTool",required:!1,type:{name:"boolean"}},state:{defaultValue:null,description:"The widget's state. Possible values of `OPENED`, `ACTIVE` or `CLOSED`.\n\nThe `OPENED` and `CLOSED` state are valid only when a widget is put into a widget controller.\nWhen a widget is not put into the widget controller, for performance reason, we don't switch the widget open/close state.\n\nFor `ACTIVE` state, see {@link WidgetManifestProperties.needActiveState }",name:"state",required:!1,type:{name:"enum",value:[{value:'"OPENED"'},{value:'"ACTIVE"'},{value:'"CLOSED"'}]}},windowState:{defaultValue:null,description:"The window's state. Possible values of `normal`, `minimized` or `maximized`.",name:"windowState",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"minimized"'},{value:'"maximized"'}]}},layoutItemTools:{defaultValue:null,description:"",name:"layoutItemTools",required:!1,type:{name:"{ [toolId: string]: WidgetLayoutItemToolInfo; }"}},dispatch:{defaultValue:null,description:"",name:"dispatch",required:!0,type:{name:"any"}},queryObject:{defaultValue:null,description:"",name:"queryObject",required:!0,type:{name:"ImmutableObject<UrlParameters>"}},savedConfig:{defaultValue:null,description:"A widget can save part of its whole config in the app config, and use the `getFullConfig()` to get the full config, the returned full config will be available at `props.config`.\nIf the widget does not implement the `getFullConfig()`, this prop will be the same with the `props.config`.",name:"savedConfig",required:!0,type:{name:"Partial<unknown>"}},config:{defaultValue:null,description:"",name:"config",required:!0,type:{name:"unknown"}},locale:{defaultValue:null,description:"",name:"locale",required:!0,type:{name:"string"}},appI18nMessages:{defaultValue:null,description:"",name:"appI18nMessages",required:!0,type:{name:"any"}},intl:{defaultValue:null,description:"",name:"intl",required:!0,type:{name:"IntlShape"}},token:{defaultValue:null,description:"",name:"token",required:!1,type:{name:"string"}},user:{defaultValue:null,description:"",name:"user",required:!1,type:{name:"IMUser"}},theme:{defaultValue:null,description:"",name:"theme",required:!0,type:{name:"IMThemeVariables"}},theme2:{defaultValue:null,description:"",name:"theme2",required:!0,type:{name:"IMThemeVariables"}},portalUrl:{defaultValue:null,description:"",name:"portalUrl",required:!1,type:{name:"string"}},portalSelf:{defaultValue:null,description:"",name:"portalSelf",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#BaseWidgetSetting"]={docgenInfo:BaseWidgetSetting.__docgenInfo,name:"BaseWidgetSetting",path:"../jimu-for-builder/index.tsx#BaseWidgetSetting"})}catch(__react_docgen_typescript_loader_error){}try{ChooseConnectionType.displayName="ChooseConnectionType",ChooseConnectionType.__docgenInfo={description:"",displayName:"ChooseConnectionType",props:{messageDataSource:{defaultValue:null,description:"",name:"messageDataSource",required:!0,type:{name:"DataSource"}},actionDataSource:{defaultValue:null,description:"",name:"actionDataSource",required:!0,type:{name:"DataSource"}},connectionType:{defaultValue:null,description:"",name:"connectionType",required:!0,type:{name:"enum",value:[{value:'"USE_LAYERS_RELATIONSHIP"'},{value:'"SET_CUSTOM_FIELDS"'}]}},onUseLayersRelationship:{defaultValue:null,description:"",name:"onUseLayersRelationship",required:!0,type:{name:"() => void"}},onSetCustomFields:{defaultValue:null,description:"",name:"onSetCustomFields",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#ChooseConnectionType"]={docgenInfo:ChooseConnectionType.__docgenInfo,name:"ChooseConnectionType",path:"../jimu-for-builder/index.tsx#ChooseConnectionType"})}catch(__react_docgen_typescript_loader_error){}try{getAppConfigAction.displayName="getAppConfigAction",getAppConfigAction.__docgenInfo={description:"",displayName:"getAppConfigAction",props:{name:{defaultValue:null,description:"Because one app can have multiple config.json, we add a name to identify the config.",name:"name",required:!0,type:{name:"string"}},template:{defaultValue:null,description:"The template that an experience created from.",name:"template",required:!0,type:{name:"string"}},mainSizeMode:{defaultValue:null,description:"User can configure an experience for multiple size modes, and the default size mode is saved here. The config user interface is not available yet.",name:"mainSizeMode",required:!0,type:{name:"enum",value:[{value:'"SMALL"'},{value:'"MEDIUM"'},{value:'"LARGE"'}]}},pages:{defaultValue:null,description:"Pages within an experience",name:"pages",required:!0,type:{name:"ImmutableObject<PagesJson>"}},pageStructure:{defaultValue:null,description:"The structure of pages",name:"pageStructure",required:!0,type:{name:"ImmutableArray<{ [pageId: string]: string[]; }>"}},dialogs:{defaultValue:null,description:"Windows (dialogs) within an experience",name:"dialogs",required:!0,type:{name:"ImmutableObject<DialogsJson>"}},layouts:{defaultValue:null,description:"Layouts within an experience",name:"layouts",required:!0,type:{name:"ImmutableObject<LayoutsJson>"}},controllerPanels:{defaultValue:null,description:"Floating panels for controller widget",name:"controllerPanels",required:!0,type:{name:"ImmutableObject<ControllerPanelsJson>"}},sections:{defaultValue:null,description:"Sections within an experience",name:"sections",required:!1,type:{name:"ImmutableObject<SectionsJson>"}},views:{defaultValue:null,description:"Views within an experience",name:"views",required:!1,type:{name:"ImmutableObject<ViewsJson>"}},widgets:{defaultValue:null,description:"Widgets within an experience",name:"widgets",required:!0,type:{name:"ImmutableObject<WidgetsJson>"}},screenGroups:{defaultValue:null,description:"Screen groups within an experience",name:"screenGroups",required:!0,type:{name:"ImmutableObject<ScreenGroupsJson>"}},screens:{defaultValue:null,description:"Screens within an experience",name:"screens",required:!0,type:{name:"ImmutableObject<ScreensJson>"}},header:{defaultValue:null,description:"The header of an experience",name:"header",required:!0,type:{name:"ImmutableObject<HeaderJson>"}},footer:{defaultValue:null,description:"The footer of an experience",name:"footer",required:!0,type:{name:"ImmutableObject<FooterJson>"}},theme:{defaultValue:null,description:'The theme uri, should end with "/".',name:"theme",required:!0,type:{name:"string"}},sharedThemeVariables:{defaultValue:null,description:"",name:"sharedThemeVariables",required:!1,type:{name:"ImmutableObject<SharedThemeVariables>"}},customTheme:{defaultValue:null,description:"",name:"customTheme",required:!1,type:{name:"ImmutableObject<Partial<ThemeVariables>>"}},customThemeOptions:{defaultValue:null,description:"",name:"customThemeOptions",required:!1,type:{name:"ImmutableObject<ThemeOptions>"}},dataSources:{defaultValue:null,description:"Data sources within an experience",name:"dataSources",required:!1,type:{name:"ImmutableObject<DataSourcesJson>"}},utilities:{defaultValue:null,description:"",name:"utilities",required:!1,type:{name:"ImmutableObject<UtilitiesJson>"}},appProxies:{defaultValue:null,description:"",name:"appProxies",required:!1,type:{name:"ImmutableObject<ProxiesJson>"}},messageConfigs:{defaultValue:null,description:"The message configs of an experience",name:"messageConfigs",required:!1,type:{name:"ImmutableObject<MessagesJson>"}},attributes:{defaultValue:null,description:"",name:"attributes",required:!0,type:{name:"ImmutableObject<AttributesJson>"}},analytics:{defaultValue:null,description:"@ignore",name:"analytics",required:!0,type:{name:"ImmutableObject<Analytics>"}},cookieBanner:{defaultValue:null,description:"",name:"cookieBanner",required:!0,type:{name:"ImmutableObject<CookieBannerJson>"}},useCachedManifest:{defaultValue:null,description:"If true, will read widget's manifest from `widgetsManifest`.\nThis value is false by default",name:"useCachedManifest",required:!1,type:{name:"boolean"}},widgetsManifest:{defaultValue:null,description:"The manifest here are raw manifest, need to be processed before use.\nWe save raw manifest here to save some network requests.\n\nWhen add a widget in builder, the manifest is not saved here because we need to fetch the latest manifest to check version info.\nHowever, we can do this manually.",name:"widgetsManifest",required:!0,type:{name:"ImmutableObject<{ [widgetUri: string]: WidgetManifest; }>"}},themeManifest:{defaultValue:null,description:"",name:"themeManifest",required:!1,type:{name:"ImmutableObject<ThemeManifest>"}},preloadWidgets:{defaultValue:null,description:"The widgets uri in this array will be loaded when the app loads, rather than dynamically loading the widget.",name:"preloadWidgets",required:!1,type:{name:"ImmutableArray<string>"}},exbVersion:{defaultValue:null,description:"The framework version when the experience is created/updated.\n\nWhen an old experience is opened in a new version code, this version will be set as the new code version.",name:"exbVersion",required:!0,type:{name:"string"}},originExbVersion:{defaultValue:null,description:"As the `exbVersion` will be replaced with the code version when app is launched, we save the origin version\nin config here.",name:"originExbVersion",required:!0,type:{name:"string"}},__not_publish:{defaultValue:null,description:"Only newly created experience (unpublished) configurations have this property.",name:"__not_publish",required:!0,type:{name:"boolean"}},forBuilderAttributes:{defaultValue:null,description:"These attributes are used by builder only.",name:"forBuilderAttributes",required:!0,type:{name:"ImmutableObject<ForBuilderAttributes>"}},timestamp:{defaultValue:null,description:"UTC timestamp for specific app config version. It's used for app's update.",name:"timestamp",required:!0,type:{name:"string"}},publishTimestamp:{defaultValue:null,description:"This property will be set when publishing.",name:"publishTimestamp",required:!1,type:{name:"string"}},historyLabels:{defaultValue:null,description:"History labels are saved here because the labels may be used in URL.\nThis can avoid link broken.\nThis is done while publishing, which means all labels in the published app will be saved here.",name:"historyLabels",required:!0,type:{name:"ImmutableObject<HistoryLabels>"}},connections:{defaultValue:null,description:"Configure multiple portal connection information",name:"connections",required:!1,type:{name:"ImmutableArray<Connection>"}},useAutoSortInFixedLayout:{defaultValue:null,description:"Whether adjust tab order automatically in the fixed layout.",name:"useAutoSortInFixedLayout",required:!1,type:{name:"boolean"}},urlParams:{defaultValue:null,description:"",name:"urlParams",required:!1,type:{name:"ImmutableObject<UrlParamsConfig>"}},placeholderInfos:{defaultValue:null,description:"",name:"placeholderInfos",required:!1,type:{name:"ImmutableObject<{ [placeholderId: string]: PlaceholderInfo; }>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#getAppConfigAction"]={docgenInfo:getAppConfigAction.__docgenInfo,name:"getAppConfigAction",path:"../jimu-for-builder/index.tsx#getAppConfigAction"})}catch(__react_docgen_typescript_loader_error){}try{AppResourceManager.displayName="AppResourceManager",AppResourceManager.__docgenInfo={description:"The resource manager is used to process the resources in the app. It can be used to upload resources to the server, update the config, and to fetch resources from the server.\n\nApp resources refer to files used by the app, such as images, icons, and config.json. They are stored on the ArcGIS rest server associated with the app item.\nThe storage structure of the resources are as follows:\n{\n   resources: [\n       { resource: 'config/config.json' , ...}, // This file is the draft version appConfig\n       { resource: 'images/image-resources-list.json' , ...}, // This file is stored imageResources.\n       { resource: 'images/icon-resources-list.json' , ...}, // This file is stored iconResources.\n       { resource: 'images/widget_1/123456.jpg' , ...}, // This file is stored image item.\n       ...\n   ]\n}\n\nThese first 3 app resources are special. The config.json is the draft version appConfig.\nThe image-resources-list.json and icon-resources-list.json are used to manage other resources, we call them management resources, they don't have `ResourceItemInfo` but their content have `ResourceItemInfo` to manage the item resources.\nAll other resources are called resource items, they have `ResourceItemInfo`.\n\nThe manager handles mapping app resource URLs to the underlying storage location. So code can refer to a normalized URL like ${appResourceUrl}/images/widget1/image.png. And the manager will handle uploading resources to the proper /images/widget1/location.\n\nHere is how the resources are processed:\n * When uploading resources, it converts files to blobs and generates blob URLs.\n * When saving and updating the app config, it replaces blob URLs with the corresponding resource URLs.\n * When fetching resources from server, it replaces `${appResourceUrl}` with portalUrl and add token to the end of the url.",displayName:"AppResourceManager",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#AppResourceManager"]={docgenInfo:AppResourceManager.__docgenInfo,name:"AppResourceManager",path:"../jimu-for-builder/index.tsx#AppResourceManager"})}catch(__react_docgen_typescript_loader_error){}try{_instance.displayName="AppResourceManager._instance",_instance.__docgenInfo={description:"The resource manager is used to process the resources in the app. It can be used to upload resources to the server, update the config, and to fetch resources from the server.\n\nApp resources refer to files used by the app, such as images, icons, and config.json. They are stored on the ArcGIS rest server associated with the app item.\nThe storage structure of the resources are as follows:\n{\n   resources: [\n       { resource: 'config/config.json' , ...}, // This file is the draft version appConfig\n       { resource: 'images/image-resources-list.json' , ...}, // This file is stored imageResources.\n       { resource: 'images/icon-resources-list.json' , ...}, // This file is stored iconResources.\n       { resource: 'images/widget_1/123456.jpg' , ...}, // This file is stored image item.\n       ...\n   ]\n}\n\nThese first 3 app resources are special. The config.json is the draft version appConfig.\nThe image-resources-list.json and icon-resources-list.json are used to manage other resources, we call them management resources, they don't have `ResourceItemInfo` but their content have `ResourceItemInfo` to manage the item resources.\nAll other resources are called resource items, they have `ResourceItemInfo`.\n\nThe manager handles mapping app resource URLs to the underlying storage location. So code can refer to a normalized URL like ${appResourceUrl}/images/widget1/image.png. And the manager will handle uploading resources to the proper /images/widget1/location.\n\nHere is how the resources are processed:\n * When uploading resources, it converts files to blobs and generates blob URLs.\n * When saving and updating the app config, it replaces blob URLs with the corresponding resource URLs.\n * When fetching resources from server, it replaces `${appResourceUrl}` with portalUrl and add token to the end of the url.",displayName:"AppResourceManager._instance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#AppResourceManager._instance"]={docgenInfo:AppResourceManager._instance.__docgenInfo,name:"AppResourceManager._instance",path:"../jimu-for-builder/index.tsx#AppResourceManager._instance"})}catch(__react_docgen_typescript_loader_error){}try{WidgetService.displayName="WidgetService",WidgetService.__docgenInfo={description:"Widget manages some resources, e.g. layout, data source, data action, etc.\nWill handle all properties listed in the WidgetJson except the config",displayName:"WidgetService",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#WidgetService"]={docgenInfo:WidgetService.__docgenInfo,name:"WidgetService",path:"../jimu-for-builder/index.tsx#WidgetService"})}catch(__react_docgen_typescript_loader_error){}try{makeSureTemplateConfig.displayName="makeSureTemplateConfig",makeSureTemplateConfig.__docgenInfo={description:"",displayName:"makeSureTemplateConfig",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"block"'},{value:'"grid-widget"'},{value:'"header"'},{value:'"footer"'},{value:'"full-screen-page"'},{value:'"full-screen-grid-page"'},{value:'"scrolling-page"'},{value:'"window"'},{value:'"screen-group"'},{value:'"screen"'},{value:'"app"'}]}},config:{defaultValue:null,description:"A template config is a sub-set of app config.\nFor example, a page template must have one page only, and a header template must have header config only.",name:"config",required:!1,type:{name:"Partial<AppConfig>"}},configUrl:{defaultValue:null,description:"",name:"configUrl",required:!0,type:{name:"string"}},thumbnail:{defaultValue:null,description:"the thumbnail file name",name:"thumbnail",required:!0,type:{name:"string"}},gifThumbnail:{defaultValue:null,description:"",name:"gifThumbnail",required:!0,type:{name:"string"}},thumbnailWidth:{defaultValue:null,description:"",name:"thumbnailWidth",required:!0,type:{name:"number"}},thumbnailHeight:{defaultValue:null,description:"",name:"thumbnailHeight",required:!0,type:{name:"number"}},flipThumbnail:{defaultValue:null,description:"",name:"flipThumbnail",required:!0,type:{name:"boolean"}},notSupportAGOL:{defaultValue:null,description:"",name:"notSupportAGOL",required:!0,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},i18nLabel:{defaultValue:null,description:"",name:"i18nLabel",required:!0,type:{name:"{ [locale: string]: string; }"}},i18nDescription:{defaultValue:null,description:"",name:"i18nDescription",required:!0,type:{name:"{ [locale: string]: string; }"}},hasGuide:{defaultValue:null,description:"the guide props\n@ignore This indicates whether a guide is available for the template.\nIf true, the guide will be displayed upon rendering if the app is created from the template.",name:"hasGuide",required:!0,type:{name:"boolean"}},guideType:{defaultValue:null,description:"",name:"guideType",required:!0,type:{name:"enum",value:[{value:'"CONFIG"'},{value:'"PROGRAM"'}]}},isMultiplePage:{defaultValue:null,description:"",name:"isMultiplePage",required:!0,type:{name:"boolean"}},isMapAware:{defaultValue:null,description:"",name:"isMapAware",required:!0,type:{name:"boolean"}},tags:{defaultValue:null,description:"",name:"tags",required:!0,type:{name:"TemplateTagType[]"}},widgetId:{defaultValue:null,description:"",name:"widgetId",required:!1,type:{name:"string"}},sectionId:{defaultValue:null,description:"",name:"sectionId",required:!1,type:{name:"string"}},pageId:{defaultValue:null,description:"",name:"pageId",required:!1,type:{name:"string"}},screenGroupId:{defaultValue:null,description:"",name:"screenGroupId",required:!1,type:{name:"string"}},templateCreateVersion:{defaultValue:null,description:"",name:"templateCreateVersion",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-for-builder/index.tsx#makeSureTemplateConfig"]={docgenInfo:makeSureTemplateConfig.__docgenInfo,name:"makeSureTemplateConfig",path:"../jimu-for-builder/index.tsx#makeSureTemplateConfig"})}catch(__react_docgen_typescript_loader_error){}},"../jimu-for-builder/lib/guides/components/common/ds-selection/ds-selection-steps.json":module=>{"use strict";module.exports=JSON.parse('{"steps":[{"steps":[{"title":"${DSSelectionStep4Title}","content":"${DSSelectionStep4Content}","placement":"left","target":"[data-widgetid=\'dynamic-setting\'] .widget-setting-tab:not([data-is-parent=\'true\']) .component-data-source-selector .jimu-btn","requiredAction":{"type":"click"},"disableNextButton":true},{"title":"${DSSelectionStep1Title}","content":"${DSSelectionStep1Content}","placement":"left","target":"[data-widgetid=\'dynamic-setting\'] .widget-setting-tab:not([data-is-parent=\'true\']) .component-data-source-selector .jimu-btn","requiredAction":{"type":"click"},"disableNextButton":true}]},{"title":"${DSSelectionStep2Title}","content":{"image":{"src":"jimu-for-builder/guide-assets/add-data.gif","alt":"${DSSelectionStep2Title}","width":400,"height":220},"text":"${DSSelectionStep2Content}"},"placement":"left-end","target":".component-data-source-list .ds-add-data","requiredAction":{"type":"click"},"disableNextButton":true},{"steps":[{"title":"${DSSelectionStep5Title}","content":"${DSSelectionStep5Content}","placement":"left","target":".component-data-source-list .ds-list","spotlightClicks":true},{"title":"${DSSelectionStep3Title}","content":"${DSSelectionStep3Content}","placement":"left","target":".component-data-source-list .ds-list","spotlightClicks":true}]}]}')},"../jimu-icons/outlined/data/link-combined.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>LinkCombinedOutlined});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),_svg_outlined_data_link_combined_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../jimu-icons/svg/outlined/data/link-combined.svg"),_svg_outlined_data_link_combined_svg__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_svg_outlined_data_link_combined_svg__WEBPACK_IMPORTED_MODULE_1__),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const LinkCombinedOutlined=props=>{const SVG=window.SVG,{className}=props,others=__rest(props,["className"]),classes=(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.xWm)("jimu-icon jimu-icon-component",className);return SVG?jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(SVG,Object.assign({className:classes,src:_svg_outlined_data_link_combined_svg__WEBPACK_IMPORTED_MODULE_1___default()},others)):jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("svg",Object.assign({className:classes},others))};try{LinkCombinedOutlined.displayName="LinkCombinedOutlined",LinkCombinedOutlined.__docgenInfo={description:"",displayName:"LinkCombinedOutlined",props:{children:{defaultValue:null,description:"The fallback content in case of a fetch error or unsupported browser.",name:"children",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"The title of the component.",name:"title",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Defines the styles added to the element.",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"Defines the class names added to the component.",name:"className",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"To provide a role for this component.\nIt is for accessibility purposes.",name:"role",required:!1,type:{name:"AriaRole"}},"aria-hidden":{defaultValue:{value:"false"},description:"Indicates whether the element is exposed to an accessibility API.",name:"aria-hidden",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-label":{defaultValue:null,description:"To provide a label for interactive components for accessibility purposes.",name:"aria-label",required:!1,type:{name:"string"}},size:{defaultValue:{value:"m"},description:"Defines the size, both width and height, of the icon.",name:"size",required:!1,type:{name:"string | number"}},loader:{defaultValue:null,description:"A component to be shown while the SVG is loading.",name:"loader",required:!1,type:{name:"ReactNode"}},isRTL:{defaultValue:null,description:"Whether it is in the RTL.\nNote: The default value is read from `getAppStore().getState().appContext?.isRTL` and is provided for use in testing and storybook environments.\n@ignore",name:"isRTL",required:!1,type:{name:"boolean"}},autoFlip:{defaultValue:{value:"false"},description:"Flips the SVG automatically for RTL.",name:"autoFlip",required:!1,type:{name:"boolean"}},currentColor:{defaultValue:{value:"true"},description:"If set to `true`, the `stroke` and `fill` properties on the child elements will be replaced with `currentColor`, in order to make `color` property effective.",name:"currentColor",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-icons/outlined/data/link-combined.tsx#LinkCombinedOutlined"]={docgenInfo:LinkCombinedOutlined.__docgenInfo,name:"LinkCombinedOutlined",path:"../jimu-icons/outlined/data/link-combined.tsx#LinkCombinedOutlined"})}catch(__react_docgen_typescript_loader_error){}},"../jimu-icons/svg/outlined/application/dialog.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 12"><path fill="#000" fill-rule="evenodd" d="M.007.883A1 1 0 0 1 1 0h10l.117.007A1 1 0 0 1 12 1v7l-.007.117A1 1 0 0 1 11 9H4l-4 3V1zM11 1H1v9l2.667-2H11zM3 3.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5M3.5 5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/application/folder.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" fill-rule="evenodd" d="M1.333 0h4c.737 0 1.334.597 1.334 1.333v1.334h8C15.403 2.667 16 3.264 16 4v10.667c0 .736-.597 1.333-1.333 1.333H1.333A1.333 1.333 0 0 1 0 14.667V1.333C0 .597.597 0 1.333 0m0 7.333v7.334h13.334V7.333zm0-1.333h13.334V4H5.334V1.335h-4z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/screen-group.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" fill-rule="evenodd" d="M2 2h12v4H2zM1 7V1h14v6zm1 3h12v4H2zm-1 5V9h14v6z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/screen.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" fill-rule="evenodd" d="M2 2h12v12H2zM1 15V1h14v14zm4-9h6v4H5zm-1 5V5h8v6z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/widget-column.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path fill="#000" fill-rule="evenodd" d="M17 2a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2zM5 1h10a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1m2 2h6v6H7zm0 8h1v2H7zm2 0h1v1H9zm4 2h-1v1h1zm-6 1h1v1H7zm4 2h-1v1h1zm1-1h1v2h-1zm-3 2v-1H7v1zm2-6h2v1h-2z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/widget-fixed-panel.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path fill="#000" d="M3 3h7v7H3zM11 11h1v2h-1zM13 11h1v1h-1zM17 13h-1v1h1zM11 14h1v1h-1zM15 16h-1v1h1zM16 15h1v2h-1zM13 17v-1h-2v1zM15 11h2v1h-2z"></path><path fill="#000" fill-rule="evenodd" d="M20 2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2zM2 1h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/widget-place-holder.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path fill="#000" d="M4 4h2v1H4zM8 4h2v1H8zM14 4h-2v1h2zM15 4h1v2h-1zM16 8h-1v2h1zM4 14h1v2H4zM5 6H4v2h1zM4 10h1v2H4zM16 12h-1v2h1zM16 15v1h-2v-1zM12 15h-2v1h2zM6 15h2v1H6z"></path><path fill="#000" fill-rule="evenodd" d="M18 0a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1H2a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/widget-row.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path fill="#000" d="M3 7h6v6H3zM11 7h1v2h-1zM13 7h1v1h-1zM17 9h-1v1h1zM11 10h1v1h-1zM15 12h-1v1h1zM16 11h1v2h-1zM13 13v-1h-2v1zM15 7h2v1h-2z"></path><path fill="#000" fill-rule="evenodd" d="M20 5a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2zM2 4h16a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/brand/widget-section-view.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"><path fill="#000" fill-rule="evenodd" d="M1.25 2.5h17.5v11.25H1.25zM0 2.5c0-.69.56-1.25 1.25-1.25h17.5c.69 0 1.25.56 1.25 1.25v11.25c0 .69-.56 1.25-1.25 1.25H1.25C.56 15 0 14.44 0 13.75zm3.75 16.25h2.5V17.5h-2.5zm7.5 0h-2.5V17.5h2.5zm2.5 0h2.5V17.5h-2.5z" clip-rule="evenodd"></path></svg>'},"../jimu-icons/svg/outlined/data/link-combined.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 40"><path fill="#A8A8A8" fill-rule="evenodd" d="M6 30v10H0v-1h5v-9zM3.162 18.582a.5.5 0 0 1 0 .71l-1.416 1.421a2.497 2.497 0 0 0-.003 3.545c.983.983 2.56.98 3.544-.003l1.42-1.42a.504.504 0 0 1 .712.713L6 24.968a3.5 3.5 0 0 1-4.967 0 3.5 3.5 0 0 1 0-4.967l1.416-1.422a.504.504 0 0 1 .713.003m4.967-.71a.5.5 0 0 1 0 .71L4.58 22.129a.504.504 0 0 1-.713-.712l3.548-3.548a.504.504 0 0 1 .713.003m2.838-2.838a3.5 3.5 0 0 1 0 4.967l-1.42 1.419a.504.504 0 0 1-.713-.712l1.423-1.417a2.5 2.5 0 0 0 0-3.547 2.5 2.5 0 0 0-3.547 0l-1.42 1.419a.504.504 0 0 1-.713-.712l1.42-1.42a3.506 3.506 0 0 1 4.97.003M6 0v10H5V1H0V0z"></path></svg>'},"../jimu-icons/svg/outlined/data/link-tilted.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" d="m1.373 8 2.07-2.071.83.828L2.2 8.828a3.515 3.515 0 0 0 4.97 4.971l2.072-2.071.828.828L8 14.627A4.686 4.686 0 1 1 1.373 8M13.799 7.172l-2.071 2.07.828.83L14.627 8A4.686 4.686 0 1 0 8 1.373l-2.071 2.07.828.83L8.828 2.2a3.515 3.515 0 0 1 4.971 4.97"></path><path fill="#000" d="M5.515 9.657a.586.586 0 0 0 .828.828l4.142-4.142a.586.586 0 0 0-.828-.828z"></path></svg>'},"../jimu-icons/svg/outlined/data/page.svg":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 12"><path fill="#000" fill-rule="evenodd" d="M10.167 0H1.833A.845.845 0 0 0 1 .857v10.286c0 .473.373.857.833.857h8.334c.46 0 .833-.384.833-.857V.857A.845.845 0 0 0 10.167 0M2 11V1h8v10zm1.6-8h4.8c.331 0 .6.224.6.5s-.269.5-.6.5H3.6c-.331 0-.6-.224-.6-.5s.269-.5.6-.5m4.8 3H3.6c-.331 0-.6.224-.6.5s.269.5.6.5h4.8c.331 0 .6-.224.6-.5S8.731 6 8.4 6" clip-rule="evenodd"></path></svg>'}}]);
//# sourceMappingURL=6428.62905671.iframe.bundle.js.map