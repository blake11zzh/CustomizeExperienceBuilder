"use strict";(self.webpackChunkarcgis_experience_builder_design_system=self.webpackChunkarcgis_experience_builder_design_system||[]).push([[6788],{"./stories/jimu-ui/lib/slider/slider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Controlled:()=>Controlled,Large:()=>Large,Range:()=>Range,default:()=>__WEBPACK_DEFAULT_EXPORT__});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),jimu_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../jimu-ui/index.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const meta={title:"Components/jimu-ui/index/Slider",component:jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Slider,args:{size:"default",step:1,defaultValue:0,"aria-label":"Slider"},argTypes:{className:{table:{disable:!0}},style:{table:{disable:!0}},size:{options:["default","lg"],control:{type:"radio"}}}},Basic={},Controlled={args:{value:0,"aria-label":"Controlled"},render:_a=>{var{value:propValue}=_a,args=__rest(_a,["value"]);const[value,setValue]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(propValue);return jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useEffect((()=>{setValue(propValue)}),[propValue]),jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("div",{style:{width:"129px"}},jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Slider,Object.assign({},args,{value,onChange:e=>{setValue(e.target.value)}})))}},Large={args:{size:"lg","aria-label":"Large"}},Range={args:{min:0,max:60,defaultValue:40,step:10,"aria-label":"Range"}},__WEBPACK_DEFAULT_EXPORT__=meta;Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{}",...Basic.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: 0,\n    'aria-label': 'Controlled'\n  },\n  render: ({\n    value: propValue,\n    ...args\n  }) => {\n    const [value, setValue] = React.useState(propValue);\n    const handleChange = e => {\n      setValue(e.target.value);\n    };\n    React.useEffect(() => {\n      setValue(propValue);\n    }, [propValue]);\n    return <div style={{\n      width: '129px'\n    }}>\r\n    <Slider {...args} value={value} onChange={handleChange} />\r\n  </div>;\n  }\n}",...Controlled.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'lg',\n    'aria-label': 'Large'\n  }\n}",...Large.parameters?.docs?.source}}},Range.parameters={...Range.parameters,docs:{...Range.parameters?.docs,source:{originalSource:"{\n  args: {\n    min: 0,\n    max: 60,\n    defaultValue: 40,\n    step: 10,\n    'aria-label': 'Range'\n  }\n}",...Range.parameters?.docs?.source}}}}}]);