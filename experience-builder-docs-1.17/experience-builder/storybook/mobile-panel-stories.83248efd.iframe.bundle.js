"use strict";(self.webpackChunkarcgis_experience_builder_design_system=self.webpackChunkarcgis_experience_builder_design_system||[]).push([[7524],{"./stories/jimu-ui/lib/mobile-panel/mobile-panel.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{A11y:()=>A11y,Basic:()=>Basic,default:()=>__WEBPACK_DEFAULT_EXPORT__});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),jimu_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../jimu-ui/index.tsx"),_storybook_decorators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/decorators/index.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const __WEBPACK_DEFAULT_EXPORT__={title:"Components/jimu-ui/index/MobilePanel",component:jimu_ui__WEBPACK_IMPORTED_MODULE_1__._MobilePanel,decorators:[_storybook_decorators__WEBPACK_IMPORTED_MODULE_2__.Xx,_storybook_decorators__WEBPACK_IMPORTED_MODULE_2__.QY]},Basic={render:args=>jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("div",null,jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.MobilePanel,Object.assign({},args),jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("span",null,"Mobile panel content")),jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("span",null,'Use the "open" prop to control the display of the mobile panel.')),args:{title:"Mobile panel"},parameters:{controls:{exclude:["mapWidgetId"]}}},A11y={render:_a=>{var{toggle}=_a,args=__rest(_a,["toggle"]);const btnRef=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useRef(null),[open,setOpen]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(!0),[checked,setChecked]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(!1);return jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("div",null,jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.MobilePanel,Object.assign({},args,{open,onClose:evt=>{setOpen(!1),setTimeout((()=>{btnRef.current&&(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.u02)(btnRef.current)})),null==toggle||toggle(evt)}}),jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Label,{className:"d-flex ml-1",centric:!0},jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Checkbox,{className:"mr-2",checked,onChange:(e,checked)=>{setChecked(checked)}}),checked?"Checked":"Unchecked")),jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Button,{ref:btnRef,onClick:()=>{setOpen(!0)}},"Open mobile panel"))},args:{title:"Mobile panel"},parameters:{controls:{exclude:["open","mapWidgetId"]}}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <div>\r\n      <MobilePanel {...args}>\r\n        <span>Mobile panel content</span>\r\n      </MobilePanel>\r\n      <span>Use the \"open\" prop to control the display of the mobile panel.</span>\r\n    </div>;\n  },\n  args: {\n    title: 'Mobile panel'\n  },\n  parameters: {\n    controls: {\n      exclude: ['mapWidgetId']\n    }\n  }\n}",...Basic.parameters?.docs?.source}}},A11y.parameters={...A11y.parameters,docs:{...A11y.parameters?.docs,source:{originalSource:"{\n  render: ({\n    toggle,\n    ...args\n  }) => {\n    const btnRef = React.useRef(null);\n    const [open, setOpen] = React.useState(true);\n    const [checked, setChecked] = React.useState(false);\n    const handleToggle = (evt?) => {\n      setOpen(false);\n      setTimeout(() => {\n        if (btnRef.current) {\n          focusElementInKeyboardMode(btnRef.current);\n        }\n      });\n      toggle?.(evt);\n    };\n    return <div>\r\n      <MobilePanel {...args} open={open} onClose={handleToggle}>\r\n        <Label className='d-flex ml-1' centric>\r\n          <Checkbox className='mr-2' checked={checked} onChange={(e, checked) => {\n            setChecked(checked);\n          }} />\r\n          {checked ? 'Checked' : 'Unchecked'}\r\n        </Label>\r\n      </MobilePanel>\r\n      <Button ref={btnRef} onClick={() => {\n        setOpen(true);\n      }}>Open mobile panel</Button>\r\n    </div>;\n  },\n  args: {\n    title: 'Mobile panel'\n  },\n  parameters: {\n    controls: {\n      exclude: ['open', 'mapWidgetId']\n    }\n  }\n}",...A11y.parameters?.docs?.source}}}}}]);