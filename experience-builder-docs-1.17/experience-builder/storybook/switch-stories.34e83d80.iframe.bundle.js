"use strict";(self.webpackChunkarcgis_experience_builder_design_system=self.webpackChunkarcgis_experience_builder_design_system||[]).push([[1367],{"./stories/jimu-ui/lib/switch/switch.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Controlled:()=>Controlled,Disabled:()=>Disabled,WithLabel:()=>WithLabel,default:()=>__WEBPACK_DEFAULT_EXPORT__});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),jimu_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../jimu-ui/index.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const __WEBPACK_DEFAULT_EXPORT__={title:"Components/jimu-ui/index/Switch",component:jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Switch,args:{defaultChecked:!0,"aria-label":"Switch"}},Basic={},Controlled={render:_a=>{var{onChange,checked:propChecked}=_a,args=__rest(_a,["onChange","checked"]);const[checked,setChecked]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(propChecked);jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useEffect((()=>{setChecked(propChecked)}),[propChecked]);return jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Switch,Object.assign({},args,{checked,onChange:(evt,checked)=>{setChecked(checked),null==onChange||onChange(evt,checked)}}))},parameters:{controls:{exclude:["checked"]},docs:{source:{type:"code"}}}},Disabled={parameters:{controls:{exclude:["checked"]}},args:{disabled:!0}},WithLabel={render:_a=>{var{onChange}=_a,args=__rest(_a,["onChange"]);const[checked,setChecked]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(!0);return jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("form",null,jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Label,null,jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Switch,Object.assign({className:"mr-2"},args,{checked,onChange:(evt,checked)=>{setChecked(checked),null==onChange||onChange(evt,checked)}})),"Switch"))},parameters:{controls:{exclude:["checked"]}}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{}",...Basic.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  render: ({\n    onChange,\n    checked: propChecked,\n    ...args\n  }) => {\n    const [checked, setChecked] = React.useState(propChecked);\n    React.useEffect(() => {\n      setChecked(propChecked);\n    }, [propChecked]);\n    const handleChange = (evt: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n      setChecked(checked);\n      onChange?.(evt, checked);\n    };\n    return <Switch {...args} checked={checked} onChange={handleChange} />;\n  },\n  parameters: {\n    controls: {\n      exclude: ['checked']\n    },\n    docs: {\n      source: {\n        type: 'code'\n      }\n    }\n  }\n}",...Controlled.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      exclude: ['checked']\n    }\n  },\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:"{\n  render: ({\n    onChange,\n    ...args\n  }) => {\n    const [checked, setChecked] = React.useState(true);\n    const handleChange = (evt: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n      setChecked(checked);\n      onChange?.(evt, checked);\n    };\n    return <form>\r\n        <Label>\r\n          <Switch className='mr-2' {...args} checked={checked} onChange={handleChange} />\r\n          Switch\r\n        </Label>\r\n      </form>;\n  },\n  parameters: {\n    controls: {\n      exclude: ['checked']\n    }\n  }\n}",...WithLabel.parameters?.docs?.source}}}}}]);