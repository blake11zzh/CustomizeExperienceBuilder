"use strict";(self.webpackChunkarcgis_experience_builder_design_system=self.webpackChunkarcgis_experience_builder_design_system||[]).push([[8096],{"../jimu-icons/filled/application/check.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>CheckFilled});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),_svg_filled_application_check_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../jimu-icons/svg/filled/application/check.svg"),_svg_filled_application_check_svg__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_svg_filled_application_check_svg__WEBPACK_IMPORTED_MODULE_1__),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const CheckFilled=props=>{const SVG=window.SVG,{className}=props,others=__rest(props,["className"]),classes=(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.xWm)("jimu-icon jimu-icon-component",className);return SVG?jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(SVG,Object.assign({className:classes,src:_svg_filled_application_check_svg__WEBPACK_IMPORTED_MODULE_1___default()},others)):jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("svg",Object.assign({className:classes},others))};try{CheckFilled.displayName="CheckFilled",CheckFilled.__docgenInfo={description:"",displayName:"CheckFilled",props:{children:{defaultValue:null,description:"The fallback content in case of a fetch error or unsupported browser.",name:"children",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"The title of the component.",name:"title",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Defines the styles added to the element.",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"Defines the class names added to the component.",name:"className",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"To provide a role for this component.\nIt is for accessibility purposes.",name:"role",required:!1,type:{name:"AriaRole"}},"aria-hidden":{defaultValue:{value:"false"},description:"Indicates whether the element is exposed to an accessibility API.",name:"aria-hidden",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-label":{defaultValue:null,description:"To provide a label for interactive components for accessibility purposes.",name:"aria-label",required:!1,type:{name:"string"}},size:{defaultValue:{value:"m"},description:"Defines the size, both width and height, of the icon.",name:"size",required:!1,type:{name:"string | number"}},loader:{defaultValue:null,description:"A component to be shown while the SVG is loading.",name:"loader",required:!1,type:{name:"ReactNode"}},isRTL:{defaultValue:null,description:"Whether it is in the RTL.\nNote: The default value is read from `getAppStore().getState().appContext?.isRTL` and is provided for use in testing and storybook environments.\n@ignore",name:"isRTL",required:!1,type:{name:"boolean"}},autoFlip:{defaultValue:{value:"false"},description:"Flips the SVG automatically for RTL.",name:"autoFlip",required:!1,type:{name:"boolean"}},currentColor:{defaultValue:{value:"true"},description:"If set to `true`, the `stroke` and `fill` properties on the child elements will be replaced with `currentColor`, in order to make `color` property effective.",name:"currentColor",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../jimu-icons/filled/application/check.tsx#CheckFilled"]={docgenInfo:CheckFilled.__docgenInfo,name:"CheckFilled",path:"../jimu-icons/filled/application/check.tsx#CheckFilled"})}catch(__react_docgen_typescript_loader_error){}},"./stories/jimu-ui/basic/item-selector/item-selector.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllModeItemSelector:()=>AllModeItemSelector,SimpleModeItemSelector:()=>SimpleModeItemSelector,default:()=>__WEBPACK_DEFAULT_EXPORT__});var jimu_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../jimu-core/index.tsx"),_storybook_decorators__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/decorators/index.tsx"),jimu_ui_basic_item_selector__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../jimu-ui/basic/item-selector.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const __WEBPACK_DEFAULT_EXPORT__={title:"Components/jimu-ui/basic/item-selector/ItemSelector",component:jimu_ui_basic_item_selector__WEBPACK_IMPORTED_MODULE_2__.WI,decorators:[_storybook_decorators__WEBPACK_IMPORTED_MODULE_1__.QY,_storybook_decorators__WEBPACK_IMPORTED_MODULE_1__.Xx],argTypes:{}},Template=args=>{jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useEffect((()=>{(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Vp3)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.tRc.updateStoreState((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Vp3)().getState().merge({user:{username:"esri",groups:[{id:"1d1f24e8556642f49448f1c88b5a571b",title:"Esri Maps and Data"},{id:"e288dc13050b4cdd80c0600c2e37919b",title:"Esri Maps"}]}},{deep:!0})))}),[]);const[selectedItemIds,setSelectedItemIds]=jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.useState(null),{onRemove,onSelect,displayName,__docgenInfo}=args,otherArgs=__rest(args,["onRemove","onSelect","displayName","__docgenInfo"]),onSelectedDsChange=selectedItems=>{setSelectedItemIds((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.J3Z)(null==selectedItems?void 0:selectedItems.map((item=>null==item?void 0:item.id))))};return jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement("div",{style:otherArgs.mode!==jimu_ui_basic_item_selector__WEBPACK_IMPORTED_MODULE_2__.kV.Simple?{width:"960px",height:"600px"}:{width:"260px",height:"800px"}},jimu_core__WEBPACK_IMPORTED_MODULE_0__.q_G.createElement(jimu_ui_basic_item_selector__WEBPACK_IMPORTED_MODULE_2__.dj,Object.assign({},otherArgs,{selectedItems:selectedItemIds,onRemove:onSelectedDsChange,onSelect:onSelectedDsChange})))},AllModeItemSelector=Template.bind({});AllModeItemSelector.args={portalUrl:"https://www.arcgis.com",itemType:(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.J3Z)([jimu_core__WEBPACK_IMPORTED_MODULE_0__.RfI.WebMap,jimu_core__WEBPACK_IMPORTED_MODULE_0__.RfI.WebScene]),isMultiple:!0};const SimpleModeItemSelector=Template.bind({});SimpleModeItemSelector.args={portalUrl:"https://www.arcgis.com",itemType:(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.J3Z)([jimu_core__WEBPACK_IMPORTED_MODULE_0__.RfI.GeocodingService,jimu_core__WEBPACK_IMPORTED_MODULE_0__.RfI.GeoprocessingService]),isMultiple:!0,mode:jimu_ui_basic_item_selector__WEBPACK_IMPORTED_MODULE_2__.kV.Simple},AllModeItemSelector.parameters={...AllModeItemSelector.parameters,docs:{...AllModeItemSelector.parameters?.docs,source:{originalSource:"args => {\n  React.useEffect(() => {\n    getAppStore().dispatch(appActions.updateStoreState(getAppStore().getState().merge({\n      user: {\n        username: 'esri',\n        groups: [{\n          id: '1d1f24e8556642f49448f1c88b5a571b',\n          title: 'Esri Maps and Data'\n        }, {\n          id: 'e288dc13050b4cdd80c0600c2e37919b',\n          title: 'Esri Maps'\n        }] as IGroup[]\n      }\n    }, {\n      deep: true\n    })));\n  }, []);\n  const [selectedItemIds, setSelectedItemIds] = React.useState<ImmutableArray<string>>(null);\n  // eslint-disable-next-line\n  const {\n    onRemove,\n    onSelect,\n    displayName,\n    __docgenInfo,\n    ...otherArgs\n  } = args;\n  const onSelectedDsChange = (selectedItems: IItem[]) => {\n    setSelectedItemIds(Immutable(selectedItems?.map(item => item?.id)));\n  };\n  return <div style={otherArgs.mode !== ItemSelectorMode.Simple ? {\n    width: '960px',\n    height: '600px'\n  } : {\n    width: '260px',\n    height: '800px'\n  }}>\r\n    <ItemSelector {...otherArgs} selectedItems={selectedItemIds} onRemove={onSelectedDsChange} onSelect={onSelectedDsChange} />\r\n  </div>;\n}",...AllModeItemSelector.parameters?.docs?.source}}},SimpleModeItemSelector.parameters={...SimpleModeItemSelector.parameters,docs:{...SimpleModeItemSelector.parameters?.docs,source:{originalSource:"args => {\n  React.useEffect(() => {\n    getAppStore().dispatch(appActions.updateStoreState(getAppStore().getState().merge({\n      user: {\n        username: 'esri',\n        groups: [{\n          id: '1d1f24e8556642f49448f1c88b5a571b',\n          title: 'Esri Maps and Data'\n        }, {\n          id: 'e288dc13050b4cdd80c0600c2e37919b',\n          title: 'Esri Maps'\n        }] as IGroup[]\n      }\n    }, {\n      deep: true\n    })));\n  }, []);\n  const [selectedItemIds, setSelectedItemIds] = React.useState<ImmutableArray<string>>(null);\n  // eslint-disable-next-line\n  const {\n    onRemove,\n    onSelect,\n    displayName,\n    __docgenInfo,\n    ...otherArgs\n  } = args;\n  const onSelectedDsChange = (selectedItems: IItem[]) => {\n    setSelectedItemIds(Immutable(selectedItems?.map(item => item?.id)));\n  };\n  return <div style={otherArgs.mode !== ItemSelectorMode.Simple ? {\n    width: '960px',\n    height: '600px'\n  } : {\n    width: '260px',\n    height: '800px'\n  }}>\r\n    <ItemSelector {...otherArgs} selectedItems={selectedItemIds} onRemove={onSelectedDsChange} onSelect={onSelectedDsChange} />\r\n  </div>;\n}",...SimpleModeItemSelector.parameters?.docs?.source}}}}}]);