{"version":3,"file":"6990.0d4c3d59.iframe.bundle.js","mappings":";;;AAMA;;;;;;;;;;;;;;;AAeA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;;AAaA;;;;;;;;AAQA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;AAIA;;AAEA;;;AAGA;;;;;AAKA;;;AAGA;AACA;;;;AAIA;;;;AAIA;;;;;;;;;;AAUA;;;;;;;;;;;;AAYA;;;;AAIA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;;;;AAaA;;;;;AAMA;;ACrJA;;;;;;;;;;;;;;;;;;AAkBA;;AAEA;;;AAGA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;AAeA;AACA;;;;;AAKA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;;;AAKA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;;;AAGA;AACA;;;;;AAKA;AACA;AACA;;;AAGA;AACA;;;AAGA;;AAEA;;;AAGA;;;;;;;;;;;AAWA;;;;;;;;;;;AAWA;AACA;;;;;;AAMA;;;;;;;;;;;;;;AAeA;;;;;;ACvOA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;AAUA;AACA;;;;AAIA;;;;;;;;;;;;;AAaA;AACA;;;;AAIA;AACA;;;;;;;;;;;;;;AAeA;;;;;;;ACtDA;;;;;;AAMA;;AAEA;AACA;AACA;;;AAGA;AACA;;;AAGA;;;;;AAKA;AACA;AACA;;;;;AAKA;;;;;AAKA;;;;;;;AAOA;;;;;AAKA;;;;;AAKA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;;;;;;;;AAQA;;;;;;AAMA;AACA;;;AAGA;;AAEA;;;;;;;;;;AAUA;;;;;AAKA;;;;;AAKA;;;;AAIA;;;;;;AAMA;;;;;AAKA;;;;;AAKA;;;;;;AAMA;;;AAGA;;;AAGA;;;AAGA;AACA;;;;;;;;;;AAWA;;ACtKA;AACA;;;;;AAKA;;;AAGA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;;;;;;;AAiBA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;AAGA;AACA;;;;;AAKA;;;;;;;AAQA;;;ACtEA;;AAEA;;;;;;;AAOA;;;AAGA;;;AAGA;AACA;AACA;;;;;;AAOA;;ACzBA;;AAEA;;;AAGA;AACA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;AAKA;;;;;;AAMA;;;AAGA;;;;;AAKA;;;;;;AAOA;;;AC/CA;;AAEA;;;AAIA;;ACPA;AACA;;;;AAIA;AACA;AACA;;;AAGA;;;;;;;;;;AAUA;;;;AAIA;;;AAGA;;;AAGA;;;;;;;;;;;;;;;;AAgBA;;;AAGA;;;AAGA;AACA;;AAEA;;;;;;;AAOA;;;AAGA;;;AAGA;;;;AAIA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;AAcA;;;;AAIA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;;;;AAIA;;;;;AAKA;AACA;AACA;;AAEA;;;;AAKA;;;;;;;;;;;;;;;;;;;;AC3GA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;;AAIA;;AAEA;;;;AAIA;;AAEA;;AAEA;;;AAIA;;ACoIA;;;;;AAKA;;;;;;;AAOA;AACA;AACA;;;;;;;;AASA","sources":["webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-selector.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-list.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-tree.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/external-data-source-selector.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-item.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-error-item.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/field-selector.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/main-data-and-view-selector.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-view-setting-popup.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/styles/components/data-source-remove-warning-popup.ts","webpack://arcgis-experience-builder-design-system/../jimu-ui/advanced/lib/data-source-selector/components/field-selector-with-full-text-index.tsx"],"sourcesContent":["import { css, polished } from 'jimu-core';\nexport function dataSourceSelectorStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-data-source-selector{\r\n      .font-dark-600{\r\n        color: ${theme.ref.palette.neutral[1000]};\r\n      }\r\n      .font-weight-500{\r\n        font-weight: 500;\r\n      }\r\n      .added-ds-item{\r\n        position: relative;\r\n        .loading-container{\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n        }\r\n        .loading-placeholder{\r\n          width: 100%;\r\n          background-color: ${theme.ref.palette.neutral[500]};\r\n          padding: ${polished.rem(10)};\r\n          .first-line{\r\n            .first-line-left{\r\n              width: ${polished.rem(18)};\r\n              height: ${polished.rem(18)};\r\n              background-color: ${theme.ref.palette.neutral[600]};\r\n            }\r\n            .first-line-right{\r\n              height: ${polished.rem(10)};\r\n              background-color: ${theme.ref.palette.neutral[600]};\r\n            }\r\n          }\r\n          .second-line{\r\n            height: ${polished.rem(26)};\r\n            background-color: ${theme.ref.palette.neutral[600]};\r\n          }\r\n        }\r\n      }\r\n      .data-view-dropdown-menu-button{\r\n        background: ${theme.sys.color.secondary.dark};\r\n        text-align: left;\r\n      }\r\n      .dv-select-container{\r\n        margin-top: ${polished.rem(12)};\r\n        .jimu-dropdown-button{\r\n          .settings-icon{\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n      .create-view-button{\r\n        position: relative;\r\n        margin-top: 2px;\r\n        padding-top: 8px;\r\n        .create-view-button-border{\r\n          width: 90%;\r\n          border-top: 1px solid ${theme.ref.palette.neutral[700]};\r\n          position: absolute;\r\n          top: 0;\r\n          left: 50%;\r\n          transform: translate(-50%, 0);\r\n        }\r\n      }\r\n      .ds-selector-button{\r\n        height: ${polished.rem(40)};\r\n        line-height: ${polished.rem(40)};\r\n        padding: 0;\r\n        border: 1px dashed ${theme.ref.palette.neutral[800]};\r\n        border-radius: ${polished.rem(2)};\r\n        cursor: pointer;\r\n        color: ${theme.sys.color.primary.light};\r\n        font-size: ${polished.rem(14)};\r\n        text-decoration: none;\r\n        &:hover{\r\n          border-color: ${theme.ref.palette.neutral[900]};\r\n          color: ${theme.sys.color.primary.light};\r\n        }\r\n      }\r\n      .ds-item.ds-error-item{\r\n        background-color: ${theme.sys.color.secondary.main};\r\n        *{\r\n          color: ${theme.ref.palette.neutral[900]} !important;\r\n        }\r\n        .ds-thumbnail{\r\n          background-color: ${theme.sys.color.secondary.dark};\r\n        }\r\n      }\r\n      .ds-item{\r\n        &:not(:first-of-type) {\r\n          margin-top: ${polished.rem(8)};\r\n        }\r\n\r\n        padding: ${polished.rem(8)} ${polished.rem(10)} ${polished.rem(10)} ${polished.rem(10)};\r\n        background-color: ${theme.sys.color.secondary.main};\r\n        cursor: pointer;\r\n\r\n        &:hover{\r\n          background-color: ${theme.ref.palette.neutral[600]};\r\n        }\r\n\r\n        .mr-30{\r\n          margin-right: ${polished.rem(30)};\r\n        }\r\n\r\n        &.disable-cursor{\r\n          cursor: default;\r\n        }\r\n\r\n        .ds-item-close{\r\n          height: 100%;\r\n          cursor: pointer;\r\n          margin-left: ${polished.rem(5)};\r\n          margin-right: -5px;\r\n        }\r\n\r\n        .ds-item-filter{\r\n          height: 100%;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .ds-item-sort{\r\n          height: 100%;\r\n          cursor: pointer;\r\n          margin-left: ${polished.rem(5)};\r\n        }\r\n\r\n        .ds-thumbnail{\r\n          width:  ${polished.rem(18)};\r\n          height:  ${polished.rem(18)};\r\n          background-color: ${theme.sys.color.info.main};\r\n        }\r\n        .ds-type{\r\n          font-size: ${polished.rem(14)};\r\n          color: ${theme.ref.palette.neutral[1100]};\r\n        }\r\n        .top-right-red-dot-container{\r\n          position: relative;\r\n        }\r\n        .top-right-red-dot{\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 4px;\r\n          background-color: ${theme.sys.color.error.dark};\r\n        }\r\n      }\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataSourceListStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-data-source-list{\r\n      font-size: ${theme.ref.typeface.fontSize};\r\n      overflow: hidden;\r\n\r\n      .loading-container{\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n      }\r\n      .loading-container-for-label {\r\n        margin-top: -5px;\r\n      }\r\n      .loading-container-for-item {\r\n        margin-top: -2px;\r\n      }\r\n\r\n      .ds-item.ds-item-loading {\r\n        overflow: visible;\r\n        background-color: ${theme.sys.color.secondary.main};\r\n          *:not(.item-active-icon svg, .ds-close-icon){\r\n            color: ${theme.ref.palette.neutral[900]} !important;\r\n          }\r\n          .ds-thumbnail{\r\n            background-color: ${theme.ref.palette.neutral[700]};\r\n          }\r\n          .ds-close-icon{\r\n            color: ${theme.ref.palette.neutral[1000]} !important;\r\n          }\r\n        }\r\n      .remove-link-style {\r\n        color: inherit !important;\r\n        text-decoration: none !important;\r\n        background-color: transparent !important;\r\n      }\r\n      .remove-link-style:hover {\r\n          color: inherit !important;\r\n          text-decoration: none !important;\r\n      }\r\n\r\n      .data-tabs .tab-content .tab-pane {\r\n        padding-top: 16px;\r\n      }\r\n\r\n      .search{\r\n        position: relative;\r\n      }\r\n      .search-input{\r\n        height: 26px;\r\n        border-radius: 2px;\r\n      }\r\n      .search-icon{\r\n        color: ${theme.ref.palette.neutral[1000]};\r\n      }\r\n\r\n      .empty-placeholder{\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        padding-left: 16px;\r\n        padding-right: 16px;\r\n        .empty-placeholder-text, .empty-placeholder-icon{\r\n          display: table;\r\n          margin: 0 auto;\r\n        }\r\n        .empty-placeholder-text{\r\n          color: ${theme.ref.palette.neutral[900]};\r\n          font-size: ${polished.rem(14)};\r\n          margin-top: 16px;\r\n          text-align: center;\r\n        }\r\n        .empty-placeholder-icon{\r\n          color: ${theme.ref.palette.neutral[800]};\r\n        }\r\n      }\r\n\r\n      .jimu-tabs{\r\n        height: 100%;\r\n        .tab-content{\r\n          height: calc(100% - 40px);\r\n        }\r\n        .tab-pane{\r\n          width: 100%;\r\n        }\r\n        .jimu-nav.nav-pills{\r\n            margin: 0 ${polished.rem(16)} !important;\r\n          }\r\n      }\r\n\r\n      .ds-list-container{\r\n        height: calc(100% - 120px);\r\n      }\r\n\r\n      .ds-list{\r\n        height: calc(100% - 20px);\r\n        overflow: auto;\r\n      }\r\n\r\n      .ds-list-header{\r\n        width: 100%;\r\n      }\r\n\r\n      .ds-add-data{\r\n        position: absolute;\r\n        bottom: 0;\r\n        height: ${polished.rem(40)};\r\n        width: 100%;\r\n        color: ${theme.sys.color.primary.light};\r\n        font-size: ${polished.rem(14)};\r\n        border-top: 1px solid ${theme.sys.color.secondary.light};\r\n        cursor: pointer;\r\n        &:hover{\r\n          .add-data-icon-container{\r\n            background-color: ${polished.rgba(theme.sys.color.primary.light, 0.8)};\r\n          }\r\n          color: ${polished.rgba(theme.sys.color.primary.light, 0.8)};\r\n        }\r\n        .add-data-icon-container{\r\n          width: ${polished.rem(20)};\r\n          height: ${polished.rem(20)};\r\n          background-color: ${theme.sys.color.primary.light};\r\n          border-radius: ${polished.rem(10)};\r\n        }\r\n        .add-data-icon{\r\n          color: ${theme.ref.palette.neutral[400]};\r\n        }\r\n      }\r\n\r\n      .ds-list-close{\r\n        width: ${polished.rem(30)};\r\n        height: 100%;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .ds-widget-back{\r\n        width: ${polished.rem(80)};\r\n        height: ${polished.rem(30)};\r\n        cursor: pointer;\r\n      }\r\n\r\n      .ds-types{\r\n        color: ${theme.ref.palette.black};\r\n        font-size: ${theme.ref.typeface.fontSize};\r\n      }\r\n\r\n      .ds-remove{\r\n        width: 26px;\r\n        margin-left: -6px;\r\n        display: none;\r\n      }\r\n\r\n      .ds-link{\r\n        width: 26px;\r\n        margin-left: -12px;\r\n        display: none;\r\n      }\r\n\r\n      .ds-widget-outputs{\r\n        padding: 0;\r\n      }\r\n\r\n      .ds-added-data{\r\n        padding: 0;\r\n      }\r\n\r\n      .to-use-types{\r\n        color: ${theme.ref.palette.black};\r\n        .types-selected{\r\n          max-width: ${polished.rem(150)};\r\n        }\r\n        .to-use-dp{\r\n          width: ${polished.rem(120)};\r\n          height: ${polished.rem(26)};\r\n        }\r\n      }\r\n\r\n      .ds-thumbnail{\r\n        width:  ${polished.rem(26)};\r\n        height:  ${polished.rem(26)};\r\n        background-color: ${theme.sys.color.info.main};\r\n      }\r\n      .ds-type{\r\n        font-size: ${polished.rem(14)};\r\n        color: ${theme.ref.palette.neutral[1100]};\r\n      }\r\n      .ds-item.ds-error-item{\r\n        background-color: ${theme.sys.color.secondary.main};\r\n        *{\r\n          color: ${theme.ref.palette.neutral[900]} !important;\r\n        }\r\n        .ds-thumbnail{\r\n          background-color: ${theme.sys.color.secondary.dark};\r\n        }\r\n      }\r\n      .ds-item{\r\n        border: 1px solid transparent;\r\n        border-radius: 0;\r\n        position: relative;\r\n        left: -2px;\r\n        cursor: pointer;\r\n        .item{\r\n          height: 26px;\r\n          background-color: ${theme.sys.color.secondary.main};\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n        }\r\n        .item-active-icon{\r\n          position: absolute;\r\n          top: -1px;\r\n          right: -1px;\r\n          .item-active-icon-container{\r\n            width: 0;\r\n            height: 0;\r\n            border-top: ${polished.rem(12)} ${theme.sys.color.primary.light} solid;\r\n            border-left: ${polished.rem(12)} transparent solid;\r\n            background-color: transparent;\r\n          }\r\n        }\r\n      }\r\n      .ds-item.ds-item-selected{\r\n        border: 1px solid ${theme.sys.color.primary.light};\r\n      }\r\n      .ds-item:not(.ds-item-selected):hover{\r\n        .ds-remove{\r\n            display: flex !important;\r\n          }\r\n      }\r\n      .ds-item:hover{\r\n        .ds-link{\r\n            display: flex !important;\r\n          }\r\n      }\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataSourceTreeStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    *{\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    .bg{\r\n      padding: ${polished.rem(16)} ${polished.rem(2)};\r\n      background-color: ${theme.ref.palette.neutral[300]};\r\n      border-top: 2px solid ${theme.sys.color.primary.light};\r\n    }\r\n    .tree-root{\r\n      padding-left: ${polished.rem(20)};\r\n      padding-right: ${polished.rem(5)};\r\n    }\r\n    .component-data-source-tree{\r\n      position: relative;\r\n      .collapse-button{\r\n        position: absolute;\r\n        left: 2px;\r\n        z-index: 1;\r\n      }\r\n      .collapse-content{\r\n        padding-left: ${polished.rem(20)};\r\n        padding-top: ${polished.rem(16)};\r\n        position: relative;\r\n      }\r\n      .collapse-button:not(.root):not(.leaf){\r\n        left: ${polished.rem(-18)};\r\n      }\r\n      .collapse-button.leaf{\r\n        left: 2px;\r\n      }\r\n      .z-index-1 {\r\n        z-index: 1;\r\n      }\r\n      .collapse-button:not(.root):before{\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: -2px;\r\n        border-top: 1px solid ${theme.ref.palette.neutral[900]};\r\n        width: ${polished.rem(21)};\r\n        transform: translateY(-50%);\r\n      }\r\n      .collapse-line{\r\n        border-left: 1px solid ${theme.ref.palette.neutral[900]};\r\n        border-bottom: 1px solid ${theme.ref.palette.neutral[900]};\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 0;\r\n        z-index: 0;\r\n        transform-origin: top;\r\n        height: 1rem;\r\n        transition: transform 0s;\r\n      }\r\n      .collapse-line:not(.root){\r\n        top: -2px;\r\n      }\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function externalDataSourceSelectorStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-external-data-source-selector{\r\n      height: 100%;\r\n      overflow: hidden;\r\n      position: relative;\r\n\r\n      .selected-ds-loading {\r\n        margin-left: ${polished.rem(-25)};\r\n      }\r\n\r\n      .added-ds-item{\r\n        position: relative;\r\n        cursor: pointer;\r\n        margin: ${polished.rem(16)} ${polished.rem(8)} ${polished.rem(16)} ${polished.rem(10)};\r\n        .ds-thumbnail{\r\n          width:  ${polished.rem(26)};\r\n          height:  ${polished.rem(26)};\r\n          background-color: ${theme.sys.color.info.main};\r\n        }\r\n        .ds-type{\r\n          font-size: ${polished.rem(13)};\r\n          color: ${theme.ref.palette.neutral[1200]};\r\n        }\r\n        .item{\r\n          height: ${polished.rem(26)};\r\n        }\r\n      }\r\n\r\n      .added-ds-container{\r\n        width: ${polished.rem(300)};\r\n        background-color: ${theme.ref.palette.neutral[600]};\r\n        box-shadow: 0 0 10px 4px ${polished.rgba(theme.ref.palette.white, 0.3)};\r\n        position: absolute;\r\n        right: 30px;\r\n        bottom: 30px;\r\n        .added-ds-items{\r\n          max-height: ${polished.rem(500)};\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n        }\r\n        .small-done-btn{\r\n          max-width: ${polished.rem(100)};\r\n        }\r\n      }\r\n\r\n      .selector-left{\r\n        @media only screen and (max-width: 1100px){\r\n          &{\r\n            width: ${polished.rem(160)};\r\n          }\r\n        }\r\n        @media only screen and (min-width: 1100px){\r\n          &{\r\n            width: ${polished.rem(200)};\r\n          }\r\n        }\r\n        @media only screen and (min-width: 1300px){\r\n          &{\r\n            width: ${polished.rem(260)};\r\n          }\r\n        }\r\n        background-color: ${theme.ref.palette.neutral[500]};\r\n        border-right: 1px solid ${theme.ref.palette.neutral[700]};\r\n        .selector-left-title{\r\n          padding: ${polished.rem(20)} ${polished.rem(20)} ${polished.rem(27)} ${polished.rem(20)};\r\n          margin: 0;\r\n          font-size: ${polished.rem(20)};\r\n          color: ${theme.ref.palette.neutral[1000]};\r\n        }\r\n        .nav.nav-underline{\r\n          border: 0;\r\n          .nav-item{\r\n            .nav-link{\r\n              padding: 0;\r\n              border: 0;\r\n              .jimu-nav-link-wrapper{\r\n                display: flex;\r\n                justify-content: flex-start;\r\n                align-items: center;\r\n                padding: ${polished.rem(7)} ${polished.rem(20)};\r\n                font-size: ${polished.rem(16)};\r\n                color: ${theme.ref.palette.neutral[1000]};\r\n              }\r\n            }\r\n          }\r\n\r\n          .nav-item:hover{\r\n            .nav-link{\r\n              .jimu-nav-link-wrapper{\r\n                color: ${theme.ref.palette.black};\r\n              }\r\n            }\r\n          }\r\n\r\n          .nav-item.active-tab{\r\n            background-color: ${theme.ref.palette.neutral[500]};\r\n            border-left: 4px solid ${theme.sys.color.primary.light};\r\n            .nav-link{\r\n              .jimu-nav-link-wrapper{\r\n                color: ${theme.ref.palette.black};\r\n                font-weight: 500;\r\n                padding-left: ${polished.rem(16)};\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .selector-right{\r\n        @media only screen and (max-width: 1100px){\r\n          &{\r\n            width: calc(100% - ${polished.rem(160)});\r\n          }\r\n        }\r\n        @media only screen and (min-width: 1100px){\r\n          &{\r\n            width: calc(100% - ${polished.rem(200)});\r\n          }\r\n        }\r\n        @media only screen and (min-width: 1300px){\r\n          &{\r\n            width: calc(100% - ${polished.rem(260)});\r\n          }\r\n        }\r\n        .selector-right-header{\r\n          padding: ${polished.rem(23)} ${polished.rem(20)} ${polished.rem(12)} ${polished.rem(20)};\r\n        }\r\n        .selector-right-body{\r\n          height: calc(100% - 70px);\r\n          @media only screen and (max-width: 1100px){\r\n            &{\r\n              padding: ${polished.rem(10)} ${polished.rem(25)};\r\n            }\r\n          }\r\n          @media only screen and (min-width: 1100px){\r\n            &{\r\n              padding: ${polished.rem(10)} ${polished.rem(45)};\r\n            }\r\n          }\r\n          @media only screen and (min-width: 1300px){\r\n            &{\r\n              padding: ${polished.rem(10)} ${polished.rem(65)};\r\n            }\r\n          }\r\n        }\r\n        .external-data-source-url-input{\r\n          .url-type-select{\r\n            width: ${polished.rem(250)};\r\n          }\r\n          .url-input{\r\n            width: ${polished.rem(500)};\r\n          }\r\n          .url-input-add-btn{\r\n            height: ${polished.rem(30)};\r\n          }\r\n          .url-input-label{\r\n            font-size: ${polished.rem(13)};\r\n            color: ${theme.ref.palette.neutral[900]};\r\n            margin-bottom: 12px;\r\n            font-weight: 500;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataSourceItemStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-data-source-item{\r\n      background-color: ${theme.ref.palette.neutral[500]};\r\n      font-size: ${polished.rem(12)};\r\n      border-radius: 2px;\r\n      padding: 0;\r\n      position: relative;\r\n      &:hover{\r\n        background-color: ${polished.rgba(theme.ref.palette.neutral[600], 0.8)};\r\n      }\r\n      .font-dark-600{\r\n        color: ${theme.ref.palette.neutral[1000]} !important;\r\n      }\r\n      .loading-container{\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n      }\r\n      .ds-item-header{\r\n        width: 100%;\r\n        height: ${polished.rem(38)};\r\n        padding: 0 10px;\r\n        background-color: ${theme.ref.palette.neutral[600]};\r\n      }\r\n      .ds-item-body{\r\n        width: 100%;\r\n        height: 100%;\r\n        padding: 14px 10px 6px 10px;\r\n      }\r\n      .two-line-truncate{\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        word-wrap: break-word;\r\n      }\r\n      .ds-more{\r\n        margin-right: ${polished.rem(-8)};\r\n      }\r\n      .ds-label{\r\n        font-size: ${polished.rem(14)};\r\n        color: ${theme.ref.palette.neutral[1100]};\r\n      }\r\n      .ds-type{\r\n        font-size: ${polished.rem(13)};\r\n        color: ${theme.ref.palette.neutral[1100]};\r\n      }\r\n      .ds-thumbnail{\r\n        width:  ${polished.rem(18)};\r\n        height:  ${polished.rem(18)};\r\n        background-color: ${theme.sys.color.info.main};\r\n      }\r\n      .ds-related-widgets, .ds-child-dss{\r\n        font-size: ${polished.rem(13)};\r\n      }\r\n      .warning-icon, .warning-icon>*{\r\n        color: ${theme.sys.color.error.dark};\r\n        fill: ${theme.sys.color.error.dark};\r\n      }\r\n    }\r\n\r\n    .component-data-source-item.component-data-source-item-selected-item{\r\n      border: ${polished.rem(2)} solid ${theme.sys.color.primary.main};\r\n    }\r\n\r\n    .cursor-pointer{\r\n      cursor: pointer;\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataSourceErrorItemStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-data-source-error-item{\r\n      .component-data-source-item{\r\n        background-color: ${theme.sys.color.secondary.main};\r\n        *:not(.ds-badge svg, .ds-close-icon){\r\n          color: ${theme.ref.palette.neutral[900]} !important;\r\n        }\r\n\r\n        .ds-origin-label{\r\n          max-width: 100%;\r\n        }\r\n        .ds-item-header{\r\n          background-color: ${theme.sys.color.secondary.main};\r\n        }\r\n        .ds-thumbnail{\r\n          background-color: ${theme.ref.palette.neutral[700]};\r\n        }\r\n        .ds-close-icon{\r\n          color: ${theme.ref.palette.neutral[1000]} !important;\r\n          width: ${polished.rem(14)};\r\n          height: ${polished.rem(14)};\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function fieldSelectorStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-field-selector{\r\n      font-size: ${theme.ref.typeface.fontSize};\r\n      .ds-name{\r\n        color: ${theme.ref.palette.black};\r\n      }\r\n      .ds-name-label{\r\n        font-size: ${polished.rem(14)};\r\n        color: ${theme.ref.palette.neutral[900]};\r\n        font-weight: 400;\r\n      }\r\n      .field-data-selected{\r\n        width: 70%;\r\n      }\r\n\r\n      .item-selector-search{\r\n        height: ${polished.rem(26)};\r\n        position: relative;\r\n      }\r\n\r\n      .field-list{\r\n        height: calc(100% - 160px);\r\n        overflow-y: auto;\r\n        .field-item.field-item-selected{\r\n          border: 2px solid ${theme.sys.color.primary.main};\r\n        }\r\n        .field-item{\r\n          border: 1px solid transparent;\r\n          cursor: pointer;\r\n          background-color: ${theme.ref.palette.neutral[500]};\r\n          user-select: none;\r\n          text-align: left;\r\n          border-radius: 0;\r\n        }\r\n        .field-item:hover{\r\n          background-color: ${theme.ref.palette.neutral[500]};\r\n        }\r\n        .field-item:active.field-item:hover{\r\n          background-color: ${theme.ref.palette.white};\r\n        }\r\n      }\r\n\r\n      .search-input{\r\n        height: ${polished.rem(26)};\r\n        width: 100%;\r\n      }\r\n\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function mainDataAndViewSelectorStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .component-main-data-and-view{\r\n      .option-label{\r\n        font-size: ${polished.rem(13)};\r\n        font-weight: 500;\r\n        color: ${theme.ref.palette.neutral[900]};\r\n      }\r\n    }\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataViewSettingPopupStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    .data-view-container{\r\n      width: ${polished.rem(960)};\r\n      height: ${polished.rem(600)};\r\n      border: 0;\r\n    }\r\n    .circle-button{\r\n      width: ${polished.rem(32)};\r\n      height: ${polished.rem(32)};\r\n      border-radius: ${polished.rem(16)};\r\n    }\r\n    .domain-field-icon {\r\n      color: ${theme.ref.palette.neutral[1000]};\r\n      vertical-align: sub;\r\n    }\r\n    .w-38{\r\n      width: 38%;\r\n    }\r\n    .w-62{\r\n      width: 62%;\r\n    }\r\n    .pb-30{\r\n      padding-bottom: ${polished.rem(30)};\r\n    }\r\n    .preview-table{\r\n      position: relative;\r\n      padding-left: ${polished.rem(30)};\r\n    }\r\n    .setting-table{\r\n      padding-right: ${polished.rem(30)};\r\n      border-right-width: 2px;\r\n      border-right-style: solid;\r\n      border-image: linear-gradient(180deg, transparent 0%, ${theme.ref.palette.neutral[500]} 52.08%, transparent 100%) 1;\r\n      border-left: 0;\r\n    }\r\n    .table-container{\r\n      height : 100%;\r\n      overflow-x: auto;\r\n      .table-body{\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n        width: fit-content;\r\n      }\r\n      .table-header{\r\n        position: sticky;\r\n        top: 0;\r\n      }\r\n      tr{\r\n        border-top: 1px solid ${theme.ref.palette.neutral[500]};\r\n      }\r\n      tr:last-child{\r\n        border-bottom: 1px solid ${theme.ref.palette.neutral[500]};\r\n      }\r\n      td, th{\r\n        width: ${polished.rem(86)};\r\n        height: ${polished.rem(32)};\r\n        display: inline-block !important;\r\n        border-left: 1px solid ${theme.ref.palette.neutral[500]};\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        padding: 6px 4px;\r\n      }\r\n      td{\r\n        background-color: ${theme.ref.palette.neutral[300]};\r\n      }\r\n      th{\r\n        background-color: ${theme.ref.palette.neutral[500]};\r\n      }\r\n      td:last-child, th:last-child{\r\n        border-right: 1px solid ${theme.ref.palette.neutral[500]};\r\n      }\r\n    }\r\n    .modal-body{\r\n      height: calc(100% - ${polished.rem(150)});\r\n      padding: ${polished.rem(30)};\r\n      padding-bottom: ${polished.rem(14)};\r\n    }\r\n    &.modal-dialog{\r\n      max-width: ${polished.rem(960)};\r\n    }\r\n    .modal-header{\r\n      .close{\r\n        display: none;\r\n      }\r\n      .modal-title{\r\n        width: 100%;\r\n        display: flex !important;\r\n        align-items: center !important;\r\n      }\r\n    }\r\n\r\n    .jimu-nav{\r\n      margin-bottom: ${polished.rem(20)};\r\n    }\r\n\r\n    .label{\r\n      font-size: ${polished.rem(13)};\r\n      color: ${theme.ref.palette.neutral[900]};\r\n    }\r\n\r\n    .header{\r\n      height: ${polished.rem(54)};\r\n      padding-left: ${polished.rem(30)};\r\n      padding-right: ${polished.rem(30)};\r\n    }\r\n\r\n    .modal-footer{\r\n      padding-left: ${polished.rem(30)};\r\n      padding-right: ${polished.rem(30)};\r\n    }\r\n\r\n    .tab-content{\r\n      height: ${polished.rem(426)};\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .sql-exp-warning{\r\n      color: ${theme.sys.color.error.main};\r\n      font-size: ${theme.sys.spacing(4)};\r\n      max-width: ${polished.rem(600)};\r\n      .sql-exp-warning-icon{\r\n        color: ${theme.sys.color.error.main};\r\n      }\r\n    }\r\n\r\n  `;\n}\n","import { css, polished } from 'jimu-core';\nexport function dataSourceRemoveWarningPopupStyles(props) {\n    const theme = props.theme;\n    return css `\r\n    &.modal-dialog{\r\n      position: fixed !important;\r\n      top: 50% !important;\r\n      left: 50% !important;\r\n      transform: translate(-50%, -50%) !important;\r\n      width: 480px;\r\n    }\r\n    .modal-content{\r\n      border: 0;\r\n    }\r\n    .modal-header, .modal-body{\r\n      padding-left: 20px;\r\n      padding-right: 20px;\r\n    }\r\n    .modal-footer{\r\n      padding-top: 0;\r\n      padding-bottom: 20px;\r\n    }\r\n    .font-16{\r\n      font-size: ${polished.rem(16)};\r\n    }\r\n    .font-14{\r\n      font-size: ${polished.rem(14)};\r\n    }\r\n    .font-13{\r\n      font-size: ${polished.rem(13)};\r\n    }\r\n    .font-dark-800{\r\n      color: ${theme.ref.palette.neutral[1100]};\r\n    }\r\n    .font-dark-600{\r\n      color: ${theme.ref.palette.neutral[1000]};\r\n    }\r\n    .related-widgets{\r\n      width: 100%;\r\n      height: ${polished.rem(160)};\r\n      overflow: auto;\r\n      background-color: ${theme.ref.palette.neutral[300]};\r\n    }\r\n    .related-outputs{\r\n      width: 100%;\r\n      max-height: ${polished.rem(80)};\r\n      overflow: auto;\r\n      background-color: ${theme.ref.palette.neutral[300]};\r\n      div.output-ds-label+div.output-ds-label{\r\n        margin-top: ${polished.rem(8)};\r\n      }\r\n    }\r\n  `;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/** @jsx jsx */\nimport { React, jsx, css, polished, Immutable, requestUtils, JimuFieldType, DataSourceManager, EsriFieldType, hooks } from 'jimu-core';\nimport { FieldSelector } from './field-selector';\nimport * as restRequest from '@esri/arcgis-rest-request';\nimport { defaultMessages } from 'jimu-ui';\nconst { useState, useEffect, useRef } = React;\nexport var AddDefinitionStatus;\n(function (AddDefinitionStatus) {\n    AddDefinitionStatus[\"Success\"] = \"SUCCESS\";\n    AddDefinitionStatus[\"Error\"] = \"ERROR\";\n})(AddDefinitionStatus || (AddDefinitionStatus = {}));\nexport const FieldSelectorWithFullTextIndex = (props) => {\n    const hadUpdateDefaultIndexes = useRef(false);\n    const nls = hooks.useTranslation(defaultMessages);\n    const { useDataSources, selectedFields, addDefinitionStatusChange, onChange } = props;\n    const [showLoading, setShowLoading] = useState(false);\n    const [allSelectedFields, setAllSelectedFields] = useState(null);\n    useEffect(() => {\n        if (!hadUpdateDefaultIndexes.current && selectedFields) {\n            const newSelectedFields = getFieldSchema(selectedFields);\n            setAllSelectedFields(newSelectedFields);\n            hadUpdateDefaultIndexes.current = true;\n            addIndexesForDs(newSelectedFields);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedFields]);\n    useEffect(() => {\n        return () => {\n            addIndexesForDs();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const getFieldSchema = (selectedFields) => {\n        var _a;\n        const ds = getDs();\n        if (!ds || !selectedFields)\n            return [];\n        const fields = ((_a = ds === null || ds === void 0 ? void 0 : ds.getSchema()) === null || _a === void 0 ? void 0 : _a.fields) || {};\n        const fieldSchema = [];\n        for (const jimuName in fields) {\n            if (selectedFields.includes(fields[jimuName].name)) {\n                fieldSchema.push(Immutable(fields[jimuName]));\n            }\n        }\n        return fieldSchema;\n    };\n    const getCurrentServiceIndexes = () => __awaiter(void 0, void 0, void 0, function* () {\n        const ds = getDs();\n        const dsUrl = ds.getDataSourceJson().url;\n        return requestUtils.requestWrapper(dsUrl, (session) => __awaiter(void 0, void 0, void 0, function* () {\n            return restRequest.request(dsUrl, {\n                params: {\n                    f: 'json'\n                },\n                authentication: session,\n                httpMethod: 'GET'\n            }).then(res => {\n                const indexes = (res === null || res === void 0 ? void 0 : res.indexes) || [];\n                return Promise.resolve(indexes);\n            });\n        }));\n    });\n    const onFieldChange = hooks.useEventCallback((allSelectedFields, ds, isSelectedFromRepeatedDataSourceContext) => {\n        setAllSelectedFields(allSelectedFields);\n        onChange && onChange(allSelectedFields, ds, isSelectedFromRepeatedDataSourceContext);\n    });\n    const addToDefinitionForDs = (fields, ds) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!fields || (fields === null || fields === void 0 ? void 0 : fields.length) === 0)\n            return false;\n        const dsUrl = ds.getDataSourceJson().url;\n        const indexes = getIndexesByField(fields);\n        if (!indexes || (indexes === null || indexes === void 0 ? void 0 : indexes.length) === 0)\n            return false;\n        setShowLoading(true);\n        yield requestUtils.requestWrapper(dsUrl, (session) => __awaiter(void 0, void 0, void 0, function* () {\n            if (!session) {\n                setShowLoading(false);\n                return;\n            }\n            const adminUrlRegExp = /rest\\/services/g;\n            let addToDefinitionUrl = `${dsUrl}/addToDefinition`;\n            addToDefinitionUrl = addToDefinitionUrl.replace(adminUrlRegExp, 'rest/admin/services');\n            yield restRequest.request(addToDefinitionUrl, {\n                params: {\n                    f: 'json',\n                    async: true,\n                    addToDefinition: { indexes: indexes }\n                },\n                authentication: session,\n                httpMethod: 'POST'\n            }).then(res => {\n                if (res === null || res === void 0 ? void 0 : res.error) {\n                    addDefinitionStatusChange && addDefinitionStatusChange(AddDefinitionStatus.Error);\n                }\n                else {\n                    addDefinitionStatusChange && addDefinitionStatusChange(AddDefinitionStatus.Success);\n                    updateDsDefinition(indexes);\n                }\n                setShowLoading(false);\n            }).catch(err => {\n                addDefinitionStatusChange && addDefinitionStatusChange(AddDefinitionStatus.Error);\n                setShowLoading(false);\n            });\n        }));\n    });\n    const updateDsDefinition = (newIndexes = []) => {\n        const ds = getDs();\n        const definition = ds.getLayerDefinition();\n        let indexes = (definition === null || definition === void 0 ? void 0 : definition.indexes) || [];\n        indexes = indexes.concat(newIndexes);\n        const newDefinition = Object.assign(Object.assign({}, definition), { indexes });\n        ds.setLayerDefinition(newDefinition);\n    };\n    const getCurrentDsIndexesField = () => __awaiter(void 0, void 0, void 0, function* () {\n        let indexesField = [];\n        return getCurrentServiceIndexes().then(indexes => {\n            indexes === null || indexes === void 0 ? void 0 : indexes.forEach(item => {\n                var _a;\n                if (item.fields && (item === null || item === void 0 ? void 0 : item.indexType) === 'FullText') {\n                    const currentFields = ((_a = item.fields) === null || _a === void 0 ? void 0 : _a.split(', ')) || [];\n                    indexesField = indexesField.concat(currentFields);\n                }\n            });\n            return Promise.resolve(indexesField);\n        });\n    });\n    const getShouldAddIndexFields = (fields) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!fields)\n            return [];\n        return getCurrentDsIndexesField().then(indexesField => {\n            const shouldAddIndexFields = fields.filter(field => !(indexesField === null || indexesField === void 0 ? void 0 : indexesField.includes(field.name)));\n            return Promise.resolve(shouldAddIndexFields);\n        });\n    });\n    const getIndexesByField = (allSelectedFields) => {\n        var _a, _b;\n        const indexes = [];\n        allSelectedFields.forEach(fields => {\n            if (fields.esriType !== EsriFieldType.GlobalID && fields.type === JimuFieldType.String) {\n                indexes.push({\n                    name: `exb_${fields.name}`,\n                    fields: fields.name\n                });\n            }\n        });\n        const totalIndex = {\n            name: `exb_${(_a = allSelectedFields === null || allSelectedFields === void 0 ? void 0 : allSelectedFields[0]) === null || _a === void 0 ? void 0 : _a.name}_total`,\n            fields: (_b = allSelectedFields === null || allSelectedFields === void 0 ? void 0 : allSelectedFields.map(field => field.name)) === null || _b === void 0 ? void 0 : _b.join(', '),\n            indexType: 'FullText'\n        };\n        indexes.push(totalIndex);\n        return indexes;\n    };\n    const toggleDropdown = (isOpen) => {\n        if (isOpen)\n            return false;\n        addIndexesForDs();\n    };\n    const getDs = () => {\n        var _a;\n        const dsId = (_a = useDataSources[0]) === null || _a === void 0 ? void 0 : _a.dataSourceId;\n        const dsManager = DataSourceManager.getInstance();\n        return dsManager.getDataSource(dsId);\n    };\n    const addIndexesForDs = (selectedFields) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b;\n        const ds = getDs();\n        const supportsFullTextSearch = (_b = (_a = ds === null || ds === void 0 ? void 0 : ds.getLayerDefinition()) === null || _a === void 0 ? void 0 : _a.advancedQueryCapabilities) === null || _b === void 0 ? void 0 : _b.supportsFullTextSearch;\n        if (supportsFullTextSearch) {\n            const currentSelectedFields = selectedFields || allSelectedFields;\n            const fields = yield getShouldAddIndexFields(currentSelectedFields);\n            addToDefinitionForDs(fields, ds);\n        }\n    });\n    const STYLE = css `\r\n    .loading {\r\n      margin-top: ${polished.rem(6)};\r\n      color: var(--ref-palette-neutral-900);\r\n      align\r\n    }\r\n    .loading-msg {\r\n      margin-left: ${polished.rem(10)};\r\n    }\r\n    .loading-icon-con {\r\n      @keyframes loading {\r\n        0% {transform: rotate(0deg); };\r\n        100% {transform: rotate(360deg)};\r\n      }\r\n      width: ${polished.rem(16)};\r\n      height: ${polished.rem(16)};\r\n      min-width: ${polished.rem(16)};\r\n      border: 2px solid var(--ref-palette-neutral-900);\r\n      border-radius: 50%;\r\n      border-top: 2px solid var(--sys-color-primary-main);\r\n      box-sizing: border-box;\r\n      animation:loading 2s infinite linear;\r\n      box-sizing: border-box;\r\n    }\r\n  `;\n    return (jsx(\"div\", { className: 'field-selector-with-full-text-index-con w-100', css: STYLE },\n        jsx(FieldSelector, Object.assign({}, props, { onChange: onFieldChange, toggle: toggleDropdown })),\n        showLoading && jsx(\"div\", { className: 'loading d-flex align-items-center' },\n            jsx(\"div\", { className: 'loading-icon-con' }),\n            jsx(\"div\", { className: 'loading-msg' }, nls('creatingIndexes')))));\n};\n"],"names":[],"sourceRoot":""}