"use strict";(self.webpackChunkafd_experience_builder_doc=self.webpackChunkafd_experience_builder_doc||[]).push([[5184],{74021:function(e,t,n){var l=n(28453),a=n(96540);function r(e){const t=Object.assign({ol:"ol",li:"li",p:"p",a:"a",strong:"strong"},(0,l.RP)(),e.components),{MoreInfo:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MoreInfo",!0),a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Download the Starter Widget template ",a.createElement(t.a,{href:"/experience-builder/zips/create-a-starter-widget.zip"},"here"),"."),"\n",a.createElement(n,null,a.createElement(t.p,null,"If you have already completed the ",a.createElement(t.a,{href:"/experience-builder/guide/create-a-starter-widget/"},"create a starter widget tutorial"),", you can start with that. Duplicate the widget folder within ",a.createElement(t.strong,null,"/client/your-extensions/widgets"),".")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ArcGIS Experience Builder ",a.createElement(t.strong,null,"folder"),", extract the zip into the following path: ",a.createElement(t.strong,null,"/client/your-extensions/widgets"),"."),"\n"),"\n")}t.A=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)}},23784:function(e,t,n){var l=n(28453),a=n(96540);function r(e){const t=Object.assign({p:"p",ol:"ol",li:"li",code:"code",pre:"pre",strong:"strong"},(0,l.RP)(),e.components),{MoreInfo:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MoreInfo",!0),a.createElement(a.Fragment,null,a.createElement(t.p,null,"A settings panel can be implemented to allow Experience authors to customize the widget. The settings panel appears in the right-hand sidebar when a widget is selected in ArcGIS Experience Builder. To create the panel, create a React component."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the widget root folder, create a ",a.createElement(t.code,null,"config.json")," file that contains an empty object."),"\n",a.createElement(n,null,a.createElement(t.p,null,"At a later time, widget configuration parameters can be added to this object to store widget setting values.")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-json"},"{}\n")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.strong,null,"src")," folder, create another folder called ",a.createElement(t.strong,null,"setting"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.strong,null,"setting")," folder, create a ",a.createElement(t.code,null,"setting.tsx")," file."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Open the ",a.createElement(t.strong,null,"setting/setting.tsx")," file and include the following import statements."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"import { React } from 'jimu-core'\nimport { type AllWidgetSettingProps } from 'jimu-for-builder'\n")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Add code to implement the component."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},'const Setting = (props: AllWidgetSettingProps<any>) => {\nreturn <div className="widget-setting-demo">This is your starter widget setting area!</div>\n}\n\nexport default Setting\n')),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the terminal, stop (",a.createElement(t.code,null,"ctrl + c"),") (if applicable) and start the ",a.createElement(t.code,null,"npm start")," script in the ",a.createElement(t.strong,null,"client")," folder."),"\n"),"\n"))}t.A=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)}},25669:function(e,t,n){var l=n(28453),a=n(96540);function r(e){const t=Object.assign({p:"p",ol:"ol",li:"li",strong:"strong",code:"code",pre:"pre"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"In ArcGIS Experience Builder, there can be more than one Map Widget on the page at a time. Because of this, a custom widget must have a section of its Settings Panel that allows the author to choose which map widget to use."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.strong,null,"setting/setting.tsx")," file, include the ",a.createElement(t.code,null,"MapWidgetSelector")," module from the ",a.createElement(t.code,null,"jimu")," library."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"import { MapWidgetSelector } from 'jimu-ui/advanced/setting-components'\n")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Within the component, define the ",a.createElement(t.code,null,"onMapWidgetSelected")," function."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},'// *** ADD ***\nconst onMapWidgetSelected = (useMapWidgetIds: string[]) => {\n  props.onSettingChange({\n    id: props.id,\n    useMapWidgetIds: useMapWidgetIds\n  })\n}\n\nreturn <div className="widget-setting-demo">This is your starter widget setting area!</div>;\n')),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.code,null,"return()")," statement, add a tag representing the ",a.createElement(t.code,null,"MapWidgetSelector"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},'return (\n  <div className="widget-setting-demo">\n    <MapWidgetSelector useMapWidgetIds={props.useMapWidgetIds} onSelect={onMapWidgetSelected} />\n  </div>\n)\n')),"\n"),"\n"))}t.A=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)}},40698:function(e,t,n){var l=n(28453),a=n(96540);function r(e){const t=Object.assign({p:"p",a:"a",code:"code",ol:"ol",li:"li",strong:"strong",pre:"pre"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"In the previous step, the settings panel was enhanced to allow the Map widget to be selected. The map object can be accessed using the ",a.createElement(t.a,{href:"https://developers.arcgis.com/experience-builder/api-reference/jimu-arcgis/JimuMapViewComponent/"},a.createElement(t.code,null,"JimuMapViewComponent")),"."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.strong,null,"widget.tsx")," file, add the ",a.createElement(t.a,{href:"https://developers.arcgis.com/experience-builder/api-reference/jimu-arcgis/JimuMapViewComponent/"},a.createElement(t.code,null,"JimuMapViewComponent"))," and ",a.createElement(t.a,{href:"https://developers.arcgis.com/experience-builder/api-reference/jimu-arcgis/JimuMapView/"},a.createElement(t.code,null,"JimuMapView"))," types from the ",a.createElement(t.code,null,"jimu-arcgis")," library, and destructure the React variable to get access to the ",a.createElement(t.code,null,"getState")," import."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"import { React, type AllWidgetProps } from 'jimu-core'\n/** ADD: **/\nimport { JimuMapViewComponent, type JimuMapView } from 'jimu-arcgis'\nconst { useState } = React\n")),"\n"),"\n"))}t.A=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)}},75645:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}});var l=n(28453),a=n(96540),r=n(74021),i=n(23784),o=n(25669),c=n(40698);function s(e){const t=Object.assign({h2:"h2",a:"a",span:"span",p:"p",strong:"strong",code:"code",ol:"ol",li:"li",h3:"h3",pre:"pre"},(0,l.RP)(),e.components),{DemoApp:n,Box:s,MoreInfo:m}=t;return s||u("Box",!0),n||u("DemoApp",!0),m||u("MoreInfo",!0),a.createElement(a.Fragment,null,a.createElement(t.h2,{id:"overview",className:"group relative s:flex s:flex-nowrap"},"Overview",a.createElement(t.a,{href:"#overview","aria-label":"overview permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"You will learn:")," how to display the latitude and longitude, scale, and zoom level of the map in a custom\nwidget."),"\n",a.createElement(t.p,null,"The out-of-the-box Map widget in ArcGIS Experience Builder contains an instance of a View from the ArcGIS Maps SDK for JavaScript. The ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-View.html"},a.createElement(t.code,null,"View"))," provides a way to interact with the map and to retrieve information about the map location. Using properties and event handlers on the ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-View.html"},a.createElement(t.code,null,"View"))," you can find the current ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-SpatialReference.html"},"spatial reference")," information, latitude and longitude, scale, and zoom level for the map or any screen point location. Once you have this information you can display it in a custom widget, use it to find other locations on the earth, or use it to set the initial extent of your Map when your Experience starts."),"\n",a.createElement(t.p,null,"In this tutorial, you will access the map widget and display the latitude and longitude of the mouse cursor over the map in your custom widget."),"\n",a.createElement(n,{src:"https://esri.github.io/arcgis-experience-builder-sdk-resources/tutorials/get-map-coordinates/",height:"520px",maxHeight:"520px"}),"\n",a.createElement(t.h2,{id:"prerequisites",className:"group relative s:flex s:flex-nowrap"},"Prerequisites",a.createElement(t.a,{href:"#prerequisites","aria-label":"prerequisites permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(s,null,a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Be sure to ",a.createElement(t.a,{href:"/experience-builder/guide/install-guide/"},"download, install, and configure")," ArcGIS Experience Builder."),"\n",a.createElement(t.li,null,"Complete the ",a.createElement(t.a,{href:"/experience-builder/guide/create-a-starter-widget/"},"create a starter widget tutorial"),". It forms the base of this tutorial."),"\n")),"\n",a.createElement(t.h2,{id:"steps",className:"group relative s:flex s:flex-nowrap"},"Steps",a.createElement(t.a,{href:"#steps","aria-label":"steps permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.h3,{id:"get-the-starter-widget",className:"group relative s:flex s:flex-nowrap"},"Get the starter widget",a.createElement(t.a,{href:"#get-the-starter-widget","aria-label":"get the starter widget permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(r.A),"\n",a.createElement(t.h3,{id:"change-the-widget-name",className:"group relative s:flex s:flex-nowrap"},"Change the widget name",a.createElement(t.a,{href:"#change-the-widget-name","aria-label":"change the widget name permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the terminal where the ",a.createElement(t.code,null,"npm start")," is running in the ",a.createElement(t.strong,null,"client")," folder, stop the script by pressing ",a.createElement(t.code,null,"ctrl + c"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In your ",a.createElement(t.strong,null,"file browser"),", go to the folder where Experience Builder was extracted."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the Experience Builder ",a.createElement(t.strong,null,"folder"),", expand the following path: ",a.createElement(t.strong,null,"/client/your-extensions/widgets"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.strong,null,"widgets")," folder, rename the ",a.createElement(t.strong,null,"starter-widget")," folder to ",a.createElement(t.code,null,"get-map-coordinates"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the newly-renamed ",a.createElement(t.strong,null,"get-map-coordinates")," folder, open the ",a.createElement(t.strong,null,"manifest.json")," file in the code editor."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the code editor, modify the ",a.createElement(t.code,null,"name")," property to ",a.createElement(t.code,null,"get-map-coordinates"),"."),"\n",a.createElement(m,null,a.createElement(t.p,null,"It is important that the ",a.createElement(t.code,null,"name")," property of the ",a.createElement(t.code,null,"manifest.json")," matches the name of the folder for your widget. You can also update the\nother metadata in the ",a.createElement(t.code,null,"manifest.json")," file at this time, like the description of the widget, the author, etc.")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-js"},' {\n   // *** UPDATE ***\n   // "name": "starter-widget",\n   "name": "get-map-coordinates",\n   "type": "widget",\n   "version": "1.16.0",\n')),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"After the ",a.createElement(t.code,null,"version")," property in ",a.createElement(t.strong,null,"manifest.json"),", add a ",a.createElement(t.code,null,"jimu-arcgis")," dependency. Declaring this allows the usage of ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/"},"ArcGIS Maps SDK for JavaScript")," modules within the widget."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-js"},'{\n   "name": "get-map-coordinates",\n   "type": "widget",\n   "version": "1.16.0",\n   // *** ADD ***\n   "dependency": ["jimu-arcgis"],\n')),"\n"),"\n"),"\n",a.createElement(t.h3,{id:"implement-the-settings-panel",className:"group relative s:flex s:flex-nowrap"},"Implement the settings panel",a.createElement(t.a,{href:"#implement-the-settings-panel","aria-label":"implement the settings panel permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(i.A),"\n",a.createElement(t.h3,{id:"enable-selecting-a-map-view-data-source",className:"group relative s:flex s:flex-nowrap"},"Enable selecting a map view data source",a.createElement(t.a,{href:"#enable-selecting-a-map-view-data-source","aria-label":"enable selecting a map view data source permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(o.A),"\n",a.createElement(t.h3,{id:"access-the-map",className:"group relative s:flex s:flex-nowrap"},"Access the map",a.createElement(t.a,{href:"#access-the-map","aria-label":"access the map permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(c.A),"\n",a.createElement(t.ol,{start:"2"},"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"To display the ",a.createElement(t.code,null,"latitude")," and ",a.createElement(t.code,null,"longitude")," property of the mouse, the mouse pointer state must be tracked. Within the component, set up the ",a.createElement(t.a,{href:"https://reactjs.org/docs/state-and-lifecycle.html"},"state")," using ",a.createElement(t.code,null,"useState()"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"const { useState } = React\n\nconst Widget = (props: AllWidgetProps<any>) => {\n  // *** ADD ***//\n  const [latitude, setLatitude] = useState<string>('')\n  const [longitude, setLongitude] = useState<string>('')\n\n  return (\n")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.code,null,"return")," section, add the ",a.createElement(t.code,null,"JimuMapViewComponent")," to the JSX markup."),"\n",a.createElement(m,null,a.createElement(t.p,null,"The first two lines of the added code (",a.createElement(t.code,null,"{props.useMapWidgetIds &&..."),') are how to use conditionals in JSX. This is basically saying "only add the JimuMapViewComponent if the Experience author has chosen a valid map widget in the settings panel."')),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},'return (\n  <div className="widget-starter jimu-widget">\n    {props.useMapWidgetIds && props.useMapWidgetIds.length === 1 && (\n      <JimuMapViewComponent useMapWidgetId={props.useMapWidgetIds?.[0]} onActiveViewChange={activeViewChangeHandler} />\n    )}\n  </div>\n)\n')),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"At the top of ",a.createElement(t.code,null,"widget.tsx"),", import the ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html"},a.createElement(t.code,null,"Point"))," class, which will be used in the next step."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"import Point from 'esri/geometry/Point'\n")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Define the ",a.createElement(t.code,null,"activeViewChangeHandler")," function, just below the ",a.createElement(t.code,null,"setState")," commands. This function will be called once - when the map is ready. In this function, set up a listener to update the latitude and longitude state every time the ",a.createElement(t.code,null,"pointer-move")," event is triggered."),"\n",a.createElement(m,null,a.createElement(t.p,null,"Create a Point object using the incoming mouse x and y position and then convert the coordinates to map coordinates using the ",a.createElement(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#toMap"},a.createElement(t.code,null,"view.toMap()"))," function. Set the state of the latitude and longitude to display the coordinate values.")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},"/** ADD: **/\nconst activeViewChangeHandler = (jmv: JimuMapView) => {\n  if (jmv) {\n    // When the pointer moves, take the pointer location and create a Point\n    // Geometry out of it (`view.toMap(...)`), then update the state.\n    jmv.view.on('pointer-move', (evt) => {\n      const point: Point = jmv.view.toMap({\n        x: evt.x,\n        y: evt.y\n      })\n      setLatitude(point.latitude.toFixed(3))\n      setLongitude(point.longitude.toFixed(3))\n    })\n  }\n}\n")),"\n"),"\n"),"\n",a.createElement(t.h3,{id:"display-the-latitude-and-longitude-coordinates",className:"group relative s:flex s:flex-nowrap"},"Display the latitude and longitude coordinates",a.createElement(t.a,{href:"#display-the-latitude-and-longitude-coordinates","aria-label":"display the latitude and longitude coordinates permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"Now that the latitude and longitude is stored in the component's state, you can easily display the values in the the JSX that is returned from the function component."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the ",a.createElement(t.code,null,"return()")," statement (right after the ",a.createElement(t.code,null,"JimuMapViewComponent")," placed earlier), add JSX to display the latitude and longitude."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-tsx"},'return (\n  <div className="widget-starter jimu-widget">\n    {props.useMapWidgetIds && props.useMapWidgetIds.length === 1 && (\n      <JimuMapViewComponent useMapWidgetId={props.useMapWidgetIds?.[0]} onActiveViewChange={activeViewChangeHandler} />\n    )}\n    {/* *** ADD: *** */}\n    <p>\n      Lat/Lon: {latitude} {longitude}\n    </p>\n  </div>\n);\n')),"\n"),"\n"),"\n",a.createElement(t.h3,{id:"test-the-widget",className:"group relative s:flex s:flex-nowrap"},"Test the widget",a.createElement(t.a,{href:"#test-the-widget","aria-label":"test the widget permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"Once the code changes have been made, you can test your widget by running ArcGIS Experience Builder and viewing your experience."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In a web browser, go to Experience Builder. e.g. ",a.createElement(t.a,{href:"https://localhost:3001"},"https://localhost:3001")),"\n",a.createElement(m,null,a.createElement(t.p,null,"If Experience Builder did not open a tab for you, browse to ",a.createElement(t.a,{href:"https://localhost:3001"},"https://localhost:3001"),'. If you get a "Invalid SSL Certificate" issue, click\n"Proceed Anyway".')),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In Experience Builder, click ",a.createElement(t.strong,null,"Create New")," to create a new experience page."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Click the ",a.createElement(t.strong,null,"Create")," button on the ",a.createElement(t.strong,null,"Blank scrolling")," template."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"The ",a.createElement(t.strong,null,"Insert widget")," panel is opened for you. From there, drag a ",a.createElement(t.strong,null,"Map")," widget and your new ",a.createElement(t.strong,null,"Get Map Coordinates")," widget onto the experience."),"\n",a.createElement(m,null,"The widget may show an invalid icon right now. That's ok - you have not created one yet!"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the widget settings panel, choose ",a.createElement(t.strong,null,"Map")," from the map selection dropdown."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the Experience Builder toolbar, click ",a.createElement(t.strong,null,"Save")," then ",a.createElement(t.strong,null,"Preview")," and the experience will open in a new browser tab with your custom widget and a map. Mouse over the map to see the latitude and longitude of the cursor location."),"\n"),"\n"),"\n",a.createElement(t.h3,{id:"congratulations-youre-done",className:"group relative s:flex s:flex-nowrap"},"Congratulations, you're done!",a.createElement(t.a,{href:"#congratulations-youre-done","aria-label":"congratulations youre done permalink",className:"anchor-link"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(t.p,null,"In the Experience Builder preview, hover over the map to see the latitude and longitude values dynamically change in the custom widget. Compare your widget with our ",a.createElement(t.a,{href:"/experience-builder/zips/get-map-coordinates.zip"},"completed widget"),", and see the top of this page for an example for how the Experience should look."))}var m=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(s,e)):s(e)};function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var p=n(69507),d=n(46427);const h=function(e){const{data:{topicNavigation:t}}=e;return a.createElement(p.A,null,a.createElement(d.S,Object.assign({},e,{topicNavigation:t,wrapInLayout:!1})))};function g(e){return a.createElement(h,e,a.createElement(m,e))}}}]);