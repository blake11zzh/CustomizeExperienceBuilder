"use strict";(self.webpackChunkafd_experience_builder_doc=self.webpackChunkafd_experience_builder_doc||[]).push([[1824],{87308:function(e,n,t){t.r(n),t.d(n,{default:function(){return u}});var i=t(28453),a=t(96540);function l(e){const n=Object.assign({p:"p",code:"code",pre:"pre",ul:"ul",li:"li",a:"a",h2:"h2",span:"span"},(0,i.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"The Jimu library allows you to extend ArcGIS Experience Builder. In most cases, you extend Experience Builder by creating custom widgets and themes. Additionally, you can create deeper customizations through Jimu extensions."),"\n",a.createElement(n.p,null,"The Jimu library defines specific extension points. An extension point defines the interface that extensions must conform to. An extension is a class that implements the extension point interface. This interface is the ",a.createElement(n.code,null,"extensionSpec")," exported from ",a.createElement(n.code,null,"jimu-core"),". To provide an extension in a widget, you must declare the extension in the widget's ",a.createElement(n.code,null,"manifest.json")," file."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-json"},'"extensions": [\n  {\n    "point": "<Extension point name>",\n    "uri": "<Extension uri, relative to src folder>"\n  }\n]\n')),"\n",a.createElement(n.p,null,"Jimu defines a variety of extension points that are defined in the API documentation. Two commonly-used extension points are:"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,"AppConfigProcessor")," - The extension for this extension point receives the ",a.createElement(n.code,null,"AppConfig")," and should return a promise that resolves the processed app config. This can be used to make runtime modifications to the app config, like translating strings (see the ",a.createElement(n.a,{href:"/experience-builder/sample-code/widgets/translation/"},"Translation sample"),"). The process will be invoked just after app config is loaded."),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"DependencyDefine")," - Using this extension you can use third-party libraries that require initialization."),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"ReduxStore")," - Using this extension you can define the ",a.createElement(n.code,null,"actions")," and ",a.createElement(n.code,null,"reducers")," for your widget redux state."),"\n"),"\n",a.createElement(n.h2,{id:"samples",className:"group relative s:flex s:flex-nowrap"},"Samples",a.createElement(n.a,{href:"#samples","aria-label":"samples permalink",className:"anchor-link"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<calcite-icon scale="s" icon="link"></calcite-icon>'}}))),"\n",a.createElement(n.p,null,"See the ",a.createElement(n.a,{href:"/experience-builder/sample-code/widgets/translation/"},"Translation sample")," for an example of how to create an extension."))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.RP)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},r=t(69507),s=t(46427);const c=function(e){const{data:{topicNavigation:n}}=e;return a.createElement(r.A,null,a.createElement(s.S,Object.assign({},e,{topicNavigation:n,wrapInLayout:!1})))};function u(e){return a.createElement(c,e,a.createElement(o,e))}}}]);