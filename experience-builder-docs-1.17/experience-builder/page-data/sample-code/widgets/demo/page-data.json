{"componentChunkName":"component---src-components-sample-code-layout-tsx","path":"/sample-code/widgets/demo/","result":{"data":{"page":{"id":"7e33c93d-2656-59c8-826e-6a6c63c806e7","title":"Demo class widget","slug":"readme","url":"sample-code/widgets/demo/","uids":[],"tags":[],"firstHeader":"Demo class widget","keywords":[],"context":{"product":"experience-builder"},"redirects":[],"childMarkdownRemark":{"html":"<p>This sample demonstrates how to create a widget using a class component.</p>\n<h2 id=\"how-to-use-the-sample\" class=\"group relative s:flex s:flex-nowrap\">How to use the sample<a href=\"#how-to-use-the-sample\" aria-label=\"how to use the sample permalink\" class=\"anchor-link\"><calcite-icon scale=\"s\" icon=\"link\"></calcite-icon></a></h2>\n<p>Clone the <a href=\"https://github.com/esri/arcgis-experience-builder-sdk-resources\">sample repo</a> and copy this widget's folder (within <code>widgets</code>) to the <code>client/your-extensions/widgets</code> folder of your Experience Builder installation.</p>\n<h2 id=\"how-it-works\" class=\"group relative s:flex s:flex-nowrap\">How it works<a href=\"#how-it-works\" aria-label=\"how it works permalink\" class=\"anchor-link\"><calcite-icon scale=\"s\" icon=\"link\"></calcite-icon></a></h2>\n<p>This example creates a simple class widget to highlight some of the props you can use from a theme to return a widgets props. It also demonstrates how to style a button and component. The widget extends the <code>React.PureComponent</code> class with the types <code>AllWidgetProps</code> and <code>IMConfig</code>. The <code>AllWidgetProps</code> uses props of the widget and props injected by the <code>jimu</code> framework. The <code>IMConfig</code> is used to work with the <code>config.ts</code>.</p>\n<p>The <code>render</code> method is used to call what the widget needs to display. For example, <code>StyledButton</code> uses the color variable from the <code>Theme</code> variables to style a button. <code>StyledBSButton</code> uses the button component from the Experience Builder framework. <code>propsTr</code> will return the props of the widget.</p>\n<pre><code class=\"hljs not-afd-flow-content language-javascript\">\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-keyword\">const</span> StyledButton = styled.button<span class=\"hljs-string\">`\n      color: white;\n      background-color: <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">this</span>.props.theme.colors.primary}</span>;\n      transition: 0.15s ease-in all;\n      &#x26;:hover {\n        background-color: <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">this</span>.props.theme.colors.danger}</span>;\n      }\n    `</span>;\n\n    <span class=\"hljs-keyword\">const</span> StyledBSButton = styled(Button)<span class=\"hljs-string\">`\n      background-color: hotpink !important;\n      border: 0 !important;\n      transition: 0.15s ease-in all;\n      &#x26;:hover {\n        background-color: purple !important;\n      }\n    `</span>;\n \n    <span class=\"hljs-keyword\">const</span> propsTr = <span class=\"hljs-built_in\">Object</span>.keys(<span class=\"hljs-built_in\">this</span>.props).map(<span class=\"hljs-function\">(<span class=\"hljs-params\">prop, i</span>) =></span> {\n      <span class=\"hljs-keyword\">if</span>([<span class=\"hljs-string\">'manifest'</span>, <span class=\"hljs-string\">'user'</span>, <span class=\"hljs-string\">'intl'</span>].indexOf(prop) > -<span class=\"hljs-number\">1</span>\n        || <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-built_in\">this</span>.props[prop] === <span class=\"hljs-string\">'string'</span>){\n        <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{i}</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span>{prop}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span>{this.props[prop] &#x26;&#x26; this.props[prop].toString()}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span></span>;\n      }\n\n      <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{i}</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span>{prop}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span>\n          {\n            JSON.stringify(this.props[prop], null, 2)\n          }\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span></span>;\n    });</code></pre>\n<p>The <code>return</code> statement is in the <code>render</code> method and is the output. Additionally, this shows how to use\n<code>Theme</code> variables within the markup and making use of a <code>jimuCoreDefaultMessage</code> and an example of formatting a default message as a\n<code>FormattedMessage</code>.</p>\n<pre><code class=\"hljs not-afd-flow-content language-javascript\">    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"widget-demo jimu-widget\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">overflow:</span> '<span class=\"hljs-attr\">auto</span>' }}></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Tabs</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Tab</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"widgetProperties\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{this.nls(</span>'<span class=\"hljs-attr\">widgetProperties</span>')} <span class=\"hljs-attr\">defaultActive</span>=<span class=\"hljs-string\">{true}</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"title font-weight-bold\"</span>></span>NLS messages from jimu-core (OK)<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"content\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">FormattedMessage</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"ok\"</span> <span class=\"hljs-attr\">defaultMessage</span>=<span class=\"hljs-string\">{jimuCoreDefaultMessage.ok}</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">FormattedMessage</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">hr</span> /></span>\n          {/* demo how to use theme variables */}\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">css</span>=<span class=\"hljs-string\">{styleLiteral}</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">css</span>=<span class=\"hljs-string\">{styleObject}</span>></span>Theme danger color<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">StyledButton</span>></span>A styled HTML Button<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">StyledButton</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">StyledBSButton</span>></span>A Re-styled Button Component<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">StyledBSButton</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">css</span>=<span class=\"hljs-string\">{rtlStyle}</span>></span>right to left demo<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span>\n            {styleTag}\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"danger-color\"</span>></span>\n            Text color is from a named CSS class\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n          {/* demo how to format string by call API */}\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"title font-weight-bold\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">FormattedMessage</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"widgetName\"</span> <span class=\"hljs-attr\">defaultMessage</span>=<span class=\"hljs-string\">{defaultMessages.widgetName}</span> /></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"content\"</span>></span>{this.props.intl.formatMessage({ id: '_widgetLabel', defaultMessage: defaultMessages._widgetLabel })}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"title font-weight-bold\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">FormattedMessage</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"widgetProps\"</span> <span class=\"hljs-attr\">defaultMessage</span>=<span class=\"hljs-string\">{defaultMessages.widgetProps}</span> /></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"content\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">table</span>></span>\n              <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tbody</span>></span>{propsTr}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tbody</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">table</span>></span>\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Tab</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Tab</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"widgetFunctions\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{this.nls(</span>'<span class=\"hljs-attr\">widgetFunctions</span>')}></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>TODO<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Tab</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Tabs</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>;\n  }\n}</code></pre>","tocData":{"items":[{"url":"#demo-class-widget","title":"Demo class widget","items":[{"url":"#how-to-use-the-sample","title":"How to use the sample"},{"url":"#how-it-works","title":"How it works"}]}]}}},"topicNavigation":{"nav":{"title":"Sample Code","children":[{"title":"Themes","children":[{"title":"Sample theme","url":"/sample-code/themes/demo-theme/","type":"page","id":"NavigationYaml-cm8da8oki008o7fm38fyj5za4"}],"type":"folder","id":"NavigationYaml-cm8da8oki008n7fm37aonca6z"},{"title":"Widgets","children":[{"title":"Get started","children":[{"title":"Demo class widget","url":"/sample-code/widgets/demo/","type":"page","id":"NavigationYaml-cm8da8oki008r7fm3bsujb9cw"},{"title":"Demo function widget","url":"/sample-code/widgets/demo-function/","type":"page","id":"NavigationYaml-cm8da8oki008s7fm3gilp1a6z"}],"type":"folder","id":"NavigationYaml-cm8da8oki008q7fm342qw7275"},{"title":"Working with maps","children":[{"title":"Add layers","url":"/sample-code/widgets/add-layers/","type":"page","id":"NavigationYaml-cm8da8oki008u7fm3fuge4u2e"},{"title":"Create a map view","url":"/sample-code/widgets/map-view/","type":"page","id":"NavigationYaml-cm8da8oki008v7fm35crydz7q"},{"title":"Editor widget","url":"/sample-code/widgets/editor/","type":"page","id":"NavigationYaml-cm8da8oki008w7fm30qy902r0"},{"title":"Filter feature layer","url":"/sample-code/widgets/filter-feature-layer/","type":"page","id":"NavigationYaml-cm8da8oki008x7fm366j00pje"},{"title":"Get map coordinates (class)","url":"/sample-code/widgets/get-map-coordinates-class/","type":"page","id":"NavigationYaml-cm8da8oki008y7fm3bdjn8ixx"},{"title":"Get map coordinates (function)","url":"/sample-code/widgets/get-map-coordinates-function/","type":"page","id":"NavigationYaml-cm8da8oki008z7fm3hof1ag1g"},{"title":"Legend widget","url":"/sample-code/widgets/js-api-widget/","type":"page","id":"NavigationYaml-cm8da8oki00907fm3ftpu4nrv"},{"title":"Point clustering","url":"/sample-code/widgets/clustering/","type":"page","id":"NavigationYaml-cm8da8oki00917fm38k75cf8d"},{"title":"Show extent","url":"/sample-code/widgets/showextent/","type":"page","id":"NavigationYaml-cm8da8oki00927fm327mbd0pk"},{"title":"Use map components","url":"/sample-code/widgets/use-map-components/","type":"page","id":"NavigationYaml-cm8da8oki00937fm3fdnf9cne"},{"title":"View layers toggle","url":"/sample-code/widgets/view-layers-toggle/","type":"page","id":"NavigationYaml-cm8da8oki00947fm30o9n4yrh"}],"type":"folder","id":"NavigationYaml-cm8da8oki008t7fm3f72hh6no"},{"title":"Data sources","children":[{"title":"Client-side output data source","url":"/sample-code/widgets/data-source-widgets/client-side-output/","type":"page","id":"NavigationYaml-cm8da8oki00967fm3eugufwfw"},{"title":"Server-side output data source","url":"/sample-code/widgets/data-source-widgets/server-side-output/","type":"page","id":"NavigationYaml-cm8da8oki00977fm30u0i19zl"},{"title":"Statistics with output data source","url":"/sample-code/widgets/data-source-widgets/statistic-client-side-output/","type":"page","id":"NavigationYaml-cm8da8oki00987fm35bq6bc7l"},{"title":"How to use fields","url":"/sample-code/widgets/data-source-widgets/how-to-use-fields/","type":"page","id":"NavigationYaml-cm8da8oki00997fm351r032zf"},{"title":"Output data source without original data sources","url":"/sample-code/widgets/data-source-widgets/output-data-source-without-original-data-sources/","type":"page","id":"NavigationYaml-cm8da8oki009a7fm311kecn0j"},{"title":"Runtime data source without saving to config","url":"/sample-code/widgets/data-source-widgets/runtime-data-source-without-saving-to-config/","type":"page","id":"NavigationYaml-cm8da8oki009b7fm3277a66qv"},{"title":"Use a feature layer (class)","url":"/sample-code/widgets/feature-layer-class/","type":"page","id":"NavigationYaml-cm8da8oki009c7fm33t8wej7d"},{"title":"Use a feature layer (function)","url":"/sample-code/widgets/feature-layer-function/","type":"page","id":"NavigationYaml-cm8da8oki009d7fm38l7mbzib"},{"title":"Use expression","url":"/sample-code/widgets/use-expression/","type":"page","id":"NavigationYaml-cm8da8oki009e7fm3addr28yx"}],"type":"folder","id":"NavigationYaml-cm8da8oki00957fm356lwallb"},{"title":"Widget communication","children":[{"title":"Control the widget state","url":"/sample-code/widgets/control-the-widget-state/","type":"page","id":"NavigationYaml-cm8da8oki009g7fm33qko18a8"},{"title":"Create Redux store","url":"/sample-code/widgets/redux/","type":"page","id":"NavigationYaml-cm8da8oki009h7fm39m8sh8q2"},{"title":"Message subscriber","url":"/sample-code/widgets/message-subscriber/","type":"page","id":"NavigationYaml-cm8da8oki009i7fm36t2867xs"},{"title":"Share code between widgets","url":"/sample-code/widgets/share-code-widgets/","children":[{"title":"Dynamic loading","url":"/sample-code/widgets/share-code-chunk/","type":"page","id":"NavigationYaml-cm8da8oki009k7fm3b4qmhy99"},{"title":"Shared entry","url":"/sample-code/widgets/share-code-entry/","type":"page","id":"NavigationYaml-cm8da8okj009l7fm34c1qcjrb"},{"title":"share code dynamically","url":"/sample-code/widgets/share-code-entry-dynamic/","type":"page","id":"NavigationYaml-cm8da8okj009m7fm35elbgivv"}],"type":"section","id":"NavigationYaml-cm8da8oki009j7fm31epcbqzt"},{"title":"Show record id","url":"/sample-code/widgets/data-action-widgets/show-record-id/","type":"page","id":"NavigationYaml-cm8da8okj009n7fm3279mfwkq"},{"title":"Listen selection change","url":"/sample-code/widgets/listen-selection-change/","type":"page","id":"NavigationYaml-cm8da8okj009o7fm32fr7dzk6"}],"type":"folder","id":"NavigationYaml-cm8da8oki009f7fm3bzzzfm73"},{"title":"Other","children":[{"title":"Translation","url":"/sample-code/widgets/translation/","type":"page","id":"NavigationYaml-cm8da8okj009q7fm3hko892ky"},{"title":"Unit Testing","url":"/sample-code/widgets/show-unit-tests/","type":"page","id":"NavigationYaml-cm8da8okj009r7fm30pc7gl27"},{"title":"Use a third-party library: D3","url":"/sample-code/widgets/d3/","type":"page","id":"NavigationYaml-cm8da8okj009s7fm3gpolc7pz"},{"title":"Use a third-party library: jQuery","url":"/sample-code/widgets/jquery/","type":"page","id":"NavigationYaml-cm8da8okj009t7fm3fkob7zbj"},{"title":"Use a third-party library: react-data-grid","url":"/sample-code/widgets/react-data-grid/","type":"page","id":"NavigationYaml-cm8da8okj009u7fm30bwo9kp0"},{"title":"Use assets","url":"/sample-code/widgets/use-assets/","type":"page","id":"NavigationYaml-cm8da8okj009v7fm3glyhhev8"},{"title":"Use calcite components","url":"/sample-code/widgets/use-calcite-components/","type":"page","id":"NavigationYaml-cm8da8okj009w7fm31ihmhee6"},{"title":"Use coding components","url":"/sample-code/widgets/use-coding-components/","type":"page","id":"NavigationYaml-cm8da8okj009x7fm38d4c5wih"},{"title":"Web component","url":"/sample-code/widgets/web-component/","type":"page","id":"NavigationYaml-cm8da8okj009y7fm3c44n86gb"},{"title":"Web worker","url":"/sample-code/widgets/web-worker/","type":"page","id":"NavigationYaml-cm8da8okj009z7fm37bvo37ec"}],"type":"folder","id":"NavigationYaml-cm8da8okj009p7fm3e96l9wtk"}],"type":"folder","id":"NavigationYaml-cm8da8oki008p7fm3d350hcwa"}],"type":"root","id":"NavigationYaml-cm8da8oki008m7fm34dr1c47h","publicPaginationURL":"/experience-builder/static/3d81cdccd4bea794999fa7b7d5001a82.pagination.json"},"error":null}},"pageContext":{"product":"experience-builder","id":"7e33c93d-2656-59c8-826e-6a6c63c806e7","slug":"readme","url":"sample-code/widgets/demo/"}},"staticQueryHashes":["1124934240","1767297776","1796195804","614850884","780576150"],"slicesMap":{}}