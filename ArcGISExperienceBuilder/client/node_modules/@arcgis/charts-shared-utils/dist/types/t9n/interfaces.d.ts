import type { OverlayTerms } from "@arcgis/charts-spec";
export interface ErrorStrings {
    placeholders: {
        barChartCreateMsg: string;
        boxPlotCreateMsg: string;
        lineChartCreateMsg: string;
        pieChartCreateMsg: string;
        histogramCreateMsg: string;
        scatterPlotCreateMsg: string;
    };
    notifications: {
        invalidConfig: string;
        invalidSeriesConfig: string;
        invalidSeriesConfigTitle: string;
        validateAggregationTypeMsg: string;
        missingNumericFields: string;
        noAggregationRequiresNumericFields: string;
    };
    modalHeaders: {
        invalidData: string;
        invalidChart: string;
        noDataAvailable: string;
        tooManyFeatures: string;
        cannotCombineNegativeAndPositiveSlices: string;
        error: string;
        warning: string;
        newChart: string;
    };
    errors: {
        divNode: string;
        errorRequest: string;
        warningRequest: string;
        newChartRequest: string;
        simpleError: string;
        invalidValueFormatForLineChart: string;
        invalidValueFormatForBarChart: string;
        invalidValueFormatForBoxPlot: string;
        invalidValueFormatForComboBarLineChart: string;
        invalidValueFormatForHistogram: string;
        invalidValueFormatForScatterPlot: string;
        invalidValueFormatForGauge: string;
        mismatchAxisAndValueFormat: string;
        queryError: string;
        defaultInvalidChart: string;
        categoryCountCannotExceedLimit: string;
        uniqueSeriesBarCountCannotExceedLimit: string;
        twoSeriesBarCountCannotExceedLimit: string;
        threePlusSeriesBarCountCannotExceedLimit: string;
        barSeriesCountCannotExceedLimit: string;
        uniqueSeriesLineCountCannotExceedLimit: string;
        twoSeriesLineCountCannotExceedLimit: string;
        threePlusSeriesLineCountCannotExceedLimit: string;
        uniqueTemporalSeriesLineCountCannotExceedLimit: string;
        twoTemporalSeriesLineCountCannotExceedLimit: string;
        threePlusTemporalSeriesLineCountCannotExceedLimit: string;
        lineSeriesCountCannotExceedLimit: string;
        uniqueSeriesBoxCountCannotExceedLimit: string;
        twoSeriesBoxCountCannotExceedLimit: string;
        threePlusBoxLineCountCannotExceedLimit: string;
        boxSeriesCountCannotExceedLimit: string;
        boxSeriesOutlierCannotExceedLimit: string;
        pieChartCannotHaveMixtureOfPositiveAndNegativeSlices: string;
        pieChartSlicesCannotExceedLimit: string;
        gaugeCannotExceedLimit: string;
        negativeValueInDataForLogTransformation: string;
        negativeValueInDataForSqrtTransformation: string;
        histogramEmptyField: string;
        noDataMessage: string;
        noDataFBSMessage: string;
        noDataFBEMessage: string;
        logarithmicXAxisNotPossible: string;
        logarithmicYAxisNotPossible: string;
        exportImageChartNotReady: string;
        exportImage: string;
    };
    errorHeading: string;
    tooManySelectedElements: {
        title: string;
        message: string;
    };
    incompatibleChartVersion: {
        title: string;
        message: string;
    };
}
export interface CommonStrings {
    chartType: {
        chart: string;
        barChart: string;
        lineChart: string;
        pieChart: string;
        histogram: string;
        scatterPlot: string;
        boxPlot: string;
    };
    statistics: {
        mean: string;
        median: string;
        sum: string;
        discretePercentile: string;
        minimum: string;
        maximum: string;
        firstQuartile: string;
        thirdQuartile: string;
        iqr: string;
        standardDeviation: string;
        variance: string;
        count: string;
        aggregation: string;
        percent: string;
        noAggregation: string;
        meanValue: string;
    };
    overlays: {
        mean: OverlayTerms;
        median: OverlayTerms;
        stdDev: OverlayTerms;
        normal: OverlayTerms;
        trendline: OverlayTerms;
    };
    actions: {
        editChart: string;
        expand: string;
        collapse: string;
    };
    tooltips: {
        logDisabled: string;
    };
    guideTooltipLabel: string;
    pieChart: {
        defaultSliceGroupingLabel: string;
    };
    notAvailable: string;
    field: string;
}
export interface UtilsCommonStrings {
    chartType: {
        chart: string;
        barChart: string;
        lineChart: string;
        pieChart: string;
        histogram: string;
        scatterPlot: string;
        boxPlot: string;
    };
    statistics: {
        mean: string;
        median: string;
        sum: string;
        discretePercentile: string;
        minimum: string;
        maximum: string;
        variance: string;
        count: string;
        aggregation: string;
        noAggregation: string;
    };
    defaultTitle: string;
    countSeries: string;
    xAxis: string;
    notAvailable: string;
    timeAggregationTypes: {
        start: string;
        end: string;
    };
}
export interface UtilsErrorStrings {
    defaultError: string;
    negativeValueInDataForLogTransformation: string;
    negativeValueInDataForSqrtTransformation: string;
    layerLoadFailure: string;
    layerFieldsNotFound: string;
    duplicateSeriesID: string;
    nonNumericAggregation: string;
    requiredProperty: string;
    minLength: string;
    minItems: string;
    maxItems: string;
    whiteSpacePattern: string;
    additionalProperty: string;
    enumValues: string;
    anyOfValues: string;
    bubbleChartValidateMsg: string;
    queryError: string;
    invalidSeriesType: string;
    or: string;
}
