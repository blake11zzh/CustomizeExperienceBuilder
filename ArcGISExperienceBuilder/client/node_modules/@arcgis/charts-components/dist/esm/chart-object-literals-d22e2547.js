/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See LICENSE.md for details.
 * v4.32.1
 */
const WebChartTypes = {
    Chart: "chart",
    Text: "chartText",
    Overlay: "chartOverlay",
    Overlays: "chartOverlays",
    Legend: "chartLegend",
    CursorCrosshair: "cursorCrosshair",
    Axis: "chartAxis",
    GaugeAxisTick: "gaugeAxisTick",
    GaugeNeedle: "gaugeNeedle",
    CategoryAxisFormat: "category",
    NumberAxisFormat: "number",
    DateAxisFormat: "date",
    Guide: "chartGuide",
    ScatterSeries: "scatterSeries",
    PieSeries: "pieSeries",
    PieTick: "pieTick",
    GaugeSeries: "gaugeSeries",
    LineSeries: "lineSeries",
    BarSeries: "barSeries",
    HistogramSeries: "histogramSeries",
    BoxPlotSeries: "boxPlotSeries",
    RadarSeries: "radarSeries",
    ComboLineAndBarSeries: "comboLineAndBarSeries",
    Buffer: "buffer",
    SizePolicy: "sizeScale",
};
const WebChartDataTransformations = {
    None: "none",
    Log: "logarithmic",
    Sqrt: "squareRoot",
};
const WebChartLegendPositions = {
    Left: "left",
    Right: "right",
    Top: "top",
    Bottom: "bottom",
};
const WebChartStackedKinds = {
    Side: "sideBySide",
    Stacked: "stacked",
    Stacked100: "stacked100",
};
const WebChartBoxPlotMultipleSeriesKinds = {
    Side: "sideBySide",
    MeanLines: "meanLines",
};
/**
 * Represents the different types of time intervals that can be applied to a chart using the time binning feature.
 */
const WebChartTimeIntervalUnits = {
    Seconds: "esriTimeUnitsSeconds",
    Minutes: "esriTimeUnitsMinutes",
    Hours: "esriTimeUnitsHours",
    Days: "esriTimeUnitsDays",
    Weeks: "esriTimeUnitsWeeks",
    Months: "esriTimeUnitsMonths",
    Years: "esriTimeUnitsYears",
};
/**
 * Represents the different types of null policy that can be applied to a chart using the time binning feature.
 */
const WebChartNullPolicyTypes = {
    Null: "null",
    Zero: "zero",
    Interpolate: "interpolate",
};
/**
 * Represents the different types of time aggregation that can be applied to a chart using the time binning feature.
 */
const WebChartTimeAggregationTypes = {
    Start: "equalIntervalsFromStartTime",
    End: "equalIntervalsFromEndTime",
};
const WebChartVersionStatus = {
    Same: "same",
    Newer: "newer",
    Older: "older",
    Unrecognized: "unrecognized",
};

export { WebChartTypes as W, WebChartVersionStatus as a, WebChartDataTransformations as b, WebChartTimeAggregationTypes as c, WebChartTimeIntervalUnits as d, WebChartStackedKinds as e, WebChartBoxPlotMultipleSeriesKinds as f, WebChartNullPolicyTypes as g, WebChartLegendPositions as h };
