/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See LICENSE.md for details.
 * v4.32.1
 */
const RESTFieldType = {
    Blob: "esriFieldTypeBlob",
    Date: "esriFieldTypeDate",
    Double: "esriFieldTypeDouble",
    Geometry: "esriFieldTypeGeometry",
    GlobalID: "esriFieldTypeGlobalID",
    GUID: "esriFieldTypeGUID",
    Integer: "esriFieldTypeInteger",
    OID: "esriFieldTypeOID",
    Raster: "esriFieldTypeRaster",
    Single: "esriFieldTypeSingle",
    SmallInteger: "esriFieldTypeSmallInteger",
    String: "esriFieldTypeString",
    XML: "esriFieldTypeXML",
};
const RESTStatisticType = {
    Count: "count",
    Sum: "sum",
    Minimum: "min",
    Maximum: "max",
    Average: "avg",
    StandardDeviation: "stddev",
    Variance: "var",
    ContinuousPercentile: "percentile_cont",
    DiscretePercentile: "percentile_disc",
    EnvelopeAggregate: "envelope-aggregate",
    CentroidAggregate: "centroid-aggregate",
    ConvexHullAggregate: "convex-hull-aggregate",
    NoAggregation: "no_aggregation", // TODO: that property needs to be exported to another interface, as it is not REST compatible (see issue #2352)
};
const RESTSimpleLineSymbolStyle = {
    Dash: "esriSLSDash",
    DashDot: "esriSLSDashDot",
    DashDotDot: "esriSLSDashDotDot",
    Dot: "esriSLSDot",
    Null: "esriSLSNull",
    Solid: "esriSLSSolid",
};
const RESTSymbolType = {
    SLS: "esriSLS",
    SMS: "esriSMS",
    SFS: "esriSFS",
    PMS: "esriPMS",
    PFS: "esriPFS",
    TS: "esriTS",
};
const RESTFontStyle = {
    Italic: "italic",
    Normal: "normal",
    Oblique: "oblique",
};
const RESTFontWeight = {
    Bold: "bold",
    Bolder: "bolder",
    Lighter: "lighter",
    Normal: "normal",
};
const RESTFontDecoration = {
    LineThrough: "line-through",
    Underline: "underline",
    None: "none",
};

const Slot = {
    actionBar: "action-bar",
    customActionTop: "custom-action-top",
    customActionBelow: "custom-action-below",
    expandTooltip: "expand-tooltip",
};
const HistogramOverlays = {
    Mean: "mean",
    Median: "median",
    StandardDev: "standardDev",
    NormalDist: "normalDist",
};
const HistogramStatistics = {
    Mean: "mean",
    Median: "median",
    StandardDev: "standardDev",
    Count: RESTStatisticType.Count,
    CountExcludingNulls: "countExcludingNulls",
    Min: RESTStatisticType.Minimum,
    Max: RESTStatisticType.Maximum,
    Sum: RESTStatisticType.Sum,
    Nulls: "nulls",
};
const ChartAuthoringPages = {
    Data: "data",
    Series: "series",
    Slices: "slices",
    Axes: "axes",
    Guides: "guides",
    Format: "format",
    General: "general",
};
const FormatIcons = {
    Title: "title",
    Text: "text",
    Label: "label",
    Palette: "palette",
};
const LineChartDataPopoverKinds = {
    xAxisField: "xAxisField",
    aggregation: "aggregation",
    numericFields: "numericField",
    splitByField: "splitByField",
    interval: "interval",
    intervalAlignment: "intervalAlignment",
};
const BarChartDataPopoverKinds = {
    category: "category",
    aggregation: "aggregation",
    numericFields: "numericField",
    splitByField: "splitByField",
    sortOrder: "sortOrder",
};
const PieChartDataPopoverKinds = {
    category: "category",
    aggregation: "aggregation",
    numericFields: "numericFields",
    sortOrder: "sortOrder",
};
const HistogramDataPopoverKinds = {
    numericFields: "numericField",
    transformation: "transformation",
    fillSymbol: "fillSymbol",
    lineSymbol: "lineSymbol",
};
const ScatterPlotDataPopoverKinds = {
    xAxisField: "xAxis",
    yAxisField: "yAxis",
    sizeVariable: "sizeVariable",
    symbol: "symbol",
    trendLine: "trendLine",
    none: "none",
};
const BoxPlotDataPopoverKinds = {
    category: "category",
    numericFields: "numericField",
    splitByField: "splitByField",
    sortOrder: "sortOrder",
};
const ScatterPlotSymbolSizeTypes = {
    Fixed: "fixed",
    Proportional: "proportional",
};
const ButtonDirections = {
    Up: "up",
    Down: "down",
};

export { BarChartDataPopoverKinds as B, ChartAuthoringPages as C, FormatIcons as F, HistogramDataPopoverKinds as H, LineChartDataPopoverKinds as L, PieChartDataPopoverKinds as P, RESTStatisticType as R, Slot as S, RESTSymbolType as a, RESTFieldType as b, BoxPlotDataPopoverKinds as c, RESTSimpleLineSymbolStyle as d, ScatterPlotDataPopoverKinds as e, ButtonDirections as f, RESTFontDecoration as g, RESTFontStyle as h, RESTFontWeight as i, HistogramOverlays as j, HistogramStatistics as k, ScatterPlotSymbolSizeTypes as l };
