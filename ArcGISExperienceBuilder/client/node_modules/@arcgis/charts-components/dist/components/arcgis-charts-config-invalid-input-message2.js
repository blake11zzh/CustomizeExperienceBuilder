/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See LICENSE.md for details.
 * v4.32.1
 */
import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { b as UIInputStatus } from './chart-ui-utils.js';

const HTMLClasses = {
    invalidMessageColor: "invalid-message-color",
};

const arcgisChartsConfigInvalidInputMessageCss = ":host{display:block}.invalid-message-color{color:red}";
const ArcgisChartsConfigInvalidInputMessageStyle0 = arcgisChartsConfigInvalidInputMessageCss;

const ArcgisChartsConfigInvalidInputMessage = /*@__PURE__*/ proxyCustomElement(class ArcgisChartsConfigInvalidInputMessage extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.invalidInputMessage = undefined;
        this.isInvalid = false;
    }
    render() {
        return (h(Host, { key: 'a39c1b1904aefe902a875b75dbbdff19f230dad3' }, this.isInvalid ? (h("calcite-input-message", { status: UIInputStatus.INVALID, icon: "exclamationMarkTriangle", hidden: !this.isInvalid, class: HTMLClasses.invalidMessageColor }, this.invalidInputMessage)) : null));
    }
    get hostElement() { return this; }
    static get style() { return ArcgisChartsConfigInvalidInputMessageStyle0; }
}, [1, "arcgis-charts-config-invalid-input-message", {
        "invalidInputMessage": [513, "invalid-input-message"],
        "isInvalid": [4, "is-invalid"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-charts-config-invalid-input-message"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-charts-config-invalid-input-message":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisChartsConfigInvalidInputMessage);
            }
            break;
    } });
}
defineCustomElement();

export { ArcgisChartsConfigInvalidInputMessage as A, defineCustomElement as d };
