/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See LICENSE.md for details.
 * v4.32.1
 */
import { proxyCustomElement, HTMLElement, createEvent, getAssetPath, h, Host } from '@stencil/core/internal/client';
import { M as Mn } from './index2.js';
import { f as isCalciteInputValidNumber, m as modifyCalciteInputStatus, s as sanitizeNumber, b as UIInputStatus } from './chart-ui-utils.js';

const HTMLClasses = {
    container: "container",
    label: "label",
    numberInput: "number-input",
    rtl: "arcgis-charts-rtl",
};

const arcgisChartsConfigCategoryFormatCss = ".hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0px;left:0px}.am5-modal-curtain{top:0px;left:0px;width:100%;height:100%;position:absolute;background:rgba(255, 255, 255, 0.5);z-index:100}.am5-modal-wrapper{top:0px;left:0px;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:rgba(255, 255, 255, 0.5);z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:left;white-space:normal;background:rgb(255, 255, 255);border-radius:4px;box-shadow:rgba(0, 0, 0, 0.45) 0px 0px 36px 0px;color:rgb(0, 0, 0)}.arcgis-charts-modal{box-shadow:none !important}.arcgis-charts-modal-header{background-color:rgba(0, 0, 0, 0.05);font-weight:bold;padding:4px 4px 4px 4px}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}.container{width:var(--arcgis-charts-config-calcite-block-width, var(--arcgis-charts-config-calcite-block-default-width));height:var(--arcgis-charts-config-calcite-block-height, var(--arcgis-charts-config-calcite-block-default-height))}.container>.number-input{margin-bottom:0.5rem;display:flex}.container>.number-input>div{width:100%}:host{display:flex;flex-direction:row}.label{display:flex;margin-bottom:0.5rem}";
const ArcgisChartsConfigCategoryFormatStyle0 = arcgisChartsConfigCategoryFormatCss;

const ArcgisChartsConfigCategoryFormat = /*@__PURE__*/ proxyCustomElement(class ArcgisChartsConfigCategoryFormat extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.arcgisChartsConfigCategoryFormatChange = createEvent(this, "arcgisChartsConfigCategoryFormatChange", 7);
        /**
         * @category Event handler
         */
        this.onCharacterLimitChange = () => {
            const { value } = this.characterLimitInputElement;
            const numericValue = Math.floor(Number(value));
            // check if the character limit value is a valid positive integer
            const isValidCharacterLimit = numericValue === Number(value) && numericValue >= 0;
            if (value !== undefined &&
                isValidCharacterLimit &&
                isCalciteInputValidNumber(value, this.characterLimitInputElement.min, this.characterLimitInputElement.max)) {
                const characterLimit = Number.parseInt(value);
                this.updateCategoryFormat({ type: this.categoryFormat.type, characterLimit });
                this.arcgisChartsConfigCategoryFormatChange.emit();
                modifyCalciteInputStatus({
                    inputElement: this.characterLimitInputElement,
                    status: UIInputStatus.IDLE,
                });
            }
            else {
                modifyCalciteInputStatus({
                    inputElement: this.characterLimitInputElement,
                    status: UIInputStatus.INVALID,
                });
            }
        };
        this.categoryFormat = undefined;
    }
    /**
     * @category Lifecycle
     */
    async componentWillLoad() {
        ({ strings: this.strings, direction: this.direction } = await Mn(this.hostElement, getAssetPath(`.`)));
        // T.B.D issue with lang getting set correctly when this component used as a child
    }
    /**
     * @category Lifecycle
     */
    render() {
        return (h(Host, { key: '5d4c040febc2b35949603f5fda023a366038d3a7', class: { [HTMLClasses.rtl]: this.direction === "rtl" } }, h("div", { key: '85ce8ba09fd5a24e5975bd87ea7274fa9a5b0a55', class: HTMLClasses.container }, h("calcite-label", { key: '03aa5145d58226e7f180b71bd48c445ee5ff660d', class: HTMLClasses.label }, this.strings.labelCharacterLmt, h("calcite-input", { key: '47f4405443e49c89a11bf0286ea10999ea83ea98', type: "number", class: HTMLClasses.numberInput, min: 1, max: 100, step: 1, value: sanitizeNumber(this.categoryFormat?.characterLimit, 11), onCalciteInputInput: this.onCharacterLimitChange, ref: (e) => {
                this.characterLimitInputElement = e;
            } })))));
    }
    /**
     * @param prop
     * @category Private
     */
    updateCategoryFormat(prop) {
        this.categoryFormat = {
            ...this.categoryFormat,
            ...prop,
        };
    }
    static get assetsDirs() { return ["assets"]; }
    get hostElement() { return this; }
    static get style() { return ArcgisChartsConfigCategoryFormatStyle0; }
}, [1, "arcgis-charts-config-category-format", {
        "categoryFormat": [1040]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-charts-config-category-format"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-charts-config-category-format":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisChartsConfigCategoryFormat);
            }
            break;
    } });
}
defineCustomElement();

export { ArcgisChartsConfigCategoryFormat as A, defineCustomElement as d };
