/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See LICENSE.md for details.
 * v4.32.1
 */
'use strict';

const restJsObjectLiterals = require('./rest-js-object-literals-acb59afb.js');

const Slot = {
    actionBar: "action-bar",
    customActionTop: "custom-action-top",
    customActionBelow: "custom-action-below",
    expandTooltip: "expand-tooltip",
};
const HistogramOverlays = {
    Mean: "mean",
    Median: "median",
    StandardDev: "standardDev",
    NormalDist: "normalDist",
};
const HistogramStatistics = {
    Mean: "mean",
    Median: "median",
    StandardDev: "standardDev",
    Count: restJsObjectLiterals.RESTStatisticType.Count,
    CountExcludingNulls: "countExcludingNulls",
    Min: restJsObjectLiterals.RESTStatisticType.Minimum,
    Max: restJsObjectLiterals.RESTStatisticType.Maximum,
    Sum: restJsObjectLiterals.RESTStatisticType.Sum,
    Nulls: "nulls",
};
const ChartAuthoringPages = {
    Data: "data",
    Series: "series",
    Slices: "slices",
    Axes: "axes",
    Guides: "guides",
    Format: "format",
    General: "general",
};
const FormatIcons = {
    Title: "title",
    Text: "text",
    Label: "label",
    Palette: "palette",
};
const LineChartDataPopoverKinds = {
    xAxisField: "xAxisField",
    aggregation: "aggregation",
    numericFields: "numericField",
    splitByField: "splitByField",
    interval: "interval",
    intervalAlignment: "intervalAlignment",
};
const BarChartDataPopoverKinds = {
    category: "category",
    aggregation: "aggregation",
    numericFields: "numericField",
    splitByField: "splitByField",
    sortOrder: "sortOrder",
};
const PieChartDataPopoverKinds = {
    category: "category",
    aggregation: "aggregation",
    numericFields: "numericFields",
    sortOrder: "sortOrder",
};
const HistogramDataPopoverKinds = {
    numericFields: "numericField",
    transformation: "transformation",
    fillSymbol: "fillSymbol",
    lineSymbol: "lineSymbol",
};
const ScatterPlotDataPopoverKinds = {
    xAxisField: "xAxis",
    yAxisField: "yAxis",
    sizeVariable: "sizeVariable",
    symbol: "symbol",
    trendLine: "trendLine",
    none: "none",
};
const BoxPlotDataPopoverKinds = {
    category: "category",
    numericFields: "numericField",
    splitByField: "splitByField",
    sortOrder: "sortOrder",
};
const ScatterPlotSymbolSizeTypes = {
    Fixed: "fixed",
    Proportional: "proportional",
};
const ButtonDirections = {
    Up: "up",
    Down: "down",
};

exports.BarChartDataPopoverKinds = BarChartDataPopoverKinds;
exports.BoxPlotDataPopoverKinds = BoxPlotDataPopoverKinds;
exports.ButtonDirections = ButtonDirections;
exports.ChartAuthoringPages = ChartAuthoringPages;
exports.FormatIcons = FormatIcons;
exports.HistogramDataPopoverKinds = HistogramDataPopoverKinds;
exports.HistogramOverlays = HistogramOverlays;
exports.HistogramStatistics = HistogramStatistics;
exports.LineChartDataPopoverKinds = LineChartDataPopoverKinds;
exports.PieChartDataPopoverKinds = PieChartDataPopoverKinds;
exports.ScatterPlotDataPopoverKinds = ScatterPlotDataPopoverKinds;
exports.ScatterPlotSymbolSizeTypes = ScatterPlotSymbolSizeTypes;
exports.Slot = Slot;
