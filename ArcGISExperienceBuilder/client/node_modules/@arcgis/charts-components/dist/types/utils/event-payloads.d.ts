import type { ChartModel } from "@arcgis/charts-model";
import type { DefaultChartActions, PieSlicesSymbols, SelectionData, SeriesSymbolsMap } from "@arcgis/charts-shared-utils";
import type { CalculatedMinMaxBoundsPayload, LegendItemVisibility, WebChartDataTypes, WebChartLegendPositions } from "@arcgis/charts-spec";
export type PanelNumberChangePayload = {
    panelNumber: number;
    modelList: ChartModel[];
};
export type DataChangeErrorPayload = {
    error: Error;
    model: ChartModel;
};
export type PopoverOpenChangePayload = {
    open: boolean;
};
export type ModelListChangePayload = {
    modelList: ChartModel[];
};
export type DataProcessCompletePayload = {
    chartData: WebChartDataTypes;
    model: ChartModel | undefined;
};
export type AxesMinMaxChangePayload = {
    bounds: CalculatedMinMaxBoundsPayload[];
    model: ChartModel | undefined;
};
export type SeriesColorChangePayload = {
    data: PieSlicesSymbols | SeriesSymbolsMap;
    colorMatchApplied: boolean;
    model: ChartModel | undefined;
};
export type NoRenderPropChangePayload = {
    propName: string;
    value: WebChartLegendPositions | boolean;
    model: ChartModel | undefined;
};
export type LegendItemVisibilityChangePayload = {
    legendItemVisibility: LegendItemVisibility;
    model: ChartModel | undefined;
};
export type SelectionCompletePayload = {
    selectionData: SelectionData;
    model: ChartModel | undefined;
};
export type DefaultActionSelectPayload = {
    actionId: DefaultChartActions;
    actionActive: boolean;
};
