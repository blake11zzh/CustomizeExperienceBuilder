import type { EventEmitter } from "../../stencil-public-runtime";
import type { PieChartModel } from "@arcgis/charts-model";
import type { WebChartGenericDataItem } from "@arcgis/charts-spec";
import type { PopoverOpenChangePayload } from "../../utils/event-payloads";
/** @internal */
export declare class ArcGISChartsConfigPieChartSlices {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigPieChartSlicesElement;
    /**
     * Pie Chart Model.
     * @category Public
     */
    model: PieChartModel;
    /**
     * To open the config of the selected slice.
     * @category Public
     */
    configSliceOpen: boolean;
    /**
     * place the popover in this placement.
     * @category Public
     */
    popoverPlacement: HTMLCalcitePopoverElement["placement"];
    /**
     * The data used by the chart
     * @category Public
     */
    chartData?: WebChartGenericDataItem;
    /**
     * Slice ID that is currently selected in the UI.
     * @category Public
     */
    selectedSliceId: string | undefined;
    /**
     * @category Private
     * Number of updates that have occurred.
     */
    private updatesOccurred;
    /**
     * Event when there is change in slices popover.
     * @category Public
     */
    arcgisChartsConfigPieChartSlicesPopoverChange: EventEmitter;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverOpenChange: EventEmitter<PopoverOpenChangePayload>;
    /**
     * @category Private
     */
    private strings;
    /**
     * @category Private
     */
    private slicesPopover;
    /**
     * @category Private
     */
    private donutSizeSliderElement;
    /**
     * @category Private
     */
    private groupingThresholdElement;
    /**
     * @category Private
     */
    private groupingThresholdSliderElement;
    /**
     * @category Private
     */
    private labelCharacterLimitElement;
    /**
     * @category Private
     */
    private decimalPlacesElement;
    /**
     * Tooltip element for grouping info icon.
     * @category Private
     */
    private tooltip;
    /**
     * @category Watch handler
     */
    modelChange(newModel: PieChartModel, oldModel?: PieChartModel): void;
    /**
     * @category Watch handler
     */
    selectedSliceIdChange(): void;
    /**
     * @category Private
     */
    private removeSlicesPopover;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    /**
     * @category Lifecycle
     */
    disconnectedCallback(): void;
    /**
     * @category Render UX
     */
    private buildSliceListItem;
    /**
     * @category Render UX
     */
    private buildGroupedSlicesListItem;
    /**
     * @category Render UX
     */
    private buildSliceList;
    /**
     * @category Render UX
     */
    private buildGroupedSliceList;
    /**
     * @category Lifecycle
     */
    render(): HTMLElement;
    /**
     * @category Event handler
     */
    private onDonutSizeSliderChange;
    /**
     * @category Event handler
     */
    private onGroupingThresholdSliderChange;
    /**
     * @category Event handler
     */
    private onGroupingThresholdChange;
    /**
     * @category Event handler
     */
    private onLabelCharacterLimitChange;
    /**
     * @category Event handler
     */
    private onDecimalPlacesChange;
    /**
     * @category Event handler
     */
    private onDisplayTypeChange;
    /**
     * @category Event handler
     */
    private resetSlicesOriginal;
    /**
     * @category Event handler
     */
    private sliceNameChange;
    /**
     * @category Event handler
     */
    private sliceColorChange;
    /**
     * @category Event handler
     */
    private onCalciteListOrderChange;
    /**
     * @category Event handler
     */
    private slicesPopoverClose;
    /**
     * @category Event handler
     */
    private slicesPopoverChange;
    /**
     * @category Event handler
     */
    private openSlicesPopover;
    /**
     * Event handler when model config changes.
     * @category Event handler
     */
    private onModelConfigChange;
    /**
     * Emit event on open popover.
     * @param e
     * @category Private
     */
    private openChange;
    /**
     * @category Private
     */
    private setupSlicesPopover;
    /**
     * @category Private
     */
    private addSlicesPopover;
    /**
     * Creates a tooltip for the hovered action.
     * @category Event handler
     */
    private createTooltip;
    /**
     * Destroys tooltip for the action that was being hovered.
     * @category Event handler
     */
    private destroyTooltip;
}
