import type { EventEmitter } from "../../stencil-public-runtime";
import type { IField } from "@arcgis/charts-spec";
import type { HistogramModel } from "@arcgis/charts-model";
import type { DataChangeErrorPayload, PopoverOpenChangePayload } from "../../utils/event-payloads";
/** @internal */
export declare class ArcGISChartsConfigHistogramData {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigHistogramDataElement;
    /**
     * @category Private
     */
    private strings;
    /**
     * Histogram Model.
     * @category Public
     */
    model: HistogramModel;
    /**
     * meanValue represents the mean statistic of the histogram.
     * @category Public
     */
    meanValue: number;
    /**
     * medianValue represents the median statistic of the histogram.
     * @category Public
     */
    medianValue: number;
    /**
     * standardDevValue represents the standard deviation statistic of the histogram.
     * @category Public
     */
    standardDevValue: number;
    /**
     * minValue represents the minimum value statistic of the histogram.
     * @category Public
     */
    minValue: number;
    /**
     * maxValue represents the maximum value statistic of the histogram.
     * @category Public
     */
    maxValue: number;
    /**
     * sumValue represents the sum value statistic of the histogram.
     * @category Public
     */
    sumValue: number;
    /**
     * nullsValue represents the number for null values statistic of the histogram.
     * @category Public
     */
    nullsValue: number;
    /**
     * countValue represents the number for non-null values used to calculate the histogram.
     * @category Public
     */
    countValue: number;
    /**
     * Fields Information of the Feature layer
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * Event when there is change in histogram data popover.
     * @category Public
     */
    arcgisChartsConfigHistogramDataPopoverChange: EventEmitter;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverOpenChange: EventEmitter<PopoverOpenChangePayload>;
    /**
     * Event emitted upon catching an error in an async function.
     * @event
     */
    arcgisChartsConfigDataChangeError: EventEmitter<DataChangeErrorPayload>;
    /**
     * When true, the content of the component will be displayed.
     */
    open: boolean;
    /**
     * @category Private
     */
    private selectedBinColorSymbol?;
    /**
     * @category Private
     */
    private selectedOverlaySymbol?;
    /**
     * @category Private
     */
    private selectedNumericalField?;
    /**
     * @category Private
     */
    private selectedTransformationType?;
    /**
     * @category Private
     * Number of updates that have occurred.
     */
    private updatesOccurred;
    /**
     * @category Private
     */
    private numericalFieldSelectionElement;
    /**
     * @category Private
     */
    private transformationSelectionElement;
    /**
     * @category Private
     */
    private histogramPopover;
    /**
     * @category Private
     */
    private binColorSectionElement;
    /**
     * @category Private
     */
    private overlaySectionElement;
    /**
     * @category Private
     */
    private meanOverlayElement;
    /**
     * @category Private
     */
    private medianOverlayElement;
    /**
     * @category Private
     */
    private normalDistOverlayElement;
    /**
     * @category Private
     */
    private standardDevOverlayElement;
    /**
     * @category Private
     */
    private binSliderElement;
    /**
     * @category Private
     */
    private binInputElement;
    /**
     * @category Private
     */
    private popoverHeading;
    /**
     * @category Private
     */
    private contentKind;
    /**
     * @category Private
     */
    private selectedOverlayKind;
    /**
     * @category Private
     */
    private meanOverlayVisible;
    /**
     * @category Private
     */
    private medianOverlayVisible;
    /**
     * @category Private
     */
    private normalDistOverlayVisible;
    /**
     * @category Private
     */
    private standardDevOverlayVisible;
    /**
     * @category Private
     */
    private direction;
    /**
     * @category Watch handler
     */
    modelChange(newModel: HistogramModel, oldModel?: HistogramModel): void;
    /**
     * @category Lifecycle
     */
    disconnectedCallback(): void;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    /**
     * Removing the popover whenever disconnected.
     * @category Private
     */
    private removeHistogramDataPopover;
    /**
     * @param field
     * @category Render UX
     */
    private renderFieldSelect;
    /**
     * @category Render UX
     */
    private renderDataTransformationType;
    /**
     * @category Private
     */
    private getDataTransformationLabel;
    /**
     * @param props
     * @category Render UX
     */
    private renderColorListItem;
    /**
     * @category Render UX
     */
    private renderBinColorElement;
    /**
     * @category Render UX
     */
    private renderNormalDistOverlay;
    /**
     * @category Render UX
     */
    private renderMeanOverlay;
    /**
     * @category Render UX
     */
    private renderStandardDevOverlay;
    /**
     * @category Render UX
     */
    private renderMedianOverlay;
    /**
     * @category Render UX
     */
    private renderOverlayList;
    /**
     * @param statName
     * @category Render UX
     */
    private renderStatItem;
    /**
     * @category Render UX
     */
    private renderStats;
    /**
     * @category Render UX
     */
    private renderShowDataLabels;
    /**
     * @category Render UX
     */
    private renderBinsSection;
    /**
     * @category Lifecycle
     */
    render(): HTMLElement;
    /**
     * @param statName
     * @category Private
     */
    private getStatValue;
    /**
     * @category Event handler
     */
    private onBinCountChange;
    /**
     * @category Event handler
     */
    private onBinCountSliderChange;
    /**
     * @category Event handler
     */
    private binCountChange;
    /**
     * @category Event handler
     */
    private onColorElementSelect;
    /**
     * @category Event handler
     */
    private onNumericFieldSelect;
    /**
     * @category Event handler
     */
    private onTransformationSelect;
    /**
     * @category Event handler
     */
    private onBinColorSelect;
    /**
     * @category Event handler
     */
    private onNormalDistColorSelect;
    /**
     * @category Event handler
     */
    private onMeanColorSelect;
    /**
     * @category Event handler
     */
    private onMedianColorSelect;
    /**
     * @category Event handler
     */
    private onStandardDevColorSelect;
    /**
     * @category Event handler
     */
    private onBinColorChange;
    /**
     * @category Event handler
     */
    private onMeanStyleChange;
    /**
     * @category Event handler
     */
    private onMedianStyleChange;
    /**
     * @category Event handler
     */
    private onStandardDevStyleChange;
    /**
     * @category Event handler
     */
    private onNormalDistStyleChange;
    /**
     * @category Event handler
     */
    private onShowDataLabelsChange;
    /**
     * @category Event handler
     */
    private onOverlayListChange;
    /**
     * Event handler when model config changes.
     * @category Event handler
     */
    private onModelConfigChange;
    /**
     * @category Private
     */
    private histogramPopoverChange;
    /**
     * Emit event on open popover.
     * @param e
     * @category Private
     */
    private openChange;
    /**
     * @category Private
     */
    private setupPopover;
    /**
     * @category Private
     */
    private addPopover;
    /**
     * @category Event handler
     */
    private updateProps;
    /**
     * @category Event handler
     */
    private updateSymbolProps;
    /**
     * @category Private
     */
    private popoverClose;
}
