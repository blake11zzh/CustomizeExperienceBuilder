import type { EventEmitter } from "../../stencil-public-runtime";
import type { Color, SimpleLineSymbolStyle } from "@arcgis/charts-spec";
import type { PopoverOpenChangePayload } from "../../utils/event-payloads";
/** @internal */
export declare class ArcgisChartsConfigBoxPlotSeriesPopover {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigBoxPlotSeriesPopoverElement;
    /**
     * @category Private
     */
    private strings;
    /**
     * property to which the popover needs to be attached.
     * @category Public
     */
    referenceElement: HTMLElement;
    /**
     * selected name to show in popover
     * @category Public
     */
    selectedName?: string;
    /**
     * selected color to show in popover
     * @category Public
     */
    selectedColor?: Color;
    /**
     * Selected line style to show in popover.
     *
     * **Only applicable when mean lines are shown.**
     *
     * @category Public
     */
    selectedLineStyle?: SimpleLineSymbolStyle;
    /**
     * Selected line width to show in popover.
     *
     * **Only applicable when mean lines are shown.**
     *
     * @category Public
     */
    selectedLineWidth?: number;
    /**
     * Whether the symbol is a line symbol or not.
     * @category Public
     */
    isLineSymbol?: boolean;
    /**
     * Reference element to show the popover.
     * @category Public
     */
    placement: HTMLCalcitePopoverElement["placement"];
    /**
     * open or close the popover.
     * @category Public
     */
    open: boolean;
    /**
     * Whether the label can be configured or not.
     * @category Public
     */
    labelCanBeConfigured: boolean;
    /**
     * Event when there is a change in series name.
     * @category Public
     */
    arcgisChartsConfigSeriesPopoverNameChange: EventEmitter<{
        name: string;
    }>;
    /**
     * Event when there is a change in series color.
     * @category Public
     */
    arcgisChartsConfigSeriesPopoverColorChange: EventEmitter<{
        color: Color;
    }>;
    /**
     * Event when there is a change in series line style.
     * @category Public
     */
    arcgisChartsConfigSeriesPopoverLineStyleChange: EventEmitter<{
        style: SimpleLineSymbolStyle;
    }>;
    /**
     * Event when there is a change in series line width.
     * @category Public
     */
    arcgisChartsConfigSeriesPopoverLineWidthChange: EventEmitter<{
        width: number;
    }>;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverClose: EventEmitter;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverOpenChange: EventEmitter<PopoverOpenChangePayload>;
    /**
     * Watch on open popover.
     * @category Private
     */
    openChange(): void;
    /**
     * Calls `reposition()` method on popover element.
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * @category Private
     */
    private popoverElement;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    /**
     * @category Lifecycle
     */
    componentDidLoad(): void;
    /**
     * @category Lifecycle
     */
    componentDidUpdate(): void;
    componentDidRender(): void;
    /**
     * @category Lifecycle
     */
    render(): HTMLCalcitePopoverElement;
    /**
     * @category Event handler
     */
    private seriesNameChange;
    /**
     * @category Event handler
     */
    private closePopover;
    /**
     * @category Event handler
     */
    private colorChange;
    /**
     * @category Event handler
     */
    private lineSymbolChange;
}
