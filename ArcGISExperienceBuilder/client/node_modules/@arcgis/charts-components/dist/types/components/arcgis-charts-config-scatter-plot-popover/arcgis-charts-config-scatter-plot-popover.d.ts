import type { EventEmitter } from "../../stencil-public-runtime";
import type { ISimpleLineSymbol, Color, IField } from "@arcgis/charts-spec";
import { ScatterPlotDataPopoverKinds } from "../../interfaces";
import type { PopoverOpenChangePayload } from "../../utils/event-payloads";
/** @internal */
export declare class ArcgisChartsConfigScatterPlotPopover {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigScatterPlotPopoverElement;
    /**
     * @category Private
     */
    private picklist;
    /**
     * @category Private
     */
    private strings;
    /**
     * Heading for the popover component
     * @category Public
     */
    headingTitle?: string;
    /**
     * Content kind for the popover.
     * @category Public
     */
    contentKind: ScatterPlotDataPopoverKinds;
    /**
     * Selected text properties to show for font style.
     * @category Public
     */
    selectedContent?: Color | ISimpleLineSymbol | string;
    /**
     * Reference element to show the popover.
     * @category Public
     */
    referenceElement: HTMLElement;
    /**
     * Place the popover in the give placement.
     * @category Public
     */
    placement: HTMLCalcitePopoverElement["placement"];
    /**
     * boolean to open or close the popover.
     * @category Public
     */
    open: boolean;
    /**
     * Fields Information of the Feature layer
     * @category Public
     */
    layerFieldsInfo?: IField[];
    /**
     * Event emitted when there is a change in symbol property.
     * @category Public
     */
    arcgisChartsConfigScatterPlotLineStyleChange: EventEmitter;
    /**
     * Event emitted when there is a change in text property.
     * @category Public
     */
    arcgisChartsConfigScatterPlotFillColorChange: EventEmitter;
    /**
     * Event emitted when there is a change in X-axis or Y-axis field type.
     * @event
     */
    arcgisChartsConfigScatterPlotXYFieldChange: EventEmitter;
    /**
     * Event emitted when there is a change in size variable field type.
     * @event
     */
    arcgisChartsConfigScatterPlotSizeVariableFieldChange: EventEmitter;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverClose: EventEmitter;
    /**
     * Event emitted when the popover is closed.
     * @category Public
     */
    arcgisChartsConfigPopoverOpenChange: EventEmitter<PopoverOpenChangePayload>;
    /**
     * Watch on open popover.
     * @category Private
     */
    openChange(): void;
    /**
     * Calls `reposition()` method on popover element.
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * @category Private
     */
    private popoverElement;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    /**
     * @category Lifecycle
     */
    componentDidLoad(): void;
    /**
     * @category Lifestyle
     */
    componentDidRender(): void;
    /**
     * @category Lifecycle
     */
    componentDidUpdate(): void;
    /**
     * @category Lifecycle
     */
    render(): HTMLCalcitePopoverElement;
    /**
     * @category Private
     */
    private seriesPopoverClose;
    /**
     * @category Event handler
     */
    private closePopover;
    /**
     * @category Event handler
     */
    private updateSymbolProperties;
    /**
     * @category Event handler
     */
    private updateColorProperties;
    /**
     * @param axis
     * @category Render UX
     */
    private renderVariablePickList;
    /**
     * @category Event handler
     * @param e
     */
    private onFieldSelectionChange;
}
