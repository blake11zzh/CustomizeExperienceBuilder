import type { EventEmitter } from "../../stencil-public-runtime";
import type { WebChartTextSymbol } from "@arcgis/charts-spec";
import type { FontStyleChangePayload } from "./resource";
/** @internal */
export declare class ArcgisChartsConfigFontStyle {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigFontStyleElement;
    /**
     * @category Private
     */
    private strings;
    /**
     * @category Private
     */
    private fontSizeInputElement;
    /**
     * style for the font and text properties.
     * @category Public
     */
    fontStyle: WebChartTextSymbol;
    /**
     * header for the font style
     * @category Public
     */
    header?: string;
    /**
     * boolean to open or close the popover.
     * @category Public
     */
    open?: boolean;
    /**
     * boolean to enable the close the panel.
     * @category Public
     */
    enableClose?: boolean;
    /**
     * Event when there is a change in font style.
     * @category Public
     */
    arcgisChartsConfigFontStyleChange: EventEmitter<FontStyleChangePayload>;
    /**
     * Event when there is a change in font style.
     * @event
     */
    arcgisChartsConfigFontStyleClose: EventEmitter<void>;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    /**
     * @category Render UX
     */
    private renderFonts;
    /**
     * @category Lifecycle
     */
    render(): HTMLElement;
    /**
     * @category Event handler
     */
    private closePanel;
    /**
     * @category Event handler
     */
    private fontChange;
    /**
     * @category Event handler
     */
    private fontSizeChange;
    /**
     * @category Event handler
     */
    private boldSelect;
    /**
     * @category Event handler
     */
    private italicSelect;
    /**
     * @category Event handler
     */
    private underlineSelect;
    /**
     * @category Event handler
     */
    private colorChange;
    /**
     * @param payload
     * @category Private
     */
    private emitFontStyleEvent;
    /**
     * @param property The property of fontStyle.font to compare to
     * @param font The new font
     * @category Private
     */
    private isNewFontProperty;
}
