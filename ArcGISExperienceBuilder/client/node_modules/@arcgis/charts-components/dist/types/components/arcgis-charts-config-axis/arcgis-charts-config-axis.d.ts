import type { ModelWithXYAxes } from "@arcgis/charts-model";
/** @internal */
export declare class ArcGISChartsConfigAxis {
    /**
     * @category Public
     */
    hostElement: HTMLArcgisChartsConfigAxisElement;
    /**
     * Chart Model.
     * @category Public
     */
    model: ModelWithXYAxes;
    /**
     * Whether this axis component is for the X-axis or the Y-axis.
     * @category Public
     */
    isXAxis: boolean;
    /**
     * Title of the axis.
     * @category Public
     */
    axisTitle: string;
    /**
     * Maximum limit for maxBounds input
     * @category Public
     */
    maxBoundMaxLimit: number;
    /**
     * Minimum limit for maxBounds input
     * @category Public
     */
    maxBoundMinLimit: number;
    /**
     * Minimum limit for minBounds input
     * @category Public
     */
    minBoundMinLimit: number;
    /**
     * Maximum limit for minBounds input
     * @category Public
     */
    minBoundMaxLimit: number;
    /**
     * Show maximum bounds option for the axis.
     * @category Public
     */
    showMaxBoundOption: boolean;
    /**
     * Show minimum bounds option for the axis.
     * @category Public
     */
    showMinBoundOption: boolean;
    /**
     * Show enable logarithmic option for the axis.
     * @category Public
     */
    showEnableLogOption: boolean;
    /**
     * Data max value for the field used by the axis.
     * @category Public
     */
    dataMaxValue?: number;
    /**
     * Data min value for the field used by the axis.
     * Used to know when to enable the logarithmic switch.
     * @category Public
     */
    dataMinValue?: number;
    /**
     * Initial value for the max bound.
     * @category Public
     */
    initialMaxBound?: number;
    /**
     * Initial value for the min bound.
     * @category Public
     */
    initialMinBound?: number;
    /**
     * determines whether to enable or disable max bound reset button
     * @category State
     */
    disableMaxBoundResetBtn: boolean;
    /**
     * determines whether to enable or disable min bound reset button
     * @category State
     */
    disableMinBoundResetBtn: boolean;
    /**
     * @category Private
     */
    private strings;
    /**
     * @category Private
     */
    private axisModel;
    /**
     * @category Private
     */
    private minBoundInputElement;
    /**
     * @category Private
     */
    private maxBoundInputElement;
    /**
     * @category Private
     */
    private showLogScaleSwitch;
    /**
     * @category Private
     */
    private showLogScaleTooltip;
    /**
     * @category Private
     */
    private direction;
    /**
     * @category Private
     */
    private defaultMinBound;
    /**
     * @category Private
     */
    private defaultMaxBound;
    /**
     * @category Private
     * Number of updates that have occurred.
     */
    private updatesOccurred;
    /**
     * @category Watch handler
     */
    modelChange(newModel: ModelWithXYAxes, oldModel?: ModelWithXYAxes): void;
    /**
     * Sets a default minimum bound when it is first calculated by the graph.
     * @param newValue The new minimum value
     * @param oldValue The old minimum value
     * @category Watch handler
     */
    dataMinValueChange(newValue: number, oldValue: number): void;
    /**
     * Sets a default maximum bound when it is first calculated by the graph.
     * @param newValue The new maximum value
     * @param oldValue The old maximum value
     * @category Watch handler
     */
    dataMaxValueChange(newValue: number, oldValue: number): void;
    initialMaxBoundChange(): void;
    initialMinBoundChange(): void;
    /**
     * @category Lifecycle
     */
    componentWillLoad(): Promise<void>;
    private getAxisBoundsFromStateStore;
    private disableResetButtons;
    /**
     * @category Lifecycle
     */
    componentDidRender(): void;
    /**
     * @category Lifecycle
     */
    render(): HTMLElement;
    /**
     * @category Lifecycle
     */
    disconnectedCallback(): void;
    /**
     * @category Render UX
     */
    private renderAxis;
    /**
     * @category Render UX
     */
    private renderMaxBound;
    /**
     * @category Render UX
     */
    private renderMinBound;
    /**
     * @category Render UX
     */
    private renderShowLogScale;
    /**
     * @category Event handler
     */
    private onShowLogScaleMouseEnter;
    /**
     * @category Event handler
     */
    private onShowLogScaleMouseLeave;
    /**
     * @category Event handler
     */
    private onCategoryFormatChange;
    private onMaxBoundsChange;
    /**
     * Using a debounce to avoid sending too fast a new max bound value to the chart
     * @category Event handler
     */
    private onMaxBoundsChangeDebounced;
    /**
     * @category Private
     */
    private updateEnableLogarithmic;
    private onMinBoundsChange;
    /**
     * Using a debounce to avoid sending too fast a new min bound value to the chart
     * @category Event handler
     */
    private onMinBoundsChangeDebounced;
    /**
     * @category Event handler
     */
    private onNumberFormatChange;
    /**
     * @category Event handler
     */
    private onRevertMaxBoundsToDefault;
    /**
     * @category Event handler
     */
    private onRevertMinBoundsToDefault;
    /**
     * @category Event handler
     */
    private enableLogScale;
    /**
     * Event handler when model config changes.
     * @category Event handler
     */
    private onModelConfigChange;
}
