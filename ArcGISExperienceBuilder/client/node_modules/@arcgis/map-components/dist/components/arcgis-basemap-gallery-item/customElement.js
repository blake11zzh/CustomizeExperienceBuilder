import { g as y, c as I } from "../../chunks/runtime.js";
import { classes as _ } from "@arcgis/components-utils";
import { watch as h } from "@arcgis/core/core/reactiveUtils.js";
import { LitElement as B, noShadowRoot as T, nothing as l, safeClassMap as s } from "@arcgis/lumina";
import { html as r } from "lit-html";
import { g as w } from "../../chunks/globalCss.js";
import { c as i } from "../../chunks/basemap-gallery-resources.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
function L(e) {
  return e.portalItem?.type === "Web Scene" || e.referenceLayers.some((t) => t.type === "scene");
}
function x(e) {
  return !!e?.portalItem?.tags?.some((t) => t.toLowerCase() === "beta");
}
class A extends B {
  constructor() {
    super(...arguments), this._itemState = "loading", this._isThumbnailLoaded = !1, this._isActive = !1;
  }
  static {
    this.properties = { _itemState: 16, _isThumbnailLoaded: 16, _isActive: 16, disabled: 5, item: 0, itemIndex: 9, viewModel: 0, messages: 0 };
  }
  static {
    this.shadowRootOptions = T;
  }
  //#endregion
  //#region Lifecycle
  loaded() {
    this.manager.onLifecycle(() => [
      h(() => this.item.state, (t) => {
        this._itemState = t;
      }, { sync: !0 }),
      h(() => this.viewModel.activeBasemap, (t) => {
        this._isActive = this.item.basemap.id === t?.id, this._isActive && (this.el.childElem?.focus(), this.el.scrollIntoView({ block: "nearest" }));
      }, { initial: !0, sync: !0 })
    ]);
  }
  //#endregion
  //#region Rendering
  render() {
    const { disabled: t, item: a, itemIndex: o, viewModel: c, messages: u } = this, b = a.basemap.thumbnailUrl || y("assets/basemap-gallery/images/basemap-toggle-64.svg"), m = a.basemap.title, g = a.basemap.portalItem?.snippet, $ = a.error?.message || g || m, { activeBasemapIndex: d } = c, n = d === o, f = n || d === -1 && o === 0 ? 0 : -1, v = {
      [i.selectedItem]: n,
      [i.itemError]: a.state === "error"
    }, p = `basemapgallery-item-${a.uid}`;
    return r`<div .ariaChecked=${n} .ariaDisabled=${t} aria-labelledby=${p ?? l} class=${s(_(i.item, v))} role=radio tabindex=${f ?? l} title=${$ ?? l} @click=${() => {
      a.state === "ready" && (c.activeBasemap = a.basemap);
    }}><img alt class=${s(i.itemThumbnail)} src=${b ?? l} @load=${() => {
      a.state !== "loading" && (this._isThumbnailLoaded = !0);
    }}><div class=${s(i.itemContent)}><div class=${s(i.itemTitle)}><span id=${p ?? l}>${m}</span></div>${L(a.basemap) ? C(a.basemap, u) : null}</div>${a.state !== "loading" && this._isThumbnailLoaded ? null : r`<calcite-scrim><span aria-hidden=true class=${s(w.loaderAnimation)} role=presentation></span></calcite-scrim>`}</div>`;
  }
}
function C(e, t) {
  return r`<div class=${s(i.itemTagsContainer)}>${S(t)}${x(e) ? D(t) : null}</div>`;
}
function S(e) {
  return r`<calcite-chip scale=s .label=${e.tag3D}>${e.tag3D}</calcite-chip>`;
}
function D(e) {
  return r`<calcite-chip appearance=outline-fill scale=s .label=${e.tagBeta}>${e.tagBeta}</calcite-chip>`;
}
I("arcgis-basemap-gallery-item", A);
export {
  A as ArcgisBasemapGalleryItem
};
