export namespace WebChartJSONSchemas {
    let $schema: string;
    let definitions: {
        RESTFieldType: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTStatisticType: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTSimpleLineSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTSimpleMarkerSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTSimpleFillSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTHorizontalAlignment: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTVerticalAlignment: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTSymbolType: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTFontStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTFontWeight: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTFontDecoration: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTRendererType: {
            enum: string[];
            type: string;
            title: string;
        };
        RESTUnits: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartTypes: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartDataTransformations: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartColoringPatterns: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartLegendPositions: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartStackedKinds: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartBoxPlotMultipleSeriesKinds: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartSortOrderKinds: {
            title: string;
            enum: string[];
            type: string;
        };
        WebChartLineSmoothedKinds: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartTimeIntervalUnits: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartNullPolicyTypes: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartTimeAggregationTypes: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartLabelBehavior: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartVersionStatus: {
            enum: string[];
            type: string;
            title: string;
        };
        WebChartAxisTypes: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        GaugeChartSubTypes: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        SizePolicyScaleTypes: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartRadarChartAxisLabelsOrientation: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        WebChartOrderDataByTypes: {
            description: string;
            title: string;
            enum: string[];
            type: string;
        };
        WebChartDirectionalDataOrder: {
            description: string;
            title: string;
            type: string;
            properties: {
                orderType: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                orderBy: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                preferLabel: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPredefinedLabelsDataOrder: {
            description: string;
            title: string;
            type: string;
            properties: {
                orderType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                orderBy: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                preferLabel: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartOrderSeriesBy: {
            description: string;
            title: string;
            type: string;
            properties: {
                preferLabel: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                orderBy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        IFeature: {
            description: string;
            title: string;
            type: string;
            properties: {
                geometry: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                attributes: {
                    $ref: string;
                    title: string;
                };
                symbol: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        IFeatureSet: {
            description: string;
            title: string;
            type: string;
            properties: {
                objectIdFieldName: {
                    type: string;
                    title: string;
                };
                globalIdFieldName: {
                    type: string;
                    title: string;
                };
                displayFieldName: {
                    type: string;
                    title: string;
                };
                geometryType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                fields: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                features: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fieldAliases: {
                    $ref: string;
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IHasZM: {
            description: string;
            type: string;
            properties: {
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        ISpatialReference: {
            description: string;
            title: string;
            type: string;
            properties: {
                wkid: {
                    type: string[];
                    title: string;
                };
                latestWkid: {
                    type: string;
                    title: string;
                };
                vcsWkid: {
                    type: string;
                    title: string;
                };
                latestVcsWkid: {
                    type: string;
                    title: string;
                };
                wkt: {
                    type: string[];
                    title: string;
                };
                latestWkt: {
                    type: string;
                    title: string;
                };
            };
        };
        IGeometry: {
            description: string;
            title: string;
            type: string;
            properties: {
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
        };
        IPoint: {
            description: string;
            title: string;
            type: string;
            properties: {
                x: {
                    type: string;
                    title: string;
                };
                y: {
                    type: string;
                    title: string;
                };
                z: {
                    type: string;
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        ILocation: {
            description: string;
            type: string;
            properties: {
                latitude: {
                    type: string;
                    title: string;
                };
                longitude: {
                    type: string;
                    title: string;
                };
                lat: {
                    type: string;
                    title: string;
                };
                long: {
                    type: string;
                    title: string;
                };
                z: {
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        IPolyline: {
            title: string;
            type: string;
            properties: {
                paths: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        IPolylineWithCurves: {
            type: string;
            properties: {
                curvePaths: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            anyOf: ({
                                type: string;
                                items: {
                                    type: string;
                                }[];
                                minItems: number;
                                maxItems: number;
                                $ref?: undefined;
                            } | {
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                                minItems?: undefined;
                                maxItems?: undefined;
                            })[];
                        };
                    };
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IPolygon: {
            title: string;
            type: string;
            properties: {
                rings: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        IPolygonWithCurves: {
            title: string;
            type: string;
            properties: {
                curveRings: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            anyOf: ({
                                type: string;
                                items: {
                                    type: string;
                                }[];
                                minItems: number;
                                maxItems: number;
                                $ref?: undefined;
                            } | {
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                                minItems?: undefined;
                                maxItems?: undefined;
                            })[];
                        };
                    };
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        Position2D: {
            type: string;
            items: {
                type: string;
            }[];
            minItems: number;
            maxItems: number;
            title: string;
        };
        IArc: {
            description: string;
            title: string;
            type: string;
            properties: {
                a: {
                    type: string;
                    items: ({
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    } | {
                        type: string;
                        items: {
                            type: string;
                        }[];
                        minItems: number;
                        maxItems: number;
                        $ref?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    })[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
            };
            required: string[];
        };
        IBezierCurve: {
            description: string;
            title: string;
            type: string;
            properties: {
                b: {
                    type: string;
                    items: ({
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    } | {
                        type: string;
                        items: {
                            type: string;
                        }[];
                        minItems: number;
                        maxItems: number;
                        $ref?: undefined;
                    })[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
            };
            required: string[];
        };
        ICircularArc: {
            description: string;
            title: string;
            type: string;
            properties: {
                c: {
                    type: string;
                    items: ({
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    } | {
                        type: string;
                        items: {
                            type: string;
                        }[];
                        minItems: number;
                        maxItems: number;
                        $ref?: undefined;
                    })[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
            };
            required: string[];
        };
        ElipticArc: {
            $ref: string;
            description: string;
            title: string;
        };
        IEnvelope: {
            description: string;
            title: string;
            type: string;
            properties: {
                xmin: {
                    type: string;
                    title: string;
                };
                xmax: {
                    type: string;
                    title: string;
                };
                ymin: {
                    type: string;
                    title: string;
                };
                ymax: {
                    type: string;
                    title: string;
                };
                zmin: {
                    type: string;
                    title: string;
                };
                zmax: {
                    type: string;
                    title: string;
                };
                mmin: {
                    type: string;
                    title: string;
                };
                mmax: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        GeometryType: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        SpatialRelationship: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        IExtent: {
            description: string;
            title: string;
            type: string;
            properties: {
                xmin: {
                    type: string;
                    title: string;
                };
                ymin: {
                    type: string;
                    title: string;
                };
                zmin: {
                    type: string;
                    title: string;
                };
                xmax: {
                    type: string;
                    title: string;
                };
                ymax: {
                    type: string;
                    title: string;
                };
                zmax: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        JsonCurve: {
            anyOf: {
                $ref: string;
            }[];
            title: string;
        };
        IOldCircularArc: {
            title: string;
            type: string;
            properties: {
                a: {
                    type: string;
                    items: ({
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    } | {
                        type: string;
                        items: {
                            type: string;
                        }[];
                        minItems: number;
                        maxItems: number;
                        $ref?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                        items?: undefined;
                        minItems?: undefined;
                        maxItems?: undefined;
                    })[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
            };
            required: string[];
        };
        IMultipoint: {
            description: string;
            type: string;
            properties: {
                points: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        Units: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        GroupMembership: {
            description: string;
            enum: string[];
            type: string;
            title: string;
        };
        IGroupAdd: {
            description: string;
            type: string;
            additionalProperties: {};
            properties: {
                title: {
                    type: string;
                    title: string;
                };
                access: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                owner: {
                    type: string;
                    title: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                description: {
                    type: string;
                    title: string;
                };
                phone: {
                    type: string;
                    title: string;
                };
                sortField: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                sortOrder: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                isViewOnly: {
                    type: string;
                    title: string;
                };
                isInvitationOnly: {
                    type: string;
                    title: string;
                };
                thumbnail: {
                    type: string;
                    title: string;
                };
                autoJoin: {
                    type: string;
                    title: string;
                };
                snippet: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IGroup: {
            description: string;
            title: string;
            type: string;
            properties: {
                id: {
                    type: string;
                    title: string;
                };
                owner: {
                    type: string;
                    title: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                created: {
                    type: string;
                    title: string;
                };
                modified: {
                    type: string;
                    title: string;
                };
                protected: {
                    type: string;
                    title: string;
                };
                isInvitationOnly: {
                    type: string;
                    title: string;
                };
                isViewOnly: {
                    type: string;
                    title: string;
                };
                isOpenData: {
                    type: string;
                    title: string;
                };
                isFav: {
                    type: string;
                    title: string;
                };
                autoJoin: {
                    type: string;
                    title: string;
                };
                userMembership: {
                    type: string;
                    properties: {
                        username: {
                            type: string;
                            title: string;
                        };
                        memberType: {
                            description: string;
                            enum: string[];
                            type: string;
                            title: string;
                        };
                        applications: {
                            type: string;
                            title: string;
                        };
                    };
                    title: string;
                };
                hasCategorySchema: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                access: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                description: {
                    type: string;
                    title: string;
                };
                phone: {
                    type: string;
                    title: string;
                };
                sortField: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                sortOrder: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                thumbnail: {
                    type: string;
                    title: string;
                };
                snippet: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IItemAdd: {
            description: string;
            type: string;
            additionalProperties: {};
            properties: {
                title: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                owner: {
                    type: string;
                    title: string;
                };
                typeKeywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                description: {
                    type: string;
                    title: string;
                };
                snippet: {
                    type: string;
                    title: string;
                };
                documentation: {
                    type: string;
                    title: string;
                };
                extent: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    title: string;
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                culture: {
                    type: string;
                    title: string;
                };
                properties: {
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IItemUpdate: {
            description: string;
            type: string;
            additionalProperties: {};
            properties: {
                id: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IItem: {
            description: string;
            type: string;
            properties: {
                id: {
                    type: string;
                    title: string;
                };
                owner: {
                    type: string;
                    title: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                created: {
                    type: string;
                    title: string;
                };
                modified: {
                    type: string;
                    title: string;
                };
                numViews: {
                    type: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                protected: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                typeKeywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                description: {
                    type: string;
                    title: string;
                };
                snippet: {
                    type: string;
                    title: string;
                };
                documentation: {
                    type: string;
                    title: string;
                };
                extent: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    title: string;
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                culture: {
                    type: string;
                    title: string;
                };
                properties: {
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IFolder: {
            description: string;
            type: string;
            properties: {
                username: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                created: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IFeatureServiceDefinition: {
            description: string;
            type: string;
            properties: {
                currentVersion: {
                    type: string;
                    title: string;
                };
                serviceDescription: {
                    type: string;
                    title: string;
                };
                hasVersionedData: {
                    type: string;
                    title: string;
                };
                supportsDisconnectedEditing: {
                    type: string;
                    title: string;
                };
                supportsReturnDeleteResults: {
                    type: string;
                    title: string;
                };
                hasStaticData: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxRecordCount: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportedQueryFormats: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsRelationshipsResource: {
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    type: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string;
                    title: string;
                };
                copyrightText: {
                    description: string;
                    type: string;
                    title: string;
                };
                advancedEditingCapabilities: {
                    $ref: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                initialExtent: {
                    $ref: string;
                    title: string;
                };
                fullExtent: {
                    $ref: string;
                    title: string;
                };
                allowGeometryUpdates: {
                    description: string;
                    type: string;
                    title: string;
                };
                units: {
                    type: string;
                    title: string;
                };
                syncEnabled: {
                    type: string;
                    title: string;
                };
                returnServiceEditsHaveSR: {
                    type: string;
                    title: string;
                };
                validationSystemLayers: {
                    type: string;
                    properties: {
                        validationPointErrorlayerId: {
                            type: string;
                            title: string;
                        };
                        validationLineErrorlayerId: {
                            type: string;
                            title: string;
                        };
                        validationPolygonErrorlayerId: {
                            type: string;
                            title: string;
                        };
                        validationObjectErrortableId: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                extractChangesCapabilities: {
                    type: string;
                    properties: {
                        supportsReturnIdsOnly: {
                            type: string;
                            title: string;
                        };
                        supportsReturnExtentOnly: {
                            type: string;
                            title: string;
                        };
                        supportsReturnAttachments: {
                            type: string;
                            title: string;
                        };
                        supportsLayerQueries: {
                            type: string;
                            title: string;
                        };
                        supportsSpatialFilter: {
                            type: string;
                            title: string;
                        };
                        supportsReturnFeature: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                syncCapabilities: {
                    type: string;
                    properties: {
                        supportsASync: {
                            type: string;
                            title: string;
                        };
                        supportsRegisteringExistingData: {
                            type: string;
                            title: string;
                        };
                        supportsSyncDirectionControl: {
                            type: string;
                            title: string;
                        };
                        supportsPerLayerSync: {
                            type: string;
                            title: string;
                        };
                        supportsPerReplicaSync: {
                            type: string;
                            title: string;
                        };
                        supportsRollbackOnFailure: {
                            type: string;
                            title: string;
                        };
                        supportedSyncDataOptions: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                editorTrackingInfo: {
                    type: string;
                    properties: {
                        enableEditorTracking: {
                            type: string;
                            title: string;
                        };
                        enableOwnershipAccessControl: {
                            type: string;
                            title: string;
                        };
                        allowOthersToUpdate: {
                            type: string;
                            title: string;
                        };
                        allowOthersToDelete: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                documentInfo: {
                    $ref: string;
                    title: string;
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                tables: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                relationships: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                type: string;
                                title: string;
                            };
                            name: {
                                type: string;
                                title: string;
                            };
                            backwardPathLabel: {
                                type: string;
                                title: string;
                            };
                            originLayerId: {
                                type: string;
                                title: string;
                            };
                            originPrimaryKey: {
                                type: string;
                                title: string;
                            };
                            forwardPathLabel: {
                                type: string;
                                title: string;
                            };
                            destinationLayerId: {
                                type: string;
                                title: string;
                            };
                            originForeignKey: {
                                type: string;
                                title: string;
                            };
                            relationshipTableId: {
                                type: string;
                                title: string;
                            };
                            destinationPrimaryKey: {
                                type: string;
                                title: string;
                            };
                            destinationForeignKey: {
                                type: string;
                                title: string;
                            };
                            rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        ruleID: {
                                            type: string;
                                            title: string;
                                        };
                                        originSubtypeCode: {
                                            type: string;
                                            title: string;
                                        };
                                        originMinimumCardinality: {
                                            type: string;
                                            title: string;
                                        };
                                        originMaximumCardinality: {
                                            type: string;
                                            title: string;
                                        };
                                        destinationSubtypeCode: {
                                            type: string;
                                            title: string;
                                        };
                                        destinationMinimumCardinality: {
                                            type: string;
                                            title: string;
                                        };
                                        destinationMaximumCardinality: {
                                            type: string;
                                            title: string;
                                        };
                                    };
                                    required: string[];
                                }[];
                                minItems: number;
                                maxItems: number;
                                title: string;
                            };
                            cardinality: {
                                enum: string[];
                                type: string;
                                title: string;
                            };
                            attributed: {
                                type: string;
                                title: string;
                            };
                            composite: {
                                type: string;
                                title: string;
                            };
                        };
                        required: string[];
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                enableZDefaults: {
                    type: string;
                    title: string;
                };
                isLocationTrackingService: {
                    type: string;
                    title: string;
                };
                isLocationTrackingView: {
                    type: string;
                    title: string;
                };
                zDefault: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IServiceInfo: {
            description: string;
            type: string;
            properties: {
                adminServiceInfo: {
                    type: string;
                    properties: {
                        name: {
                            type: string;
                            title: string;
                        };
                        type: {
                            type: string;
                            title: string;
                        };
                        status: {
                            type: string;
                            title: string;
                        };
                        database: {
                            type: string;
                            properties: {
                                datasource: {
                                    type: string;
                                    properties: {
                                        name: {
                                            type: string;
                                            title: string;
                                        };
                                    };
                                    required: string[];
                                    title: string;
                                };
                            };
                            required: string[];
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IViewServiceSource: {
            description: string;
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                serviceItemId: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IViewServiceSources: {
            description: string;
            type: string;
            properties: {
                currentVersion: {
                    type: string;
                    title: string;
                };
                services: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IServiceNameAvailable: {
            description: string;
            type: string;
            properties: {
                available: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IStatisticDefinition: {
            title: string;
            type: string;
            properties: {
                statisticType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                statisticParameters: {
                    description: string;
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            title: string;
                        };
                        orderBy: {
                            enum: string[];
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                onStatisticField: {
                    description: string;
                    type: string;
                    title: string;
                };
                outStatisticFieldName: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IFont: {
            title: string;
            type: string;
            properties: {
                family: {
                    type: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                style: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                weight: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                decoration: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        IPictureSourced: {
            type: string;
            properties: {
                url: {
                    type: string;
                    title: string;
                };
                imageData: {
                    type: string;
                    title: string;
                };
                contentType: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        ISymbol: {
            title: string;
            type: string;
            properties: {
                type: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IMarkerSymbol: {
            type: string;
            properties: {
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
                type: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IPictureFillSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                outline: {
                    $ref: string;
                    title: string;
                };
                xscale: {
                    type: string;
                    title: string;
                };
                yscale: {
                    type: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                imageData: {
                    type: string;
                    title: string;
                };
                contentType: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IPictureMarkerSymbol: {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                imageData: {
                    type: string;
                    title: string;
                };
                contentType: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SimpleMarkerSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        SimpleLineSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        SimpleFillSymbolStyle: {
            enum: string[];
            type: string;
            title: string;
        };
        ISimpleFillSymbol: {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                style: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                outline: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        ISimpleLineSymbol: {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                style: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ISimpleMarkerSymbol: {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                style: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                outline: {
                    $ref: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ITextSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                backgroundColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                borderLineSize: {
                    type: string;
                    title: string;
                };
                borderLineColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                haloSize: {
                    type: string;
                    title: string;
                };
                haloColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                verticalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                horizontalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                rightToLeft: {
                    type: string;
                    title: string;
                };
                kerning: {
                    type: string;
                    title: string;
                };
                font: {
                    $ref: string;
                    title: string;
                };
                text: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                xoffset: {
                    type: string;
                    title: string;
                };
                yoffset: {
                    type: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IUser: {
            description: string;
            type: string;
            properties: {
                username: {
                    type: string;
                    title: string;
                };
                fullName: {
                    type: string;
                    title: string;
                };
                availableCredits: {
                    type: string;
                    title: string;
                };
                assignedCredits: {
                    type: string;
                    title: string;
                };
                firstName: {
                    type: string;
                    title: string;
                };
                lastName: {
                    type: string;
                    title: string;
                };
                preferredView: {
                    title: string;
                };
                description: {
                    type: string;
                    title: string;
                };
                email: {
                    type: string;
                    title: string;
                };
                idpUsername: {
                    type: string;
                    title: string;
                };
                favGroupId: {
                    type: string;
                    title: string;
                };
                lastLogin: {
                    type: string;
                    title: string;
                };
                mfaEnabled: {
                    type: string;
                    title: string;
                };
                access: {
                    type: string;
                    title: string;
                };
                storageUsage: {
                    type: string;
                    title: string;
                };
                storageQuota: {
                    type: string;
                    title: string;
                };
                orgId: {
                    type: string;
                    title: string;
                };
                cOrgId: {
                    type: string;
                    title: string;
                };
                role: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                privileges: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                roleId: {
                    type: string;
                    title: string;
                };
                level: {
                    type: string;
                    title: string;
                };
                disabled: {
                    type: string;
                    title: string;
                };
                units: {
                    type: string;
                    title: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                culture: {
                    type: string;
                    title: string;
                };
                region: {
                    type: string;
                    title: string;
                };
                thumbnail: {
                    type: string;
                    title: string;
                };
                created: {
                    type: string;
                    title: string;
                };
                modified: {
                    type: string;
                    title: string;
                };
                groups: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                provider: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        FieldType: {
            description: string;
            title: string;
            enum: string[];
            type: string;
        };
        DomainType: {
            description: string;
            title: string;
            enum: string[];
            type: string;
        };
        ICodedValue: {
            description: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                code: {
                    description: string;
                    type: string[];
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IDomain: {
            description: string;
            type: string;
            properties: {
                type: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                range: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                codedValues: {
                    description: string;
                    type: string;
                    items: {
                        description: string;
                        type: string;
                        properties: {
                            name: {
                                description: string;
                                type: string;
                                title: string;
                            };
                            code: {
                                description: string;
                                type: string[];
                                title: string;
                            };
                        };
                        required: string[];
                    };
                    title: string;
                };
                description: {
                    description: string;
                    type: string;
                    title: string;
                };
                mergePolicy: {
                    description: string;
                    type: string;
                    title: string;
                };
                splitPolicy: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IField: {
            description: string;
            title: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                alias: {
                    description: string;
                    type: string;
                    title: string;
                };
                domain: {
                    description: string;
                    type: string;
                    properties: {
                        type: {
                            $ref: string;
                            description: string;
                            title: string;
                        };
                        name: {
                            description: string;
                            type: string;
                            title: string;
                        };
                        range: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            }[];
                            minItems: number;
                            maxItems: number;
                            title: string;
                        };
                        codedValues: {
                            description: string;
                            type: string;
                            items: {
                                description: string;
                                type: string;
                                properties: {
                                    name: {
                                        description: string;
                                        type: string;
                                        title: string;
                                    };
                                    code: {
                                        description: string;
                                        type: string[];
                                        title: string;
                                    };
                                };
                                required: string[];
                            };
                            title: string;
                        };
                        description: {
                            description: string;
                            type: string;
                            title: string;
                        };
                        mergePolicy: {
                            description: string;
                            type: string;
                            title: string;
                        };
                        splitPolicy: {
                            description: string;
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                editable: {
                    description: string;
                    type: string;
                    title: string;
                };
                exactMatch: {
                    description: string;
                    type: string;
                    title: string;
                };
                length: {
                    description: string;
                    type: string;
                    title: string;
                };
                nullable: {
                    description: string;
                    type: string;
                    title: string;
                };
                defaultValue: {
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        IPagingParams: {
            description: string;
            type: string;
            properties: {
                start: {
                    type: string;
                    title: string;
                };
                num: {
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        IPagedResponse: {
            description: string;
            type: string;
            properties: {
                total: {
                    description: string;
                    type: string;
                    title: string;
                };
                nextStart: {
                    description: string;
                    type: string;
                    title: string;
                };
                start: {
                    type: string;
                    title: string;
                };
                num: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IFieldFormat: {
            description: string;
            title: string;
            type: string;
            properties: {
                dateFormat: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                digitSeparator: {
                    description: string;
                    type: string;
                    title: string;
                };
                places: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IFieldInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                fieldName: {
                    description: string;
                    title: string;
                };
                format: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                isEditable: {
                    description: string;
                    type: string;
                    title: string;
                };
                label: {
                    description: string;
                    type: string;
                    title: string;
                };
                stringFieldOption: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                tooltip: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IPopupExpressionInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                expression: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                returnType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IMediaInfoValue: {
            description: string;
            title: string;
            type: string;
            properties: {
                fields: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                linkURL: {
                    description: string;
                    type: string;
                    title: string;
                };
                normalizeField: {
                    description: string;
                    type: string;
                    title: string;
                };
                sourceURL: {
                    description: string;
                    type: string;
                    title: string;
                };
                tooltipField: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IMediaInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                caption: {
                    description: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                value: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
        };
        IPopupElement: {
            description: string;
            title: string;
            type: string;
            properties: {
                displayType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                fieldInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                mediaInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                text: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        IOrderByField: {
            description: string;
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                order: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        IRelatedRecordsInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                orderByFields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                showRelatedRecords: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IPopupInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                expressionInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fieldInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                layerOptions: {
                    description: string;
                    type: string;
                    properties: {
                        showNoDataRecords: {
                            description: string;
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                mediaInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                popupElements: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                relatedRecordsInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                showAttachments: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IWebMapBackground: {
            description: string;
            title: string;
            type: string;
            properties: {
                color: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
            };
            required: string[];
        };
        IBookmark: {
            description: string;
            title: string;
            type: string;
            properties: {
                extent: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IMapRangeInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                activeRangeName: {
                    description: string;
                    type: string;
                    title: string;
                };
                currentRangeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                fullRangeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
        };
        IMapLocation: {
            description: string;
            title: string;
            type: string;
            properties: {
                centerPoint: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        IVisibleLayer: {
            description: string;
            title: string;
            type: string;
            properties: {
                featureVisibility: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                        items: {};
                    };
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                subLayerIds: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
        };
        IVisiblePopup: {
            description: string;
            title: string;
            type: string;
            properties: {
                anchorPoint: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                featureId: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerId: {
                    description: string;
                    type: string;
                    title: string;
                };
                subLayerId: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        ISlide: {
            title: string;
            type: string;
            properties: {
                baseMap: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                extent: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                hidden: {
                    description: string;
                    type: string;
                    title: string;
                };
                mapLocation: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                timeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibleLayers: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                visiblePopup: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
        };
        IPresentation: {
            type: string;
            properties: {
                displayTimeSlider: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                slideAdvancementInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                slides: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                useTimeExtentOfSlide: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        ITable: {
            description: string;
            title: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    type: string;
                    title: string;
                };
                definitionEditor: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IWebmap: {
            description: string;
            type: string;
            properties: {
                applicationProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                authoringApp: {
                    description: string;
                    type: string;
                    title: string;
                };
                authoringAppVersion: {
                    description: string;
                    type: string;
                    title: string;
                };
                background: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                baseMap: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                bookmarks: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                mapRangeInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                operationalLayers: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                presentation: {
                    description: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                tables: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    title: string;
                };
                widgets: {
                    description: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IRange: {
            description: string;
            title: string;
            type: string;
            properties: {
                interactionMode: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                numberOfStops: {
                    description: string;
                    title: string;
                };
                stopInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IWidget: {
            description: string;
            type: string;
            properties: {
                range: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                timeSlider: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            title: string;
        };
        ITimeSliderProperties: {
            description: string;
            title: string;
            type: string;
            properties: {
                currentTimeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                endTime: {
                    description: string;
                    type: string;
                    title: string;
                };
                numberOfStops: {
                    description: string;
                    type: string;
                    title: string;
                };
                startTime: {
                    description: string;
                    type: string;
                    title: string;
                };
                thumbCount: {
                    description: string;
                    type: string;
                    title: string;
                };
                thumbMovingRate: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeStopInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        ITimeSlider: {
            description: string;
            type: string;
            properties: {
                properties: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IApplicationProperties: {
            description: string;
            title: string;
            type: string;
            properties: {
                editing: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offline: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                viewing: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
        };
        IEditingProperties: {
            description: string;
            title: string;
            type: string;
            properties: {
                locationTracking: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        ILocationTracking: {
            description: string;
            title: string;
            type: string;
            properties: {
                enabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                info: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        ILocationTrackingInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                layerId: {
                    description: string;
                    title: string;
                };
                updateInterval: {
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        IOfflineInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                editableLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                readonlyLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        IEditableLayers: {
            description: string;
            title: string;
            type: string;
            properties: {
                download: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                sync: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IReadOnlyLayers: {
            description: string;
            title: string;
            type: string;
            properties: {
                downloadAttachments: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IEnableable: {
            title: string;
            type: string;
            properties: {
                enabled: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ISearch: {
            description: string;
            title: string;
            type: string;
            properties: {
                disablePlaceFinder: {
                    description: string;
                    title: string;
                };
                hintText: {
                    description: string;
                    title: string;
                };
                layers: {
                    description: string;
                    title: string;
                };
                enabled: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IViewingInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                basemapGallery: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                measure: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                routing: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                search: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
        };
        IBaseMap: {
            description: string;
            title: string;
            type: string;
            properties: {
                baseMapLayers: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ILayer: {
            title: string;
            type: string;
            properties: {
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ISupportsTime: {
            type: string;
            properties: {
                timeAnimation: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        IBingLayer: {
            type: string;
            properties: {
                bingKey: {
                    description: string;
                    type: string;
                    title: string;
                };
                canShareBingPublic: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                portalUrl: {
                    description: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IImageServiceLayer: {
            type: string;
            properties: {
                bandIds: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                compressionQuality: {
                    description: string;
                    title: string;
                };
                definitionEditor: {
                    description: string;
                    title: string;
                };
                disablePopup: {
                    description: string;
                    type: string;
                    title: string;
                };
                format: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                interpolation: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                isReference: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                mosaicRule: {
                    description: string;
                    title: string;
                };
                noData: {
                    description: string;
                    title: string;
                };
                noDataInterpretation: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                pixelType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                renderingRule: {
                    description: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAnimation: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IImageVectorLayer: {
            type: string;
            properties: {
                definitionEditor: {
                    description: string;
                    title: string;
                };
                disablePopup: {
                    description: string;
                    title: string;
                };
                isReference: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                mosaicRule: {
                    description: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                symbolTileSize: {
                    description: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAnimation: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IDefinitionParameter: {
            title: string;
            type: string;
            properties: {
                defaultValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fieldName: {
                    description: string;
                    type: string;
                    title: string;
                };
                parameterId: {
                    description: string;
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                utcValue: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IDefinitionInput: {
            title: string;
            type: string;
            properties: {
                hint: {
                    description: string;
                    type: string;
                    title: string;
                };
                parameters: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                prompt: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IDefinitionEditor: {
            description: string;
            title: string;
            type: string;
            properties: {
                inputs: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                parameterizedExpression: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IChildLayer: {
            description: string;
            title: string;
            type: string;
            properties: {
                defaultVisibility: {
                    description: string;
                    title: string;
                };
                definitionEditor: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                featureSet: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                field: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    title: string;
                };
                layerUrl: {
                    description: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    title: string;
                };
                nextObjectId: {
                    description: string;
                    title: string;
                };
                parentLayerId: {
                    description: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    title: string;
                };
                subLayer: {
                    description: string;
                    title: string;
                };
                subLayerIds: {
                    description: string;
                    title: string;
                };
                title: {
                    description: string;
                    title: string;
                };
            };
        };
        IMapServiceLayer: {
            type: string;
            properties: {
                isReference: {
                    description: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                layers: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                thematicGroup: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                visibleLayers: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAnimation: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IThematicGroup: {
            title: string;
            type: string;
            properties: {
                fieldNames: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                layerIds: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        IDrawingInfo: {
            type: string;
            properties: {
                fixedSymbols: {
                    description: string;
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    title: string;
                };
                renderer: {
                    description: string;
                    title: string;
                };
                scaleSymbols: {
                    description: string;
                    title: string;
                };
                showLabels: {
                    description: string;
                    type: string;
                    title: string;
                };
                transparency: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        IEditingInfo: {
            title: string;
            type: string;
            properties: {
                lastEditDate: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        ILayerDefinition: {
            description: string;
            title: string;
            type: string;
            properties: {
                allowGeometryUpdates: {
                    description: string;
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    type: string;
                    title: string;
                };
                copyrightText: {
                    description: string;
                    type: string;
                    title: string;
                };
                currentVersion: {
                    description: string;
                    type: string;
                    title: string;
                };
                defaultVisibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                definitionEditor: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                definitionExpression: {
                    description: string;
                    type: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string;
                    title: string;
                };
                displayField: {
                    description: string;
                    type: string;
                    title: string;
                };
                drawingInfo: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editingInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                featureReduction: {
                    description: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                geometryType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                globalIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasAttachments: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasStaticData: {
                    description: string;
                    type: string;
                    title: string;
                };
                htmlPopupType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                isDataVersioned: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxRecordCount: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                overrideSymbols: {
                    description: string;
                    type: string;
                    title: string;
                };
                rangeInfos: {
                    description: string;
                    title: string;
                };
                source: {
                    description: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                supportedQueryFormats: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsAdvancedQueries: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsAttachmentsByUploadId: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsCalculate: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsRollbackOnFailureParameter: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsStatistics: {
                    description: string;
                    type: string;
                    title: string;
                };
                supportsValidateSql: {
                    description: string;
                    type: string;
                    title: string;
                };
                templates: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                timeInfo: {
                    description: string;
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                typeIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                types: {
                    description: string;
                    title: string;
                };
                visibilityField: {
                    description: string;
                    type: string;
                    title: string;
                };
                relationships: {
                    type: string;
                    items: {};
                    title: string;
                };
                editFieldsInfo: {
                    type: string;
                    properties: {
                        creationDateField: {
                            type: string;
                            title: string;
                        };
                        creatorField: {
                            type: string;
                            title: string;
                        };
                        editDateField: {
                            type: string;
                            title: string;
                        };
                        editorField: {
                            type: string;
                            title: string;
                        };
                    };
                    title: string;
                };
                parentLayerId: {
                    type: string;
                    title: string;
                };
                ownershipBasedAccessControlForFeatures: {
                    type: string;
                    title: string;
                };
                syncCanReturnChanges: {
                    type: string;
                    title: string;
                };
                archivingInfo: {
                    type: string;
                    properties: {
                        supportsQueryWithHistoricMoment: {
                            type: string;
                            title: string;
                        };
                        startArchivingMoment: {
                            type: string;
                            title: string;
                        };
                    };
                    title: string;
                };
                supportsValidateSQL: {
                    type: string;
                    title: string;
                };
                advancedQueryCapabilities: {
                    type: string;
                    properties: {
                        supportsPagination: {
                            type: string;
                            title: string;
                        };
                        supportsTrueCurve: {
                            type: string;
                            title: string;
                        };
                        supportsQueryWithDistance: {
                            type: string;
                            title: string;
                        };
                        supportsReturningQueryExtent: {
                            type: string;
                            title: string;
                        };
                        supportsStatistics: {
                            type: string;
                            title: string;
                        };
                        supportsOrderBy: {
                            type: string;
                            title: string;
                        };
                        supportsDistinct: {
                            type: string;
                            title: string;
                        };
                        supportsSqlExpression: {
                            type: string;
                            title: string;
                        };
                        supportsPercentileStatistics: {
                            type: string;
                            title: string;
                        };
                    };
                    title: string;
                };
                allowTrueCurvesUpdates: {
                    type: string;
                    title: string;
                };
                onlyAllowTrueCurveUpdatesByTrueCurveClients: {
                    type: string;
                    title: string;
                };
                supportsApplyEditsWithGlobalIds: {
                    type: string;
                    title: string;
                };
                subtypeField: {
                    type: string;
                    title: string;
                };
                indexes: {
                    type: string;
                    items: {};
                    title: string;
                };
                dateFieldsTimeReference: {
                    type: string;
                    properties: {
                        timeZone: {
                            type: string;
                            title: string;
                        };
                        respectsDaylightSaving: {
                            type: string;
                            title: string;
                        };
                    };
                    title: string;
                };
                useStandardizedQueries: {
                    type: string;
                    title: string;
                };
                hasZ: {
                    type: string;
                    title: string;
                };
                hasM: {
                    type: string;
                    title: string;
                };
            };
        };
        ITypeInfoDomain: {
            type: string;
            properties: {
                type: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        FeatureEditTool: {
            enum: string[];
            type: string;
            title: string;
        };
        ITemplate: {
            description: string;
            title: string;
            type: string;
            properties: {
                description: {
                    description: string;
                    title: string;
                };
                drawingTool: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                prototype: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
        };
        ITypeInfo: {
            type: string;
            properties: {
                domains: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                templates: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            title: string;
        };
        IOpenStreetMapLayer: {
            description: string;
            type: string;
            properties: {
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        ITiledImageServiceLayer: {
            type: string;
            properties: {
                isReference: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IExclusionArea: {
            description: string;
            title: string;
            type: string;
            properties: {
                geometry: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxZoom: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minZoom: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        ITiledMapServiceLayer: {
            description: string;
            type: string;
            properties: {
                displayLevels: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                exclusionAreas: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                isReference: {
                    description: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                layers: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IVectorTileLayer: {
            description: string;
            type: string;
            properties: {
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                styleUrl: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        ILod: {
            title: string;
            type: string;
            properties: {
                level: {
                    description: string;
                    type: string;
                    title: string;
                };
                levelValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                resolution: {
                    description: string;
                    type: string;
                    title: string;
                };
                scale: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        ITileInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                cols: {
                    description: string;
                    title: string;
                };
                compressionQuality: {
                    description: string;
                    title: string;
                };
                dpi: {
                    description: string;
                    title: string;
                };
                format: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                lods: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                origin: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                rows: {
                    description: string;
                    title: string;
                };
                spatialReference: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
        };
        IWebMapTileServiceInfo: {
            description: string;
            title: string;
            type: string;
            properties: {
                customLayerParameters: {
                    description: string;
                    title: string;
                };
                customParameters: {
                    description: string;
                    title: string;
                };
                layerIdentifier: {
                    description: string;
                    type: string;
                    title: string;
                };
                tileMatrixSet: {
                    description: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IWebTiledLayer: {
            type: string;
            properties: {
                copyright: {
                    description: string;
                    title: string;
                };
                fullExtent: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                isReference: {
                    description: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    title: string;
                };
                subDomains: {
                    description: string;
                    title: string;
                };
                templateUrl: {
                    description: string;
                    title: string;
                };
                tileInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                wmtsInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        ICsvLayer: {
            description: string;
            type: string;
            properties: {
                columnDelimiter: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                locationInfo: {
                    description: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IFeatureLayer: {
            description: string;
            title: string;
            type: string;
            properties: {
                capabilities: {
                    description: string;
                    type: string;
                    title: string;
                };
                definitionEditor: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                disablePopup: {
                    description: string;
                    const: boolean;
                    type: string;
                    title: string;
                };
                featureCollection: {
                    description: string;
                    title: string;
                };
                featureCollectionType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                mode: {
                    description: string;
                    enum: number[];
                    type: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLabels: {
                    description: string;
                    const: boolean;
                    type: string;
                    title: string;
                };
                visibleLayers: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAnimation: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IGeoRssLayer: {
            type: string;
            properties: {
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                pointSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                polygonSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IKmlLayer: {
            type: string;
            properties: {
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    title: string;
                };
                title: {
                    description: string;
                    title: string;
                };
                type: {
                    description: string;
                    const: string;
                    type: string;
                    title: string;
                };
                visibleFolders: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        IArcGisStreamLayer: {
            type: string;
            properties: {
                definitionEditor: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                disablePopup: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerDefinition: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                layerType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                popupInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemId: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                showLegend: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    title: string;
                };
                visibility: {
                    description: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        SupportedLayer: {
            description: string;
            anyOf: {
                $ref: string;
            }[];
            title: string;
        };
        RGBObject: {
            description: string;
            title: string;
            type: string;
            properties: {
                r: {
                    type: string;
                    title: string;
                };
                g: {
                    type: string;
                    title: string;
                };
                b: {
                    type: string;
                    title: string;
                };
                a: {
                    default: number;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        IRendererSymbol: {
            title: string;
            allOf: ({
                $ref: string;
                type?: undefined;
                properties?: undefined;
                required?: undefined;
            } | {
                type: string;
                properties: {
                    style: {
                        enum: string[];
                        type: string;
                        title: string;
                    };
                    color: {
                        type: string;
                        items: {
                            type: string;
                        }[];
                        minItems: number;
                        maxItems: number;
                        title: string;
                    };
                    outline: {
                        $ref: string;
                        title: string;
                    };
                    label: {
                        type: string;
                        title: string;
                    };
                };
                required: string[];
                $ref?: undefined;
            })[];
        };
        RGBArray: {
            type: string;
            items: {
                type: string;
            }[];
            minItems: number;
            maxItems: number;
            title: string;
        };
        WebChartDataItemColor: {
            anyOf: ({
                type: string;
                items: {
                    type: string;
                }[];
                minItems: number;
                maxItems: number;
                $ref?: undefined;
            } | {
                $ref: string;
                type?: undefined;
                items?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
            } | {
                type: string;
                items?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
                $ref?: undefined;
            })[];
            title: string;
        };
        WebChartDataItemValue: {
            anyOf: ({
                type: string;
                items: {
                    type: string;
                    $ref?: undefined;
                };
                $ref?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
                format?: undefined;
            } | {
                $ref: string;
                type?: undefined;
                items?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
                format?: undefined;
            } | {
                type: string;
                items: {
                    type: string;
                }[];
                minItems: number;
                maxItems: number;
                $ref?: undefined;
                format?: undefined;
            } | {
                type: string;
                format: string;
                items?: undefined;
                $ref?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
            } | {
                type: string;
                items: {
                    $ref: string;
                    type?: undefined;
                };
                $ref?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
                format?: undefined;
            } | {
                type: string[];
                items?: undefined;
                $ref?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
                format?: undefined;
            })[];
            title: string;
        };
        WebChartDataItem: {
            description: string;
            title: string;
            type: string;
        };
        WebChartBoxPlotDataItem: {
            description: string;
            title: string;
            type: string;
            properties: {
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                outliers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                meanLines: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        WebChartScatterPlotDataItem: {
            description: string;
            title: string;
            type: string;
            properties: {
                r2: {
                    type: string;
                    title: string;
                };
                trendLinePoints: {
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        TimeIntervalInfo: {
            title: string;
            type: string;
            properties: {
                timeIntervalUnits: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeIntervalSize: {
                    type: string;
                    title: string;
                };
            };
        };
        WebChartGenericDataItem: {
            description: string;
            title: string;
            type: string;
            properties: {
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                timeIntervalInfo: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartBin: {
            description: string;
            title: string;
            type: string;
            properties: {
                count: {
                    type: string;
                    title: string;
                };
                minValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                symbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartHistogramDataItem: {
            description: string;
            title: string;
            type: string;
            properties: {
                mean: {
                    type: string;
                    title: string;
                };
                median: {
                    type: string;
                    title: string;
                };
                stddev: {
                    type: string;
                    title: string;
                };
                max: {
                    type: string;
                    title: string;
                };
                min: {
                    type: string;
                    title: string;
                };
                sum: {
                    description: string;
                    type: string;
                    title: string;
                };
                count: {
                    description: string;
                    type: string;
                    title: string;
                };
                nulls: {
                    description: string;
                    type: string;
                    title: string;
                };
                bins: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        WebChartDataTypes: {
            anyOf: {
                $ref: string;
            }[];
            title: string;
        };
        ValueConversion: {
            description: string;
            title: string;
            type: string;
            properties: {
                factor: {
                    description: string;
                    type: string;
                    title: string;
                };
                offset: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        WebChartAxisScrollBar: {
            description: string;
            title: string;
            type: string;
            properties: {
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                width: {
                    description: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                gripSize: {
                    description: string;
                    type: string;
                    title: string;
                };
                margin: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        WebChartTextSymbol: {
            description: string;
            title: string;
            allOf: ({
                $ref: string;
                type?: undefined;
                properties?: undefined;
            } | {
                type: string;
                properties: {
                    xoffset: {
                        description: string;
                        type: string[];
                        title: string;
                    };
                    yoffset: {
                        description: string;
                        type: string[];
                        title: string;
                    };
                };
                $ref?: undefined;
            })[];
        };
        WebChartText: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                content: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartCursorCrosshair: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                style: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                verticalLineVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                horizontalLineVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartLegend: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                body: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                position: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxHeight: {
                    description: string;
                    default: any;
                    type: string[];
                    title: string;
                };
                roundMarkers: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPieChartLegend: {
            description: string;
            title: string;
            type: string;
            properties: {
                displayNumericValue: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayPercentage: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                labelMaxWidth: {
                    description: string;
                    default: number;
                    type: string;
                    title: string;
                };
                valueLabelMaxWidth: {
                    description: string;
                    default: number;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                body: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                position: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxHeight: {
                    description: string;
                    default: any;
                    type: string[];
                    title: string;
                };
                roundMarkers: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartOverlay: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                created: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                symbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        NumberFormatOptions: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                intlOptions: {
                    $ref: string;
                    description: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartDateTimeUnitFormatOptions: {
            description: string;
            title: string;
            type: string;
            properties: {
                year: {
                    $ref: string;
                    title: string;
                };
                month: {
                    $ref: string;
                    title: string;
                };
                day: {
                    $ref: string;
                    title: string;
                };
                hour: {
                    $ref: string;
                    title: string;
                };
                minute: {
                    $ref: string;
                    title: string;
                };
                second: {
                    $ref: string;
                    title: string;
                };
            };
        };
        CategoryFormatOptions: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                characterLimit: {
                    description: string;
                    minimum: number;
                    multipleOf: number;
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        WebChartGuide: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                start: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string[];
                        format?: undefined;
                    })[];
                    title: string;
                };
                end: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string[];
                        format?: undefined;
                    })[];
                    title: string;
                };
                style: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                label: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                above: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                tooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartAxis: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                isLogarithmic: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                valueFormat: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                minimum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maximum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                grid: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                guides: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                scrollbar: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                displayZeroLine: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                integerOnlyValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayCursorTooltip: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                buffer: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                tickSpacing: {
                    description: string;
                    minimum: number;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartGaugeAxisTick: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartNeedle: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                symbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                startWidth: {
                    description: string;
                    minimum: number;
                    default: number;
                    type: string[];
                    title: string;
                };
                endWidth: {
                    description: string;
                    minimum: number;
                    default: number;
                    type: string[];
                    title: string;
                };
                innerRadius: {
                    description: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    type: string[];
                    title: string;
                };
                displayPin: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartGaugeAxis: {
            description: string;
            title: string;
            type: string;
            properties: {
                innerLabel: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                needle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                ticks: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                labelsIncrement: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                onlyShowFirstAndLastLabels: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                minimumValueConversion: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                maximumValueConversion: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                minimumFromField: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                maximumFromField: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                isLogarithmic: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                valueFormat: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                minimum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maximum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                grid: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                guides: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                scrollbar: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                displayZeroLine: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                integerOnlyValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayCursorTooltip: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                buffer: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                tickSpacing: {
                    description: string;
                    minimum: number;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartRadarChartAxis: {
            description: string;
            title: string;
            type: string;
            properties: {
                labelsOrientation: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                isLogarithmic: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                valueFormat: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                minimum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maximum: {
                    description: string;
                    type: string[];
                    title: string;
                };
                grid: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                guides: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                scrollbar: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                displayZeroLine: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                integerOnlyValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayCursorTooltip: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                buffer: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                tickSpacing: {
                    description: string;
                    minimum: number;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartQuery: {
            description: string;
            type: string;
            properties: {
                outFields: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                where: {
                    description: string;
                    type: string;
                    title: string;
                };
                groupByFieldsForStatistics: {
                    description: string;
                    maxItems: number;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                outStatistics: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                orderByFields: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                gdbVersion: {
                    description: string;
                    type: string;
                    title: string;
                };
                geometry: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                distance: {
                    description: string;
                    type: string;
                    title: string;
                };
                units: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                start: {
                    description: string;
                    type: string;
                    title: string;
                };
                num: {
                    description: string;
                    type: string;
                    title: string;
                };
                returnDistinctValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                fetchNullValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        WebChartSeriesQuery: {
            description: string;
            title: string;
            type: string;
            properties: {
                outFields: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                where: {
                    description: string;
                    type: string;
                    title: string;
                };
                groupByFieldsForStatistics: {
                    description: string;
                    maxItems: number;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                outStatistics: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                returnDistinctValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                fetchNullValues: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
        };
        WebChartDataFilters: {
            description: string;
            title: string;
            type: string;
            properties: {
                distance: {
                    description: string;
                    type: string;
                    title: string;
                };
                gdbVersion: {
                    description: string;
                    type: string;
                    title: string;
                };
                geometry: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                timeExtent: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                units: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                where: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
        };
        WebChartSeries: {
            description: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebChartTemporalSeries: {
            description: string;
            type: string;
            properties: {
                binTemporalData: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                timeIntervalUnits: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeIntervalSize: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAggregationType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                trimIncompleteTimeInterval: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                nullPolicy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            title: string;
        };
        WebChartBarChartSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                y: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                hideOversizedStackedLabels: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                binTemporalData: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                timeIntervalUnits: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeIntervalSize: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAggregationType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                trimIncompleteTimeInterval: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                nullPolicy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        HistogramOverlays: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                mean: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                median: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                standardDeviation: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                comparisonDistribution: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartHistogramSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                binCount: {
                    description: string;
                    minimum: number;
                    multipleOf: number;
                    default: number;
                    type: string[];
                    title: string;
                };
                overlays: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTransformationType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ScatterPlotOverlays: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                trendLine: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        SizePolicy: {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                scaleType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                minSize: {
                    description: string;
                    default: number;
                    multipleOf: number;
                    type: string;
                    title: string;
                };
                maxSize: {
                    description: string;
                    default: number;
                    multipleOf: number;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartScatterPlotSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                y: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                markerSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                overlays: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                sizePolicy: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPieChartTick: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                visible: {
                    description: string;
                    type: string;
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPieChartSlice: {
            description: string;
            title: string;
            type: string;
            properties: {
                sliceId: {
                    description: string;
                    type: string;
                    title: string;
                };
                originalLabel: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string[];
                        format?: undefined;
                    })[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string;
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPieChartGroupSlice: {
            description: string;
            title: string;
            type: string;
            properties: {
                percentageThreshold: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                sliceId: {
                    description: string;
                    type: string;
                    title: string;
                };
                originalLabel: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string[];
                        format?: undefined;
                    })[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string;
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartPieChartSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                y: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                innerRadius: {
                    description: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    type: string[];
                    title: string;
                };
                startAngle: {
                    default: number;
                    type: string[];
                    title: string;
                };
                endAngle: {
                    default: number;
                    type: string[];
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                displayNumericValueOnDataLabel: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayPercentageOnDataLabel: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayNumericValueOnTooltip: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                displayPercentageOnTooltip: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                numericValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                percentValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                valuePrefix: {
                    description: string;
                    type: string;
                    title: string;
                };
                valueSuffix: {
                    description: string;
                    type: string;
                    title: string;
                };
                percentagePrefix: {
                    description: string;
                    type: string;
                    title: string;
                };
                percentageSuffix: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataLabelsCharacterLimit: {
                    description: string;
                    default: string;
                    minimum: number;
                    multipleOf: number;
                    type: string[];
                    title: string;
                };
                ticks: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataLabelsOffset: {
                    description: string;
                    default: number;
                    type: string;
                    title: string;
                };
                alignDataLabels: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                optimizeDataLabelsOverlapping: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                sliceGrouping: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                slices: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartGaugeSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                valueConversion: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                featureIndex: {
                    description: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartLineChartSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                y: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                lineSmoothed: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                showArea: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                markerVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                markerSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                areaColor: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                stackNegativeValuesToBaseline: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                binTemporalData: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                timeIntervalUnits: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeIntervalSize: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAggregationType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                trimIncompleteTimeInterval: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                nullPolicy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartBoxPlotSeries: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                y: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                fillSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WebChartRadarChartSeries: {
            title: string;
            allOf: ({
                $ref: string;
                type?: undefined;
                properties?: undefined;
                required?: undefined;
            } | {
                type: string;
                properties: {
                    type: {
                        type: string;
                        const: string;
                        title: string;
                    };
                };
                required: string[];
                $ref?: undefined;
            })[];
        };
        WebChartSeriesType: {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        WebMapWebChart: {
            description: string;
            type: string;
            properties: {
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebMapWebGaugeChart: {
            description: string;
            type: string;
            properties: {
                innerRadius: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                startAngle: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                endAngle: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                subType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebMapWebBoxPlot: {
            description: string;
            type: string;
            properties: {
                showOutliers: {
                    description: string;
                    type: string;
                    title: string;
                };
                standardizeValues: {
                    description: string;
                    type: string;
                    title: string;
                };
                showMean: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebChartDataSource: {
            type: string;
            properties: {
                iLayer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            title: string;
        };
        WebChart: {
            description: string;
            type: string;
            properties: {
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
                iLayer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebGaugeChart: {
            description: string;
            type: string;
            properties: {
                innerRadius: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                startAngle: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                endAngle: {
                    description: string;
                    default: number;
                    type: string[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                subType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
                iLayer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebBoxPlot: {
            description: string;
            type: string;
            properties: {
                showOutliers: {
                    description: string;
                    type: string;
                    title: string;
                };
                standardizeValues: {
                    description: string;
                    type: string;
                    title: string;
                };
                showMean: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                series: {
                    description: string;
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
                iLayer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebMapWebRadarChart: {
            description: string;
            type: string;
            properties: {
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        WebRadarChart: {
            description: string;
            type: string;
            properties: {
                series: {
                    description: string;
                    minItems: number;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                axes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                version: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                dataFilters: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                title: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                subTitle: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                footer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                background: {
                    description: string;
                    default: number[];
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                theme: {
                    description: string;
                    type: string;
                    title: string;
                };
                cursorCrosshair: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                legend: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                horizontalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                verticalAxisLabelsBehavior: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                rotated: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                stackedType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                colorMatch: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                chartRenderer: {
                    description: string;
                    title: string;
                };
                orderOptions: {
                    description: string;
                    type: string;
                    properties: {
                        series: {
                            description: string;
                            $ref: string;
                            title: string;
                        };
                        data: {
                            description: string;
                            anyOf: {
                                $ref: string;
                            }[];
                            title: string;
                        };
                        orderByFields: {
                            description: string;
                            type: string;
                            items: {
                                type: string;
                            };
                            title: string;
                        };
                    };
                    title: string;
                };
                iLayer: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        OverlayTerms: {
            enum: string[];
            type: string;
            title: string;
        };
        CalculatedMinMaxBoundsPayload: {
            description: string;
            type: string;
            properties: {
                isXAxis: {
                    type: string;
                    title: string;
                };
                isSecondValueAxis: {
                    type: string;
                    title: string;
                };
                minimum: {
                    type: string[];
                    title: string;
                };
                maximum: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        ChartDeletePayload: {
            description: string;
            type: string;
            properties: {
                chartId: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        LegendItemVisibility: {
            description: string;
            type: string;
            properties: {
                visible: {
                    type: string;
                    title: string;
                };
                seriesId: {
                    type: string;
                    title: string;
                };
                overlayType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                sliceId: {
                    type: string;
                    title: string;
                };
                sliceData: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
            title: string;
        };
        "Record<string,any>": {
            title: string;
            type: string;
        };
        SymbolType: {
            title: string;
            enum: string[];
            type: string;
        };
        "Record<string,string>": {
            title: string;
            type: string;
        };
        Position: {
            title: string;
            anyOf: {
                type: string;
                items: {
                    type: string;
                }[];
                minItems: number;
                maxItems: number;
            }[];
        };
        "Record<string,boolean>": {
            title: string;
            type: string;
        };
        "Record<string,unknown>": {
            title: string;
            type: string;
        };
        "Record<string,ITypeInfoDomain>": {
            title: string;
            type: string;
        };
        "__esri.FeatureLayer": {
            title: string;
            type: string;
            properties: {
                apiKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                charts: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                copyright: {
                    description: string;
                    type: string[];
                    title: string;
                };
                customParameters: {
                    description: string;
                    title: string;
                };
                dateFieldsTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                datesInUnknownTimezone: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                definitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayFilterEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                displayFilterInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                dynamicDataSource: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editingEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                editingInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                effectiveCapabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effectiveEditingEnabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                fieldsIndex: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                gdbVersion: {
                    description: string;
                    type: string[];
                    title: string;
                };
                geometryFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                geometryType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                isTable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                layerId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                legendEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                outFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                preferredTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                publishingInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                relationships: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                returnM: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                returnZ: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                screenSizePerspectiveEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                serviceDefinitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                serviceItemId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                subtypeField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                subtypes: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                typeIdField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                useViewTime: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                version: {
                    description: string;
                    type: string[];
                    title: string;
                };
                attributeTableTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                elevationInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                featureEffect: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                featureReduction: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                floorInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                formTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                historicMoment: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                orderBy: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                portalItem: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                source: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                templates: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                timeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeOffset: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                trackInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                types: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Capabilities": {
            description: string;
            title: string;
            type: string;
            properties: {
                analytics: {
                    $ref: string;
                    title: string;
                };
                attachment: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                data: {
                    $ref: string;
                    title: string;
                };
                editing: {
                    $ref: string;
                    title: string;
                };
                metadata: {
                    $ref: string;
                    title: string;
                };
                operations: {
                    $ref: string;
                    title: string;
                };
                query: {
                    $ref: string;
                    title: string;
                };
                queryAttributeBins: {
                    $ref: string;
                    title: string;
                };
                queryRelated: {
                    $ref: string;
                    title: string;
                };
                queryTopFeatures: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesAnalytics": {
            title: string;
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesAttachment": {
            title: string;
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                    title: string;
                };
                supportsContentType: {
                    type: string;
                    title: string;
                };
                supportsExifInfo: {
                    type: string;
                    title: string;
                };
                supportsKeywords: {
                    type: string;
                    title: string;
                };
                supportsOrderByFields: {
                    type: string;
                    title: string;
                };
                supportsName: {
                    type: string;
                    title: string;
                };
                supportsSize: {
                    type: string;
                    title: string;
                };
                supportsResize: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesData": {
            title: string;
            type: string;
            properties: {
                isVersioned: {
                    type: string;
                    title: string;
                };
                isBranchVersioned: {
                    type: string;
                    title: string;
                };
                supportsAttachment: {
                    type: string;
                    title: string;
                };
                supportsM: {
                    type: string;
                    title: string;
                };
                supportsZ: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesEditing": {
            title: string;
            type: string;
            properties: {
                supportsDeleteByAnonymous: {
                    type: string;
                    title: string;
                };
                supportsDeleteByOthers: {
                    type: string;
                    title: string;
                };
                supportsGeometryUpdate: {
                    type: string;
                    title: string;
                };
                supportsGlobalId: {
                    type: string;
                    title: string;
                };
                supportsRollbackOnFailure: {
                    type: string;
                    title: string;
                };
                supportsUpdateByAnonymous: {
                    type: string;
                    title: string;
                };
                supportsUpdateByOthers: {
                    type: string;
                    title: string;
                };
                supportsUploadWithItemId: {
                    type: string;
                    title: string;
                };
                supportsUpdateWithoutM: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesMetadata": {
            title: string;
            type: string;
            properties: {
                supportsAdvancedFieldProperties: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesOperations": {
            title: string;
            type: string;
            properties: {
                supportsAdd: {
                    type: string;
                    title: string;
                };
                supportsCalculate: {
                    type: string;
                    title: string;
                };
                supportsDelete: {
                    type: string;
                    title: string;
                };
                supportsEditing: {
                    type: string;
                    title: string;
                };
                supportsQuery: {
                    type: string;
                    title: string;
                };
                supportsQueryAttachments: {
                    type: string;
                    title: string;
                };
                supportsResizeAttachments: {
                    type: string;
                    title: string;
                };
                supportsQueryTopFeatures: {
                    type: string;
                    title: string;
                };
                supportsUpdate: {
                    type: string;
                    title: string;
                };
                supportsValidateSql: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesQuery": {
            title: string;
            type: string;
            properties: {
                maxRecordCount: {
                    type: string[];
                    title: string;
                };
                supportsCacheHint: {
                    type: string;
                    title: string;
                };
                supportsCentroid: {
                    type: string;
                    title: string;
                };
                supportsDisjointSpatialRelationship: {
                    type: string;
                    title: string;
                };
                supportsDistance: {
                    type: string;
                    title: string;
                };
                supportsDistinct: {
                    type: string;
                    title: string;
                };
                supportsExtent: {
                    type: string;
                    title: string;
                };
                supportsGeometryProperties: {
                    type: string;
                    title: string;
                };
                supportsHavingClause: {
                    type: string;
                    title: string;
                };
                supportsHistoricMoment: {
                    type: string;
                    title: string;
                };
                supportsMaxRecordCountFactor: {
                    type: string;
                    title: string;
                };
                supportsOrderBy: {
                    type: string;
                    title: string;
                };
                supportsPagination: {
                    type: string;
                    title: string;
                };
                supportsPercentileStatistics: {
                    type: string;
                    title: string;
                };
                supportsQuantization: {
                    type: string;
                    title: string;
                };
                supportsQuantizationEditMode: {
                    type: string;
                    title: string;
                };
                supportsQueryGeometry: {
                    type: string;
                    title: string;
                };
                supportsResultType: {
                    type: string;
                    title: string;
                };
                supportsReturnMesh: {
                    type: string;
                    title: string;
                };
                supportsStandardizedQueriesOnly: {
                    type: string;
                    title: string;
                };
                supportsStatistics: {
                    type: string;
                    title: string;
                };
                supportsSqlExpression: {
                    type: string;
                    title: string;
                };
                supportsSpatialAggregationStatistics: {
                    type: string;
                    title: string;
                };
                supportsTrueCurve: {
                    type: string;
                    title: string;
                };
                supportedSpatialAggregationStatistics: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesQuerySupportedSpatialAggregationStatistics": {
            title: string;
            type: string;
            properties: {
                centroid: {
                    type: string;
                    title: string;
                };
                envelope: {
                    type: string;
                    title: string;
                };
                convexHull: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesQueryAttributeBins": {
            title: string;
            type: string;
            properties: {
                supportsDate: {
                    type: string;
                    title: string;
                };
                supportsFixedInterval: {
                    type: string;
                    title: string;
                };
                supportsAutoInterval: {
                    type: string;
                    title: string;
                };
                supportsFixedBoundaries: {
                    type: string;
                    title: string;
                };
                supportsStackBy: {
                    type: string;
                    title: string;
                };
                supportsSplitBy: {
                    type: string;
                    title: string;
                };
                supportsSnapToData: {
                    type: string;
                    title: string;
                };
                supportsReturnFullIntervalBin: {
                    type: string;
                    title: string;
                };
                supportsFirstDayOfWeek: {
                    type: string;
                    title: string;
                };
                supportsNormalization: {
                    type: string;
                    title: string;
                };
                supportedNormalizationTypes: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                supportedStatistics: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesQueryAttributeBinsSupportedNormalizationTypes": {
            title: string;
            type: string;
            properties: {
                field: {
                    type: string;
                    title: string;
                };
                log: {
                    type: string;
                    title: string;
                };
                naturalLog: {
                    type: string;
                    title: string;
                };
                percentOfTotal: {
                    type: string;
                    title: string;
                };
                squareRoot: {
                    type: string;
                    title: string;
                };
            };
        };
        "__esri.CapabilitiesQueryAttributeBinsSupportedStatistics": {
            title: string;
            type: string;
            properties: {
                count: {
                    type: string;
                    title: string;
                };
                sum: {
                    type: string;
                    title: string;
                };
                avg: {
                    type: string;
                    title: string;
                };
                var: {
                    type: string;
                    title: string;
                };
                stddev: {
                    type: string;
                    title: string;
                };
                min: {
                    type: string;
                    title: string;
                };
                max: {
                    type: string;
                    title: string;
                };
                percentileContinuous: {
                    type: string;
                    title: string;
                };
                percentileDiscrete: {
                    type: string;
                    title: string;
                };
            };
        };
        "__esri.CapabilitiesQueryRelated": {
            title: string;
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                    title: string;
                };
                supportsCount: {
                    type: string;
                    title: string;
                };
                supportsOrderBy: {
                    type: string;
                    title: string;
                };
                supportsPagination: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CapabilitiesQueryTopFeatures": {
            title: string;
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DisplayFilterInfo": {
            title: string;
            type: string;
            properties: {
                activeFilterId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                mode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                filters: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.DisplayFilter>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DynamicDataLayer": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                dataSource: {
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                fields: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.JoinTableDataSource": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                leftTableKey: {
                    type: string;
                    title: string;
                };
                rightTableKey: {
                    type: string;
                    title: string;
                };
                leftTableSource: {
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                rightTableSource: {
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                joinType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DynamicMapLayer": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                mapLayerId: {
                    type: string;
                    title: string;
                };
                gdbVersion: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.QueryTableDataSource": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                workspaceId: {
                    type: string;
                    title: string;
                };
                query: {
                    type: string;
                    title: string;
                };
                oidFields: {
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    title: string;
                };
                geometryType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SpatialReference": {
            title: string;
            type: string;
            properties: {
                imageCoordinateSystem: {
                    description: string;
                    title: string;
                };
                isGeographic: {
                    description: string;
                    type: string;
                    title: string;
                };
                isWebMercator: {
                    description: string;
                    type: string;
                    title: string;
                };
                isWGS84: {
                    description: string;
                    type: string;
                    title: string;
                };
                isWrappable: {
                    description: string;
                    type: string;
                    title: string;
                };
                metersPerUnit: {
                    description: string;
                    type: string;
                    title: string;
                };
                unit: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                wkid: {
                    description: string;
                    type: string[];
                    title: string;
                };
                wkt: {
                    description: string;
                    type: string[];
                    title: string;
                };
                wkt2: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.RasterDataSource": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                workspaceId: {
                    type: string;
                    title: string;
                };
                dataSourceName: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TableDataSource": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    title: string;
                };
                workspaceId: {
                    type: string;
                    title: string;
                };
                dataSourceName: {
                    type: string;
                    title: string;
                };
                gdbVersion: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DynamicDataLayerFields": {
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
                alias: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.EditFieldsInfo": {
            description: string;
            title: string;
            type: string;
            properties: {
                creatorField: {
                    type: string;
                    title: string;
                };
                creationDateField: {
                    type: string;
                    title: string;
                };
                editorField: {
                    type: string;
                    title: string;
                };
                editDateField: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.EditingInfo": {
            description: string;
            title: string;
            type: string;
            properties: {
                lastEditDate: {
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FieldsIndex": {
            title: string;
            type: string;
            properties: {
                dateFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref?: undefined;
                        };
                    } | {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Field": {
            title: string;
            type: string;
            properties: {
                alias: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                defaultValue: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                editable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                length: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                name: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                nullable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                valueType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                domain: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CodedValueDomain": {
            title: string;
            type: string;
            properties: {
                codedValues: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CodedValue": {
            description: string;
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
                code: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.InheritedDomain": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.RangeDomain": {
            title: string;
            type: string;
            properties: {
                maxValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.GeometryFieldsInfo": {
            title: string;
            type: string;
            properties: {
                shapeAreaField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                shapeLengthField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                units: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PublishingInfo": {
            title: string;
            type: string;
            properties: {
                status: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                updating: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Relationship": {
            title: string;
            type: string;
            properties: {
                cardinality: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                catalogId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                composite: {
                    description: string;
                    type: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                keyField: {
                    description: string;
                    type: string;
                    title: string;
                };
                keyFieldInRelationshipTable: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                relatedTableId: {
                    description: string;
                    type: string;
                    title: string;
                };
                relationshipTableId: {
                    description: string;
                    type: string;
                    title: string;
                };
                role: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Subtype": {
            title: string;
            type: string;
            properties: {
                code: {
                    description: string;
                    type: string;
                    title: string;
                };
                defaultValues: {
                    description: string;
                    title: string;
                };
                domains: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "HashMap<__esri.CodedValueDomain|__esri.InheritedDomain|__esri.RangeDomain>": {
            title: string;
            type: string;
        };
        "__esri.AttributeTableTemplate": {
            title: string;
            type: string;
            properties: {
                orderByFields: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                elements: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FieldOrder": {
            description: string;
            title: string;
            type: string;
            properties: {
                field: {
                    type: string;
                    title: string;
                };
                order: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        "__esri.AttributeTableFieldElement": {
            title: string;
            type: string;
            properties: {
                fieldName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttributeTableGroupElement": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                elements: {
                    description: string;
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttributeTableRelationshipElement": {
            title: string;
            type: string;
            properties: {
                relationshipId: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttributeTableAttachmentElement": {
            title: string;
            type: string;
            properties: {
                displayType: {
                    description: string;
                    default: string;
                    type: string;
                    const: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureLayerBaseElevationInfo": {
            title: string;
            type: string;
            properties: {
                featureExpressionInfo: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                mode: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offset: {
                    type: string[];
                    title: string;
                };
                unit: {
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureLayerBaseElevationInfoFeatureExpressionInfo": {
            title: string;
            type: string;
            properties: {
                title: {
                    type: string;
                    title: string;
                };
                expression: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureEffect": {
            title: string;
            type: string;
            properties: {
                excludedEffect: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                excludedLabelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                includedEffect: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                filter: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureFilter": {
            title: string;
            type: string;
            properties: {
                distance: {
                    description: string;
                    type: string[];
                    title: string;
                };
                objectIds: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                spatialRelationship: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                units: {
                    description: string;
                    default: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                where: {
                    description: string;
                    type: string[];
                    title: string;
                };
                geometry: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Extent": {
            title: string;
            type: string;
            properties: {
                center: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                height: {
                    description: string;
                    type: string;
                    title: string;
                };
                mmax: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                mmin: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                width: {
                    description: string;
                    type: string;
                    title: string;
                };
                xmax: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                xmin: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                ymax: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                ymin: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                zmax: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                zmin: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Point": {
            title: string;
            type: string;
            properties: {
                latitude: {
                    description: string;
                    type: string[];
                    title: string;
                };
                longitude: {
                    description: string;
                    type: string[];
                    title: string;
                };
                m: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                x: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                y: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                z: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Multipoint": {
            title: string;
            type: string;
            properties: {
                points: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Polygon": {
            title: string;
            type: string;
            properties: {
                centroid: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                curveRings: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                        items: {};
                    };
                    title: string;
                };
                isSelfIntersecting: {
                    description: string;
                    type: string;
                    title: string;
                };
                rings: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Polyline": {
            title: string;
            type: string;
            properties: {
                curvePaths: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                        items: {};
                    };
                    title: string;
                };
                paths: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Mesh": {
            title: string;
            type: string;
            properties: {
                extent: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                origin: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                vertexAttributes: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                components: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                transform: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                vertexSpace: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                cache: {
                    description: string;
                    title: string;
                };
                hasM: {
                    description: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    type: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Error": {
            title: string;
            type: string;
            properties: {
                details: {
                    description: string;
                    title: string;
                };
                message: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshVertexAttributes": {
            title: string;
            type: string;
            properties: {
                position: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        BYTES_PER_ELEMENT: {
                            type: string;
                            title: string;
                        };
                        buffer: {
                            $ref: string;
                            title: string;
                        };
                        byteLength: {
                            type: string;
                            title: string;
                        };
                        byteOffset: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        "__@toStringTag@16125": {
                            type: string;
                            const: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                uv: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                type: string;
                            };
                        };
                        properties: {
                            BYTES_PER_ELEMENT: {
                                type: string;
                                title: string;
                            };
                            buffer: {
                                $ref: string;
                                title: string;
                            };
                            byteLength: {
                                type: string;
                                title: string;
                            };
                            byteOffset: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            "__@toStringTag@16125": {
                                type: string;
                                const: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                normal: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                type: string;
                            };
                        };
                        properties: {
                            BYTES_PER_ELEMENT: {
                                type: string;
                                title: string;
                            };
                            buffer: {
                                $ref: string;
                                title: string;
                            };
                            byteLength: {
                                type: string;
                                title: string;
                            };
                            byteOffset: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            "__@toStringTag@16125": {
                                type: string;
                                const: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                type: string;
                            };
                        };
                        properties: {
                            BYTES_PER_ELEMENT: {
                                type: string;
                                title: string;
                            };
                            buffer: {
                                $ref: string;
                                title: string;
                            };
                            byteLength: {
                                type: string;
                                title: string;
                            };
                            byteOffset: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            "__@toStringTag@16125": {
                                type: string;
                                const: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                tangent: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                type: string;
                            };
                        };
                        properties: {
                            BYTES_PER_ELEMENT: {
                                type: string;
                                title: string;
                            };
                            buffer: {
                                $ref: string;
                                title: string;
                            };
                            byteLength: {
                                type: string;
                                title: string;
                            };
                            byteOffset: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            "__@toStringTag@16125": {
                                type: string;
                                const: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        ArrayBufferLike: {
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        ArrayBuffer: {
            title: string;
            type: string;
            properties: {
                byteLength: {
                    type: string;
                    title: string;
                };
                "__@toStringTag@16125": {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SharedArrayBuffer: {
            title: string;
            type: string;
            properties: {
                byteLength: {
                    type: string;
                    title: string;
                };
                "__@species@14450": {
                    $ref: string;
                    title: string;
                };
                "__@toStringTag@16125": {
                    type: string;
                    const: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshComponent": {
            title: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                shading: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                faces: {
                    description: string;
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                type: string;
                            };
                        };
                        properties: {
                            BYTES_PER_ELEMENT: {
                                type: string;
                                title: string;
                            };
                            buffer: {
                                $ref: string;
                                title: string;
                            };
                            byteLength: {
                                type: string;
                                title: string;
                            };
                            byteOffset: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            "__@toStringTag@16125": {
                                type: string;
                                const: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                material: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshMaterial": {
            title: string;
            type: string;
            properties: {
                alphaCutoff: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                alphaMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                doubleSided: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                colorTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                colorTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                normalTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                normalTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Color": {
            title: string;
            type: string;
            properties: {
                a: {
                    description: string;
                    type: string;
                    title: string;
                };
                b: {
                    description: string;
                    type: string;
                    title: string;
                };
                g: {
                    description: string;
                    type: string;
                    title: string;
                };
                r: {
                    description: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshTexture": {
            title: string;
            type: string;
            properties: {
                data: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                transparent: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                wrap: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        enum?: undefined;
                        type?: undefined;
                    } | {
                        enum: string[];
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        HTMLCanvasElement: {
            title: string;
            type: string;
            properties: {
                height: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        Element: {
            title: string;
            type: string;
            properties: {
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        Attr: {
            title: string;
            type: string;
            properties: {
                localName: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                ownerElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                specified: {
                    type: string;
                    title: string;
                };
                value: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        Document: {
            title: string;
            type: string;
            properties: {
                URL: {
                    type: string;
                    title: string;
                };
                alinkColor: {
                    type: string;
                    title: string;
                };
                all: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                anchors: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                applets: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                bgColor: {
                    type: string;
                    title: string;
                };
                body: {
                    $ref: string;
                    title: string;
                };
                characterSet: {
                    type: string;
                    title: string;
                };
                charset: {
                    type: string;
                    title: string;
                };
                compatMode: {
                    type: string;
                    title: string;
                };
                contentType: {
                    type: string;
                    title: string;
                };
                cookie: {
                    type: string;
                    title: string;
                };
                currentScript: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultView: {
                    anyOf: ({
                        allOf: ({
                            $ref: string;
                            type?: undefined;
                        } | {
                            type: string;
                            $ref?: undefined;
                        })[];
                        type?: undefined;
                    } | {
                        type: string;
                        allOf?: undefined;
                    })[];
                    title: string;
                };
                designMode: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                doctype: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                documentElement: {
                    $ref: string;
                    title: string;
                };
                documentURI: {
                    type: string;
                    title: string;
                };
                domain: {
                    type: string;
                    title: string;
                };
                embeds: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fgColor: {
                    type: string;
                    title: string;
                };
                forms: {
                    type: string;
                    items: {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            acceptCharset: {
                                type: string;
                                title: string;
                            };
                            action: {
                                type: string;
                                title: string;
                            };
                            autocomplete: {
                                $ref: string;
                                title: string;
                            };
                            elements: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        $ref: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            encoding: {
                                type: string;
                                title: string;
                            };
                            enctype: {
                                type: string;
                                title: string;
                            };
                            length: {
                                type: string;
                                title: string;
                            };
                            method: {
                                type: string;
                                title: string;
                            };
                            name: {
                                type: string;
                                title: string;
                            };
                            noValidate: {
                                type: string;
                                title: string;
                            };
                            rel: {
                                type: string;
                                title: string;
                            };
                            relList: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        type: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                    value: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            target: {
                                type: string;
                                title: string;
                            };
                            accessKey: {
                                type: string;
                                title: string;
                            };
                            accessKeyLabel: {
                                type: string;
                                title: string;
                            };
                            autocapitalize: {
                                type: string;
                                title: string;
                            };
                            dir: {
                                type: string;
                                title: string;
                            };
                            draggable: {
                                type: string;
                                title: string;
                            };
                            hidden: {
                                type: string;
                                title: string;
                            };
                            inert: {
                                type: string;
                                title: string;
                            };
                            innerText: {
                                type: string;
                                title: string;
                            };
                            lang: {
                                type: string;
                                title: string;
                            };
                            offsetHeight: {
                                type: string;
                                title: string;
                            };
                            offsetLeft: {
                                type: string;
                                title: string;
                            };
                            offsetParent: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            offsetTop: {
                                type: string;
                                title: string;
                            };
                            offsetWidth: {
                                type: string;
                                title: string;
                            };
                            outerText: {
                                type: string;
                                title: string;
                            };
                            popover: {
                                type: string[];
                                title: string;
                            };
                            spellcheck: {
                                type: string;
                                title: string;
                            };
                            title: {
                                type: string;
                                title: string;
                            };
                            translate: {
                                type: string;
                                title: string;
                            };
                            attributes: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        $ref: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            classList: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        type: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                    value: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            className: {
                                type: string;
                                title: string;
                            };
                            clientHeight: {
                                type: string;
                                title: string;
                            };
                            clientLeft: {
                                type: string;
                                title: string;
                            };
                            clientTop: {
                                type: string;
                                title: string;
                            };
                            clientWidth: {
                                type: string;
                                title: string;
                            };
                            id: {
                                type: string;
                                title: string;
                            };
                            localName: {
                                type: string;
                                title: string;
                            };
                            namespaceURI: {
                                type: string[];
                                title: string;
                            };
                            onfullscreenchange: {
                                type: string[];
                                title: string;
                            };
                            onfullscreenerror: {
                                type: string[];
                                title: string;
                            };
                            outerHTML: {
                                type: string;
                                title: string;
                            };
                            ownerDocument: {
                                $ref: string;
                                title: string;
                            };
                            part: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        type: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                    value: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            prefix: {
                                type: string[];
                                title: string;
                            };
                            scrollHeight: {
                                type: string;
                                title: string;
                            };
                            scrollLeft: {
                                type: string;
                                title: string;
                            };
                            scrollTop: {
                                type: string;
                                title: string;
                            };
                            scrollWidth: {
                                type: string;
                                title: string;
                            };
                            shadowRoot: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            slot: {
                                type: string;
                                title: string;
                            };
                            tagName: {
                                type: string;
                                title: string;
                            };
                            baseURI: {
                                type: string;
                                title: string;
                            };
                            childNodes: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                title: string;
                            };
                            firstChild: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            isConnected: {
                                type: string;
                                title: string;
                            };
                            lastChild: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            nextSibling: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            nodeName: {
                                type: string;
                                title: string;
                            };
                            nodeType: {
                                type: string;
                                title: string;
                            };
                            nodeValue: {
                                type: string[];
                                title: string;
                            };
                            parentElement: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            parentNode: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            previousSibling: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            textContent: {
                                type: string[];
                                title: string;
                            };
                            ELEMENT_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            ATTRIBUTE_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            TEXT_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            CDATA_SECTION_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            ENTITY_REFERENCE_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            ENTITY_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            PROCESSING_INSTRUCTION_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            COMMENT_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_TYPE_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_FRAGMENT_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            NOTATION_NODE: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_DISCONNECTED: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_PRECEDING: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_FOLLOWING: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_CONTAINS: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_CONTAINED_BY: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                                type: string;
                                const: number;
                                title: string;
                            };
                            ariaAtomic: {
                                type: string[];
                                title: string;
                            };
                            ariaAutoComplete: {
                                type: string[];
                                title: string;
                            };
                            ariaBrailleLabel: {
                                type: string[];
                                title: string;
                            };
                            ariaBrailleRoleDescription: {
                                type: string[];
                                title: string;
                            };
                            ariaBusy: {
                                type: string[];
                                title: string;
                            };
                            ariaChecked: {
                                type: string[];
                                title: string;
                            };
                            ariaColCount: {
                                type: string[];
                                title: string;
                            };
                            ariaColIndex: {
                                type: string[];
                                title: string;
                            };
                            ariaColSpan: {
                                type: string[];
                                title: string;
                            };
                            ariaCurrent: {
                                type: string[];
                                title: string;
                            };
                            ariaDescription: {
                                type: string[];
                                title: string;
                            };
                            ariaDisabled: {
                                type: string[];
                                title: string;
                            };
                            ariaExpanded: {
                                type: string[];
                                title: string;
                            };
                            ariaHasPopup: {
                                type: string[];
                                title: string;
                            };
                            ariaHidden: {
                                type: string[];
                                title: string;
                            };
                            ariaInvalid: {
                                type: string[];
                                title: string;
                            };
                            ariaKeyShortcuts: {
                                type: string[];
                                title: string;
                            };
                            ariaLabel: {
                                type: string[];
                                title: string;
                            };
                            ariaLevel: {
                                type: string[];
                                title: string;
                            };
                            ariaLive: {
                                type: string[];
                                title: string;
                            };
                            ariaModal: {
                                type: string[];
                                title: string;
                            };
                            ariaMultiLine: {
                                type: string[];
                                title: string;
                            };
                            ariaMultiSelectable: {
                                type: string[];
                                title: string;
                            };
                            ariaOrientation: {
                                type: string[];
                                title: string;
                            };
                            ariaPlaceholder: {
                                type: string[];
                                title: string;
                            };
                            ariaPosInSet: {
                                type: string[];
                                title: string;
                            };
                            ariaPressed: {
                                type: string[];
                                title: string;
                            };
                            ariaReadOnly: {
                                type: string[];
                                title: string;
                            };
                            ariaRequired: {
                                type: string[];
                                title: string;
                            };
                            ariaRoleDescription: {
                                type: string[];
                                title: string;
                            };
                            ariaRowCount: {
                                type: string[];
                                title: string;
                            };
                            ariaRowIndex: {
                                type: string[];
                                title: string;
                            };
                            ariaRowSpan: {
                                type: string[];
                                title: string;
                            };
                            ariaSelected: {
                                type: string[];
                                title: string;
                            };
                            ariaSetSize: {
                                type: string[];
                                title: string;
                            };
                            ariaSort: {
                                type: string[];
                                title: string;
                            };
                            ariaValueMax: {
                                type: string[];
                                title: string;
                            };
                            ariaValueMin: {
                                type: string[];
                                title: string;
                            };
                            ariaValueNow: {
                                type: string[];
                                title: string;
                            };
                            ariaValueText: {
                                type: string[];
                                title: string;
                            };
                            role: {
                                type: string[];
                                title: string;
                            };
                            innerHTML: {
                                type: string;
                                title: string;
                            };
                            nextElementSibling: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            previousElementSibling: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            childElementCount: {
                                type: string;
                                title: string;
                            };
                            children: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        $ref: string;
                                    };
                                };
                                properties: {
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            firstElementChild: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            lastElementChild: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            assignedSlot: {
                                anyOf: ({
                                    $ref: string;
                                    type?: undefined;
                                } | {
                                    type: string;
                                    $ref?: undefined;
                                })[];
                                title: string;
                            };
                            attributeStyleMap: {
                                $ref: string;
                                title: string;
                            };
                            style: {
                                type: string;
                                additionalProperties: boolean;
                                patternProperties: {
                                    "^[0-9]+$": {
                                        type: string;
                                    };
                                };
                                properties: {
                                    accentColor: {
                                        type: string;
                                        title: string;
                                    };
                                    alignContent: {
                                        type: string;
                                        title: string;
                                    };
                                    alignItems: {
                                        type: string;
                                        title: string;
                                    };
                                    alignSelf: {
                                        type: string;
                                        title: string;
                                    };
                                    alignmentBaseline: {
                                        type: string;
                                        title: string;
                                    };
                                    all: {
                                        type: string;
                                        title: string;
                                    };
                                    animation: {
                                        type: string;
                                        title: string;
                                    };
                                    animationComposition: {
                                        type: string;
                                        title: string;
                                    };
                                    animationDelay: {
                                        type: string;
                                        title: string;
                                    };
                                    animationDirection: {
                                        type: string;
                                        title: string;
                                    };
                                    animationDuration: {
                                        type: string;
                                        title: string;
                                    };
                                    animationFillMode: {
                                        type: string;
                                        title: string;
                                    };
                                    animationIterationCount: {
                                        type: string;
                                        title: string;
                                    };
                                    animationName: {
                                        type: string;
                                        title: string;
                                    };
                                    animationPlayState: {
                                        type: string;
                                        title: string;
                                    };
                                    animationTimingFunction: {
                                        type: string;
                                        title: string;
                                    };
                                    appearance: {
                                        type: string;
                                        title: string;
                                    };
                                    aspectRatio: {
                                        type: string;
                                        title: string;
                                    };
                                    backdropFilter: {
                                        type: string;
                                        title: string;
                                    };
                                    backfaceVisibility: {
                                        type: string;
                                        title: string;
                                    };
                                    background: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundAttachment: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundBlendMode: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundClip: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundColor: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundImage: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundPositionX: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundPositionY: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundRepeat: {
                                        type: string;
                                        title: string;
                                    };
                                    backgroundSize: {
                                        type: string;
                                        title: string;
                                    };
                                    baselineShift: {
                                        type: string;
                                        title: string;
                                    };
                                    baselineSource: {
                                        type: string;
                                        title: string;
                                    };
                                    blockSize: {
                                        type: string;
                                        title: string;
                                    };
                                    border: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockEndColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockEndStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockEndWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockStartColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockStartStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockStartWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBlockWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottom: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottomColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottomLeftRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottomRightRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottomStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderBottomWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderCollapse: {
                                        type: string;
                                        title: string;
                                    };
                                    borderColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderEndEndRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderEndStartRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImage: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImageOutset: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImageRepeat: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImageSlice: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImageSource: {
                                        type: string;
                                        title: string;
                                    };
                                    borderImageWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInline: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineEndColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineEndStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineEndWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineStartColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineStartStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineStartWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderInlineWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderLeft: {
                                        type: string;
                                        title: string;
                                    };
                                    borderLeftColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderLeftStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderLeftWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderRight: {
                                        type: string;
                                        title: string;
                                    };
                                    borderRightColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderRightStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderRightWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderSpacing: {
                                        type: string;
                                        title: string;
                                    };
                                    borderStartEndRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderStartStartRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTop: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTopColor: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTopLeftRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTopRightRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTopStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    borderTopWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    borderWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    bottom: {
                                        type: string;
                                        title: string;
                                    };
                                    boxShadow: {
                                        type: string;
                                        title: string;
                                    };
                                    boxSizing: {
                                        type: string;
                                        title: string;
                                    };
                                    breakAfter: {
                                        type: string;
                                        title: string;
                                    };
                                    breakBefore: {
                                        type: string;
                                        title: string;
                                    };
                                    breakInside: {
                                        type: string;
                                        title: string;
                                    };
                                    captionSide: {
                                        type: string;
                                        title: string;
                                    };
                                    caretColor: {
                                        type: string;
                                        title: string;
                                    };
                                    clear: {
                                        type: string;
                                        title: string;
                                    };
                                    clip: {
                                        type: string;
                                        title: string;
                                    };
                                    clipPath: {
                                        type: string;
                                        title: string;
                                    };
                                    clipRule: {
                                        type: string;
                                        title: string;
                                    };
                                    color: {
                                        type: string;
                                        title: string;
                                    };
                                    colorInterpolation: {
                                        type: string;
                                        title: string;
                                    };
                                    colorInterpolationFilters: {
                                        type: string;
                                        title: string;
                                    };
                                    colorScheme: {
                                        type: string;
                                        title: string;
                                    };
                                    columnCount: {
                                        type: string;
                                        title: string;
                                    };
                                    columnFill: {
                                        type: string;
                                        title: string;
                                    };
                                    columnGap: {
                                        type: string;
                                        title: string;
                                    };
                                    columnRule: {
                                        type: string;
                                        title: string;
                                    };
                                    columnRuleColor: {
                                        type: string;
                                        title: string;
                                    };
                                    columnRuleStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    columnRuleWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    columnSpan: {
                                        type: string;
                                        title: string;
                                    };
                                    columnWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    columns: {
                                        type: string;
                                        title: string;
                                    };
                                    contain: {
                                        type: string;
                                        title: string;
                                    };
                                    containIntrinsicBlockSize: {
                                        type: string;
                                        title: string;
                                    };
                                    containIntrinsicHeight: {
                                        type: string;
                                        title: string;
                                    };
                                    containIntrinsicInlineSize: {
                                        type: string;
                                        title: string;
                                    };
                                    containIntrinsicSize: {
                                        type: string;
                                        title: string;
                                    };
                                    containIntrinsicWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    container: {
                                        type: string;
                                        title: string;
                                    };
                                    containerName: {
                                        type: string;
                                        title: string;
                                    };
                                    containerType: {
                                        type: string;
                                        title: string;
                                    };
                                    content: {
                                        type: string;
                                        title: string;
                                    };
                                    contentVisibility: {
                                        type: string;
                                        title: string;
                                    };
                                    counterIncrement: {
                                        type: string;
                                        title: string;
                                    };
                                    counterReset: {
                                        type: string;
                                        title: string;
                                    };
                                    counterSet: {
                                        type: string;
                                        title: string;
                                    };
                                    cssFloat: {
                                        type: string;
                                        title: string;
                                    };
                                    cssText: {
                                        type: string;
                                        title: string;
                                    };
                                    cursor: {
                                        type: string;
                                        title: string;
                                    };
                                    cx: {
                                        type: string;
                                        title: string;
                                    };
                                    cy: {
                                        type: string;
                                        title: string;
                                    };
                                    d: {
                                        type: string;
                                        title: string;
                                    };
                                    direction: {
                                        type: string;
                                        title: string;
                                    };
                                    display: {
                                        type: string;
                                        title: string;
                                    };
                                    dominantBaseline: {
                                        type: string;
                                        title: string;
                                    };
                                    emptyCells: {
                                        type: string;
                                        title: string;
                                    };
                                    fill: {
                                        type: string;
                                        title: string;
                                    };
                                    fillOpacity: {
                                        type: string;
                                        title: string;
                                    };
                                    fillRule: {
                                        type: string;
                                        title: string;
                                    };
                                    filter: {
                                        type: string;
                                        title: string;
                                    };
                                    flex: {
                                        type: string;
                                        title: string;
                                    };
                                    flexBasis: {
                                        type: string;
                                        title: string;
                                    };
                                    flexDirection: {
                                        type: string;
                                        title: string;
                                    };
                                    flexFlow: {
                                        type: string;
                                        title: string;
                                    };
                                    flexGrow: {
                                        type: string;
                                        title: string;
                                    };
                                    flexShrink: {
                                        type: string;
                                        title: string;
                                    };
                                    flexWrap: {
                                        type: string;
                                        title: string;
                                    };
                                    float: {
                                        type: string;
                                        title: string;
                                    };
                                    floodColor: {
                                        type: string;
                                        title: string;
                                    };
                                    floodOpacity: {
                                        type: string;
                                        title: string;
                                    };
                                    font: {
                                        type: string;
                                        title: string;
                                    };
                                    fontFamily: {
                                        type: string;
                                        title: string;
                                    };
                                    fontFeatureSettings: {
                                        type: string;
                                        title: string;
                                    };
                                    fontKerning: {
                                        type: string;
                                        title: string;
                                    };
                                    fontOpticalSizing: {
                                        type: string;
                                        title: string;
                                    };
                                    fontPalette: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSize: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSizeAdjust: {
                                        type: string;
                                        title: string;
                                    };
                                    fontStretch: {
                                        type: string;
                                        title: string;
                                    };
                                    fontStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSynthesis: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSynthesisSmallCaps: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSynthesisStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    fontSynthesisWeight: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariant: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantAlternates: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantCaps: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantEastAsian: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantLigatures: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantNumeric: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariantPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    fontVariationSettings: {
                                        type: string;
                                        title: string;
                                    };
                                    fontWeight: {
                                        type: string;
                                        title: string;
                                    };
                                    forcedColorAdjust: {
                                        type: string;
                                        title: string;
                                    };
                                    gap: {
                                        type: string;
                                        title: string;
                                    };
                                    grid: {
                                        type: string;
                                        title: string;
                                    };
                                    gridArea: {
                                        type: string;
                                        title: string;
                                    };
                                    gridAutoColumns: {
                                        type: string;
                                        title: string;
                                    };
                                    gridAutoFlow: {
                                        type: string;
                                        title: string;
                                    };
                                    gridAutoRows: {
                                        type: string;
                                        title: string;
                                    };
                                    gridColumn: {
                                        type: string;
                                        title: string;
                                    };
                                    gridColumnEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    gridColumnGap: {
                                        type: string;
                                        title: string;
                                    };
                                    gridColumnStart: {
                                        type: string;
                                        title: string;
                                    };
                                    gridGap: {
                                        type: string;
                                        title: string;
                                    };
                                    gridRow: {
                                        type: string;
                                        title: string;
                                    };
                                    gridRowEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    gridRowGap: {
                                        type: string;
                                        title: string;
                                    };
                                    gridRowStart: {
                                        type: string;
                                        title: string;
                                    };
                                    gridTemplate: {
                                        type: string;
                                        title: string;
                                    };
                                    gridTemplateAreas: {
                                        type: string;
                                        title: string;
                                    };
                                    gridTemplateColumns: {
                                        type: string;
                                        title: string;
                                    };
                                    gridTemplateRows: {
                                        type: string;
                                        title: string;
                                    };
                                    height: {
                                        type: string;
                                        title: string;
                                    };
                                    hyphenateCharacter: {
                                        type: string;
                                        title: string;
                                    };
                                    hyphens: {
                                        type: string;
                                        title: string;
                                    };
                                    imageOrientation: {
                                        type: string;
                                        title: string;
                                    };
                                    imageRendering: {
                                        type: string;
                                        title: string;
                                    };
                                    inlineSize: {
                                        type: string;
                                        title: string;
                                    };
                                    inset: {
                                        type: string;
                                        title: string;
                                    };
                                    insetBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    insetBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    insetBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    insetInline: {
                                        type: string;
                                        title: string;
                                    };
                                    insetInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    insetInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    isolation: {
                                        type: string;
                                        title: string;
                                    };
                                    justifyContent: {
                                        type: string;
                                        title: string;
                                    };
                                    justifyItems: {
                                        type: string;
                                        title: string;
                                    };
                                    justifySelf: {
                                        type: string;
                                        title: string;
                                    };
                                    left: {
                                        type: string;
                                        title: string;
                                    };
                                    length: {
                                        type: string;
                                        title: string;
                                    };
                                    letterSpacing: {
                                        type: string;
                                        title: string;
                                    };
                                    lightingColor: {
                                        type: string;
                                        title: string;
                                    };
                                    lineBreak: {
                                        type: string;
                                        title: string;
                                    };
                                    lineHeight: {
                                        type: string;
                                        title: string;
                                    };
                                    listStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    listStyleImage: {
                                        type: string;
                                        title: string;
                                    };
                                    listStylePosition: {
                                        type: string;
                                        title: string;
                                    };
                                    listStyleType: {
                                        type: string;
                                        title: string;
                                    };
                                    margin: {
                                        type: string;
                                        title: string;
                                    };
                                    marginBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    marginBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    marginBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    marginBottom: {
                                        type: string;
                                        title: string;
                                    };
                                    marginInline: {
                                        type: string;
                                        title: string;
                                    };
                                    marginInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    marginInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    marginLeft: {
                                        type: string;
                                        title: string;
                                    };
                                    marginRight: {
                                        type: string;
                                        title: string;
                                    };
                                    marginTop: {
                                        type: string;
                                        title: string;
                                    };
                                    marker: {
                                        type: string;
                                        title: string;
                                    };
                                    markerEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    markerMid: {
                                        type: string;
                                        title: string;
                                    };
                                    markerStart: {
                                        type: string;
                                        title: string;
                                    };
                                    mask: {
                                        type: string;
                                        title: string;
                                    };
                                    maskClip: {
                                        type: string;
                                        title: string;
                                    };
                                    maskComposite: {
                                        type: string;
                                        title: string;
                                    };
                                    maskImage: {
                                        type: string;
                                        title: string;
                                    };
                                    maskMode: {
                                        type: string;
                                        title: string;
                                    };
                                    maskOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    maskPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    maskRepeat: {
                                        type: string;
                                        title: string;
                                    };
                                    maskSize: {
                                        type: string;
                                        title: string;
                                    };
                                    maskType: {
                                        type: string;
                                        title: string;
                                    };
                                    mathDepth: {
                                        type: string;
                                        title: string;
                                    };
                                    mathStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    maxBlockSize: {
                                        type: string;
                                        title: string;
                                    };
                                    maxHeight: {
                                        type: string;
                                        title: string;
                                    };
                                    maxInlineSize: {
                                        type: string;
                                        title: string;
                                    };
                                    maxWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    minBlockSize: {
                                        type: string;
                                        title: string;
                                    };
                                    minHeight: {
                                        type: string;
                                        title: string;
                                    };
                                    minInlineSize: {
                                        type: string;
                                        title: string;
                                    };
                                    minWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    mixBlendMode: {
                                        type: string;
                                        title: string;
                                    };
                                    objectFit: {
                                        type: string;
                                        title: string;
                                    };
                                    objectPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    offset: {
                                        type: string;
                                        title: string;
                                    };
                                    offsetAnchor: {
                                        type: string;
                                        title: string;
                                    };
                                    offsetDistance: {
                                        type: string;
                                        title: string;
                                    };
                                    offsetPath: {
                                        type: string;
                                        title: string;
                                    };
                                    offsetPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    offsetRotate: {
                                        type: string;
                                        title: string;
                                    };
                                    opacity: {
                                        type: string;
                                        title: string;
                                    };
                                    order: {
                                        type: string;
                                        title: string;
                                    };
                                    orphans: {
                                        type: string;
                                        title: string;
                                    };
                                    outline: {
                                        type: string;
                                        title: string;
                                    };
                                    outlineColor: {
                                        type: string;
                                        title: string;
                                    };
                                    outlineOffset: {
                                        type: string;
                                        title: string;
                                    };
                                    outlineStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    outlineWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    overflow: {
                                        type: string;
                                        title: string;
                                    };
                                    overflowAnchor: {
                                        type: string;
                                        title: string;
                                    };
                                    overflowClipMargin: {
                                        type: string;
                                        title: string;
                                    };
                                    overflowWrap: {
                                        type: string;
                                        title: string;
                                    };
                                    overflowX: {
                                        type: string;
                                        title: string;
                                    };
                                    overflowY: {
                                        type: string;
                                        title: string;
                                    };
                                    overscrollBehavior: {
                                        type: string;
                                        title: string;
                                    };
                                    overscrollBehaviorBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    overscrollBehaviorInline: {
                                        type: string;
                                        title: string;
                                    };
                                    overscrollBehaviorX: {
                                        type: string;
                                        title: string;
                                    };
                                    overscrollBehaviorY: {
                                        type: string;
                                        title: string;
                                    };
                                    padding: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingBottom: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingInline: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingLeft: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingRight: {
                                        type: string;
                                        title: string;
                                    };
                                    paddingTop: {
                                        type: string;
                                        title: string;
                                    };
                                    page: {
                                        type: string;
                                        title: string;
                                    };
                                    pageBreakAfter: {
                                        type: string;
                                        title: string;
                                    };
                                    pageBreakBefore: {
                                        type: string;
                                        title: string;
                                    };
                                    pageBreakInside: {
                                        type: string;
                                        title: string;
                                    };
                                    paintOrder: {
                                        type: string;
                                        title: string;
                                    };
                                    parentRule: {
                                        anyOf: ({
                                            $ref: string;
                                            type?: undefined;
                                        } | {
                                            type: string;
                                            $ref?: undefined;
                                        })[];
                                        title: string;
                                    };
                                    perspective: {
                                        type: string;
                                        title: string;
                                    };
                                    perspectiveOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    placeContent: {
                                        type: string;
                                        title: string;
                                    };
                                    placeItems: {
                                        type: string;
                                        title: string;
                                    };
                                    placeSelf: {
                                        type: string;
                                        title: string;
                                    };
                                    pointerEvents: {
                                        type: string;
                                        title: string;
                                    };
                                    position: {
                                        type: string;
                                        title: string;
                                    };
                                    printColorAdjust: {
                                        type: string;
                                        title: string;
                                    };
                                    quotes: {
                                        type: string;
                                        title: string;
                                    };
                                    r: {
                                        type: string;
                                        title: string;
                                    };
                                    resize: {
                                        type: string;
                                        title: string;
                                    };
                                    right: {
                                        type: string;
                                        title: string;
                                    };
                                    rotate: {
                                        type: string;
                                        title: string;
                                    };
                                    rowGap: {
                                        type: string;
                                        title: string;
                                    };
                                    rubyPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    rx: {
                                        type: string;
                                        title: string;
                                    };
                                    ry: {
                                        type: string;
                                        title: string;
                                    };
                                    scale: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollBehavior: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMargin: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginBottom: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginInline: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginLeft: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginRight: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollMarginTop: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPadding: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingBlock: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingBlockEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingBlockStart: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingBottom: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingInline: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingInlineEnd: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingInlineStart: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingLeft: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingRight: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollPaddingTop: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollSnapAlign: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollSnapStop: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollSnapType: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollbarColor: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollbarGutter: {
                                        type: string;
                                        title: string;
                                    };
                                    scrollbarWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    shapeImageThreshold: {
                                        type: string;
                                        title: string;
                                    };
                                    shapeMargin: {
                                        type: string;
                                        title: string;
                                    };
                                    shapeOutside: {
                                        type: string;
                                        title: string;
                                    };
                                    shapeRendering: {
                                        type: string;
                                        title: string;
                                    };
                                    stopColor: {
                                        type: string;
                                        title: string;
                                    };
                                    stopOpacity: {
                                        type: string;
                                        title: string;
                                    };
                                    stroke: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeDasharray: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeDashoffset: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeLinecap: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeLinejoin: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeMiterlimit: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeOpacity: {
                                        type: string;
                                        title: string;
                                    };
                                    strokeWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    tabSize: {
                                        type: string;
                                        title: string;
                                    };
                                    tableLayout: {
                                        type: string;
                                        title: string;
                                    };
                                    textAlign: {
                                        type: string;
                                        title: string;
                                    };
                                    textAlignLast: {
                                        type: string;
                                        title: string;
                                    };
                                    textAnchor: {
                                        type: string;
                                        title: string;
                                    };
                                    textCombineUpright: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecoration: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecorationColor: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecorationLine: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecorationSkipInk: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecorationStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    textDecorationThickness: {
                                        type: string;
                                        title: string;
                                    };
                                    textEmphasis: {
                                        type: string;
                                        title: string;
                                    };
                                    textEmphasisColor: {
                                        type: string;
                                        title: string;
                                    };
                                    textEmphasisPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    textEmphasisStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    textIndent: {
                                        type: string;
                                        title: string;
                                    };
                                    textOrientation: {
                                        type: string;
                                        title: string;
                                    };
                                    textOverflow: {
                                        type: string;
                                        title: string;
                                    };
                                    textRendering: {
                                        type: string;
                                        title: string;
                                    };
                                    textShadow: {
                                        type: string;
                                        title: string;
                                    };
                                    textTransform: {
                                        type: string;
                                        title: string;
                                    };
                                    textUnderlineOffset: {
                                        type: string;
                                        title: string;
                                    };
                                    textUnderlinePosition: {
                                        type: string;
                                        title: string;
                                    };
                                    textWrap: {
                                        type: string;
                                        title: string;
                                    };
                                    textWrapMode: {
                                        type: string;
                                        title: string;
                                    };
                                    textWrapStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    top: {
                                        type: string;
                                        title: string;
                                    };
                                    touchAction: {
                                        type: string;
                                        title: string;
                                    };
                                    transform: {
                                        type: string;
                                        title: string;
                                    };
                                    transformBox: {
                                        type: string;
                                        title: string;
                                    };
                                    transformOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    transformStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    transition: {
                                        type: string;
                                        title: string;
                                    };
                                    transitionBehavior: {
                                        type: string;
                                        title: string;
                                    };
                                    transitionDelay: {
                                        type: string;
                                        title: string;
                                    };
                                    transitionDuration: {
                                        type: string;
                                        title: string;
                                    };
                                    transitionProperty: {
                                        type: string;
                                        title: string;
                                    };
                                    transitionTimingFunction: {
                                        type: string;
                                        title: string;
                                    };
                                    translate: {
                                        type: string;
                                        title: string;
                                    };
                                    unicodeBidi: {
                                        type: string;
                                        title: string;
                                    };
                                    userSelect: {
                                        type: string;
                                        title: string;
                                    };
                                    vectorEffect: {
                                        type: string;
                                        title: string;
                                    };
                                    verticalAlign: {
                                        type: string;
                                        title: string;
                                    };
                                    visibility: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAlignContent: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAlignItems: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAlignSelf: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimation: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationDelay: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationDirection: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationDuration: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationFillMode: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationIterationCount: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationName: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationPlayState: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAnimationTimingFunction: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitAppearance: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBackfaceVisibility: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBackgroundClip: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBackgroundOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBackgroundSize: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBorderBottomLeftRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBorderBottomRightRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBorderRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBorderTopLeftRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBorderTopRightRadius: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxAlign: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxFlex: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxOrdinalGroup: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxOrient: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxPack: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxShadow: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitBoxSizing: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFilter: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlex: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexBasis: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexDirection: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexFlow: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexGrow: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexShrink: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitFlexWrap: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitJustifyContent: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitLineClamp: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMask: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImage: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImageOutset: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImageRepeat: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImageSlice: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImageSource: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskBoxImageWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskClip: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskComposite: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskImage: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskPosition: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskRepeat: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitMaskSize: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitOrder: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitPerspective: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitPerspectiveOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTextFillColor: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTextSizeAdjust: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTextStroke: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTextStrokeColor: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTextStrokeWidth: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransform: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransformOrigin: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransformStyle: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransition: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransitionDelay: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransitionDuration: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransitionProperty: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitTransitionTimingFunction: {
                                        type: string;
                                        title: string;
                                    };
                                    webkitUserSelect: {
                                        type: string;
                                        title: string;
                                    };
                                    whiteSpace: {
                                        type: string;
                                        title: string;
                                    };
                                    whiteSpaceCollapse: {
                                        type: string;
                                        title: string;
                                    };
                                    widows: {
                                        type: string;
                                        title: string;
                                    };
                                    width: {
                                        type: string;
                                        title: string;
                                    };
                                    willChange: {
                                        type: string;
                                        title: string;
                                    };
                                    wordBreak: {
                                        type: string;
                                        title: string;
                                    };
                                    wordSpacing: {
                                        type: string;
                                        title: string;
                                    };
                                    wordWrap: {
                                        type: string;
                                        title: string;
                                    };
                                    writingMode: {
                                        type: string;
                                        title: string;
                                    };
                                    x: {
                                        type: string;
                                        title: string;
                                    };
                                    y: {
                                        type: string;
                                        title: string;
                                    };
                                    zIndex: {
                                        type: string;
                                        title: string;
                                    };
                                    zoom: {
                                        type: string;
                                        title: string;
                                    };
                                };
                                required: string[];
                                title: string;
                            };
                            contentEditable: {
                                type: string;
                                title: string;
                            };
                            enterKeyHint: {
                                type: string;
                                title: string;
                            };
                            inputMode: {
                                type: string;
                                title: string;
                            };
                            isContentEditable: {
                                type: string;
                                title: string;
                            };
                            onabort: {
                                type: string[];
                                title: string;
                            };
                            onanimationcancel: {
                                type: string[];
                                title: string;
                            };
                            onanimationend: {
                                type: string[];
                                title: string;
                            };
                            onanimationiteration: {
                                type: string[];
                                title: string;
                            };
                            onanimationstart: {
                                type: string[];
                                title: string;
                            };
                            onauxclick: {
                                type: string[];
                                title: string;
                            };
                            onbeforeinput: {
                                type: string[];
                                title: string;
                            };
                            onbeforetoggle: {
                                type: string[];
                                title: string;
                            };
                            onblur: {
                                type: string[];
                                title: string;
                            };
                            oncancel: {
                                type: string[];
                                title: string;
                            };
                            oncanplay: {
                                type: string[];
                                title: string;
                            };
                            oncanplaythrough: {
                                type: string[];
                                title: string;
                            };
                            onchange: {
                                type: string[];
                                title: string;
                            };
                            onclick: {
                                type: string[];
                                title: string;
                            };
                            onclose: {
                                type: string[];
                                title: string;
                            };
                            oncontextmenu: {
                                type: string[];
                                title: string;
                            };
                            oncopy: {
                                type: string[];
                                title: string;
                            };
                            oncuechange: {
                                type: string[];
                                title: string;
                            };
                            oncut: {
                                type: string[];
                                title: string;
                            };
                            ondblclick: {
                                type: string[];
                                title: string;
                            };
                            ondrag: {
                                type: string[];
                                title: string;
                            };
                            ondragend: {
                                type: string[];
                                title: string;
                            };
                            ondragenter: {
                                type: string[];
                                title: string;
                            };
                            ondragleave: {
                                type: string[];
                                title: string;
                            };
                            ondragover: {
                                type: string[];
                                title: string;
                            };
                            ondragstart: {
                                type: string[];
                                title: string;
                            };
                            ondrop: {
                                type: string[];
                                title: string;
                            };
                            ondurationchange: {
                                type: string[];
                                title: string;
                            };
                            onemptied: {
                                type: string[];
                                title: string;
                            };
                            onended: {
                                type: string[];
                                title: string;
                            };
                            onerror: {
                                $ref: string;
                                title: string;
                            };
                            onfocus: {
                                type: string[];
                                title: string;
                            };
                            onformdata: {
                                type: string[];
                                title: string;
                            };
                            ongotpointercapture: {
                                type: string[];
                                title: string;
                            };
                            oninput: {
                                type: string[];
                                title: string;
                            };
                            oninvalid: {
                                type: string[];
                                title: string;
                            };
                            onkeydown: {
                                type: string[];
                                title: string;
                            };
                            onkeypress: {
                                type: string[];
                                title: string;
                            };
                            onkeyup: {
                                type: string[];
                                title: string;
                            };
                            onload: {
                                type: string[];
                                title: string;
                            };
                            onloadeddata: {
                                type: string[];
                                title: string;
                            };
                            onloadedmetadata: {
                                type: string[];
                                title: string;
                            };
                            onloadstart: {
                                type: string[];
                                title: string;
                            };
                            onlostpointercapture: {
                                type: string[];
                                title: string;
                            };
                            onmousedown: {
                                type: string[];
                                title: string;
                            };
                            onmouseenter: {
                                type: string[];
                                title: string;
                            };
                            onmouseleave: {
                                type: string[];
                                title: string;
                            };
                            onmousemove: {
                                type: string[];
                                title: string;
                            };
                            onmouseout: {
                                type: string[];
                                title: string;
                            };
                            onmouseover: {
                                type: string[];
                                title: string;
                            };
                            onmouseup: {
                                type: string[];
                                title: string;
                            };
                            onpaste: {
                                type: string[];
                                title: string;
                            };
                            onpause: {
                                type: string[];
                                title: string;
                            };
                            onplay: {
                                type: string[];
                                title: string;
                            };
                            onplaying: {
                                type: string[];
                                title: string;
                            };
                            onpointercancel: {
                                type: string[];
                                title: string;
                            };
                            onpointerdown: {
                                type: string[];
                                title: string;
                            };
                            onpointerenter: {
                                type: string[];
                                title: string;
                            };
                            onpointerleave: {
                                type: string[];
                                title: string;
                            };
                            onpointermove: {
                                type: string[];
                                title: string;
                            };
                            onpointerout: {
                                type: string[];
                                title: string;
                            };
                            onpointerover: {
                                type: string[];
                                title: string;
                            };
                            onpointerup: {
                                type: string[];
                                title: string;
                            };
                            onprogress: {
                                type: string[];
                                title: string;
                            };
                            onratechange: {
                                type: string[];
                                title: string;
                            };
                            onreset: {
                                type: string[];
                                title: string;
                            };
                            onresize: {
                                type: string[];
                                title: string;
                            };
                            onscroll: {
                                type: string[];
                                title: string;
                            };
                            onscrollend: {
                                type: string[];
                                title: string;
                            };
                            onsecuritypolicyviolation: {
                                type: string[];
                                title: string;
                            };
                            onseeked: {
                                type: string[];
                                title: string;
                            };
                            onseeking: {
                                type: string[];
                                title: string;
                            };
                            onselect: {
                                type: string[];
                                title: string;
                            };
                            onselectionchange: {
                                type: string[];
                                title: string;
                            };
                            onselectstart: {
                                type: string[];
                                title: string;
                            };
                            onslotchange: {
                                type: string[];
                                title: string;
                            };
                            onstalled: {
                                type: string[];
                                title: string;
                            };
                            onsubmit: {
                                type: string[];
                                title: string;
                            };
                            onsuspend: {
                                type: string[];
                                title: string;
                            };
                            ontimeupdate: {
                                type: string[];
                                title: string;
                            };
                            ontoggle: {
                                type: string[];
                                title: string;
                            };
                            ontouchcancel: {
                                type: string[];
                                title: string;
                            };
                            ontouchend: {
                                type: string[];
                                title: string;
                            };
                            ontouchmove: {
                                type: string[];
                                title: string;
                            };
                            ontouchstart: {
                                type: string[];
                                title: string;
                            };
                            ontransitioncancel: {
                                type: string[];
                                title: string;
                            };
                            ontransitionend: {
                                type: string[];
                                title: string;
                            };
                            ontransitionrun: {
                                type: string[];
                                title: string;
                            };
                            ontransitionstart: {
                                type: string[];
                                title: string;
                            };
                            onvolumechange: {
                                type: string[];
                                title: string;
                            };
                            onwaiting: {
                                type: string[];
                                title: string;
                            };
                            onwebkitanimationend: {
                                type: string[];
                                title: string;
                            };
                            onwebkitanimationiteration: {
                                type: string[];
                                title: string;
                            };
                            onwebkitanimationstart: {
                                type: string[];
                                title: string;
                            };
                            onwebkittransitionend: {
                                type: string[];
                                title: string;
                            };
                            onwheel: {
                                type: string[];
                                title: string;
                            };
                            autofocus: {
                                type: string;
                                title: string;
                            };
                            dataset: {
                                $ref: string;
                                title: string;
                            };
                            nonce: {
                                type: string;
                                title: string;
                            };
                            tabIndex: {
                                type: string;
                                title: string;
                            };
                        };
                        required: string[];
                    };
                    title: string;
                };
                fullscreen: {
                    type: string;
                    title: string;
                };
                fullscreenEnabled: {
                    type: string;
                    title: string;
                };
                head: {
                    $ref: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                images: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                implementation: {
                    $ref: string;
                    title: string;
                };
                inputEncoding: {
                    type: string;
                    title: string;
                };
                lastModified: {
                    type: string;
                    title: string;
                };
                linkColor: {
                    type: string;
                    title: string;
                };
                links: {
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    title: string;
                };
                location: {
                    $ref: string;
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                onpointerlockchange: {
                    type: string[];
                    title: string;
                };
                onpointerlockerror: {
                    type: string[];
                    title: string;
                };
                onreadystatechange: {
                    type: string[];
                    title: string;
                };
                onvisibilitychange: {
                    type: string[];
                    title: string;
                };
                ownerDocument: {
                    type: string;
                    title: string;
                };
                pictureInPictureEnabled: {
                    type: string;
                    title: string;
                };
                plugins: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                readyState: {
                    $ref: string;
                    title: string;
                };
                referrer: {
                    type: string;
                    title: string;
                };
                rootElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                scripts: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                scrollingElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeline: {
                    $ref: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                visibilityState: {
                    $ref: string;
                    title: string;
                };
                vlinkColor: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                activeElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                adoptedStyleSheets: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fullscreenElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                pictureInPictureElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                pointerLockElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                styleSheets: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                fonts: {
                    $ref: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        HTMLAnchorElement: {
            title: string;
            type: string;
            properties: {
                charset: {
                    type: string;
                    title: string;
                };
                coords: {
                    type: string;
                    title: string;
                };
                download: {
                    type: string;
                    title: string;
                };
                hreflang: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                ping: {
                    type: string;
                    title: string;
                };
                referrerPolicy: {
                    type: string;
                    title: string;
                };
                rel: {
                    type: string;
                    title: string;
                };
                relList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                rev: {
                    type: string;
                    title: string;
                };
                shape: {
                    type: string;
                    title: string;
                };
                target: {
                    type: string;
                    title: string;
                };
                text: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
                hash: {
                    type: string;
                    title: string;
                };
                host: {
                    type: string;
                    title: string;
                };
                hostname: {
                    type: string;
                    title: string;
                };
                href: {
                    type: string;
                    title: string;
                };
                origin: {
                    type: string;
                    title: string;
                };
                password: {
                    type: string;
                    title: string;
                };
                pathname: {
                    type: string;
                    title: string;
                };
                port: {
                    type: string;
                    title: string;
                };
                protocol: {
                    type: string;
                    title: string;
                };
                search: {
                    type: string;
                    title: string;
                };
                username: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ShadowRoot: {
            title: string;
            type: string;
            properties: {
                clonable: {
                    type: string;
                    title: string;
                };
                delegatesFocus: {
                    type: string;
                    title: string;
                };
                host: {
                    $ref: string;
                    title: string;
                };
                mode: {
                    $ref: string;
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                slotAssignment: {
                    $ref: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                activeElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                adoptedStyleSheets: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fullscreenElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                pictureInPictureElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                pointerLockElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                styleSheets: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ShadowRootMode: {
            title: string;
            enum: string[];
            type: string;
        };
        SlotAssignmentMode: {
            title: string;
            enum: string[];
            type: string;
        };
        ChildNode: {
            title: string;
            type: string;
            properties: {
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                ownerDocument: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        HTMLElement: {
            title: string;
            type: string;
            properties: {
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ParentNode: {
            title: string;
            type: string;
            properties: {
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                ownerDocument: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        HTMLSlotElement: {
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        StylePropertyMap: {
            title: string;
            type: string;
            properties: {
                size: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        CSSRule: {
            title: string;
            type: string;
            properties: {
                cssText: {
                    type: string;
                    title: string;
                };
                parentRule: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentStyleSheet: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                STYLE_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CHARSET_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                IMPORT_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                MEDIA_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                FONT_FACE_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PAGE_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NAMESPACE_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                KEYFRAMES_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                KEYFRAME_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SUPPORTS_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COUNTER_STYLE_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
                FONT_FEATURE_VALUES_RULE: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        CSSStyleSheet: {
            title: string;
            type: string;
            properties: {
                cssRules: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                ownerRule: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                rules: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                disabled: {
                    type: string;
                    title: string;
                };
                href: {
                    type: string[];
                    title: string;
                };
                media: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        mediaText: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                ownerNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentStyleSheet: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                title: {
                    type: string[];
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ProcessingInstruction: {
            title: string;
            type: string;
            properties: {
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                target: {
                    type: string;
                    title: string;
                };
                data: {
                    type: string;
                    title: string;
                };
                length: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                sheet: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        OnErrorEventHandler: {
            title: string;
            anyOf: ({
                $ref: string;
                type?: undefined;
            } | {
                type: string;
                $ref?: undefined;
            })[];
        };
        OnErrorEventHandlerNonNull: {
            title: string;
            type: string;
        };
        DOMStringMap: {
            title: string;
            type: string;
            additionalProperties: {
                type: string;
            };
        };
        HTMLScriptElement: {
            title: string;
            type: string;
            properties: {
                async: {
                    type: string;
                    title: string;
                };
                charset: {
                    type: string;
                    title: string;
                };
                crossOrigin: {
                    type: string[];
                    title: string;
                };
                defer: {
                    type: string;
                    title: string;
                };
                event: {
                    type: string;
                    title: string;
                };
                fetchPriority: {
                    type: string;
                    title: string;
                };
                htmlFor: {
                    type: string;
                    title: string;
                };
                integrity: {
                    type: string;
                    title: string;
                };
                noModule: {
                    type: string;
                    title: string;
                };
                referrerPolicy: {
                    type: string;
                    title: string;
                };
                src: {
                    type: string;
                    title: string;
                };
                text: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGScriptElement: {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    title: string;
                };
                className: {
                    title: string;
                };
                ownerSVGElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                viewportElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
                href: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGSVGElement: {
            title: string;
            type: string;
            properties: {
                currentScale: {
                    type: string;
                    title: string;
                };
                currentTranslate: {
                    $ref: string;
                    title: string;
                };
                height: {
                    $ref: string;
                    title: string;
                };
                width: {
                    $ref: string;
                    title: string;
                };
                x: {
                    $ref: string;
                    title: string;
                };
                y: {
                    $ref: string;
                    title: string;
                };
                transform: {
                    $ref: string;
                    title: string;
                };
                className: {
                    title: string;
                };
                ownerSVGElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                viewportElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
                requiredExtensions: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        numberOfItems: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                systemLanguage: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        numberOfItems: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                preserveAspectRatio: {
                    $ref: string;
                    title: string;
                };
                viewBox: {
                    $ref: string;
                    title: string;
                };
                onafterprint: {
                    type: string[];
                    title: string;
                };
                onbeforeprint: {
                    type: string[];
                    title: string;
                };
                onbeforeunload: {
                    type: string[];
                    title: string;
                };
                ongamepadconnected: {
                    type: string[];
                    title: string;
                };
                ongamepaddisconnected: {
                    type: string[];
                    title: string;
                };
                onhashchange: {
                    type: string[];
                    title: string;
                };
                onlanguagechange: {
                    type: string[];
                    title: string;
                };
                onmessage: {
                    type: string[];
                    title: string;
                };
                onmessageerror: {
                    type: string[];
                    title: string;
                };
                onoffline: {
                    type: string[];
                    title: string;
                };
                ononline: {
                    type: string[];
                    title: string;
                };
                onpagehide: {
                    type: string[];
                    title: string;
                };
                onpageshow: {
                    type: string[];
                    title: string;
                };
                onpopstate: {
                    type: string[];
                    title: string;
                };
                onrejectionhandled: {
                    type: string[];
                    title: string;
                };
                onstorage: {
                    type: string[];
                    title: string;
                };
                onunhandledrejection: {
                    type: string[];
                    title: string;
                };
                onunload: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        DOMPointReadOnly: {
            title: string;
            type: string;
            properties: {
                w: {
                    type: string;
                    title: string;
                };
                x: {
                    type: string;
                    title: string;
                };
                y: {
                    type: string;
                    title: string;
                };
                z: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGAnimatedLength: {
            title: string;
            type: string;
            properties: {
                animVal: {
                    $ref: string;
                    title: string;
                };
                baseVal: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGLength: {
            title: string;
            type: string;
            properties: {
                unitType: {
                    type: string;
                    title: string;
                };
                value: {
                    type: string;
                    title: string;
                };
                valueAsString: {
                    type: string;
                    title: string;
                };
                valueInSpecifiedUnits: {
                    type: string;
                    title: string;
                };
                SVG_LENGTHTYPE_UNKNOWN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_NUMBER: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_PERCENTAGE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_EMS: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_EXS: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_PX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_CM: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_MM: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_IN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_PT: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_LENGTHTYPE_PC: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        SVGAnimatedTransformList: {
            title: string;
            type: string;
            properties: {
                animVal: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        numberOfItems: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                baseVal: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        numberOfItems: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
            };
            required: string[];
        };
        SVGTransform: {
            title: string;
            type: string;
            properties: {
                angle: {
                    type: string;
                    title: string;
                };
                matrix: {
                    $ref: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                SVG_TRANSFORM_UNKNOWN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_MATRIX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_TRANSLATE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_SCALE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_ROTATE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_SKEWX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_TRANSFORM_SKEWY: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        DOMMatrix: {
            title: string;
            type: string;
            properties: {
                a: {
                    type: string;
                    title: string;
                };
                b: {
                    type: string;
                    title: string;
                };
                c: {
                    type: string;
                    title: string;
                };
                d: {
                    type: string;
                    title: string;
                };
                e: {
                    type: string;
                    title: string;
                };
                f: {
                    type: string;
                    title: string;
                };
                m11: {
                    type: string;
                    title: string;
                };
                m12: {
                    type: string;
                    title: string;
                };
                m13: {
                    type: string;
                    title: string;
                };
                m14: {
                    type: string;
                    title: string;
                };
                m21: {
                    type: string;
                    title: string;
                };
                m22: {
                    type: string;
                    title: string;
                };
                m23: {
                    type: string;
                    title: string;
                };
                m24: {
                    type: string;
                    title: string;
                };
                m31: {
                    type: string;
                    title: string;
                };
                m32: {
                    type: string;
                    title: string;
                };
                m33: {
                    type: string;
                    title: string;
                };
                m34: {
                    type: string;
                    title: string;
                };
                m41: {
                    type: string;
                    title: string;
                };
                m42: {
                    type: string;
                    title: string;
                };
                m43: {
                    type: string;
                    title: string;
                };
                m44: {
                    type: string;
                    title: string;
                };
                is2D: {
                    type: string;
                    title: string;
                };
                isIdentity: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGElement: {
            title: string;
            type: string;
            properties: {
                className: {
                    title: string;
                };
                ownerSVGElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                viewportElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGAnimatedPreserveAspectRatio: {
            title: string;
            type: string;
            properties: {
                animVal: {
                    $ref: string;
                    title: string;
                };
                baseVal: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGPreserveAspectRatio: {
            title: string;
            type: string;
            properties: {
                align: {
                    type: string;
                    title: string;
                };
                meetOrSlice: {
                    type: string;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_UNKNOWN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_NONE: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMINYMIN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMIDYMIN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMAXYMIN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMINYMID: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMIDYMID: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMAXYMID: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMINYMAX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMIDYMAX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_PRESERVEASPECTRATIO_XMAXYMAX: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_MEETORSLICE_UNKNOWN: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_MEETORSLICE_MEET: {
                    type: string;
                    const: number;
                    title: string;
                };
                SVG_MEETORSLICE_SLICE: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        SVGAnimatedRect: {
            title: string;
            type: string;
            properties: {
                animVal: {
                    $ref: string;
                    title: string;
                };
                baseVal: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        DOMRectReadOnly: {
            title: string;
            type: string;
            properties: {
                bottom: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                left: {
                    type: string;
                    title: string;
                };
                right: {
                    type: string;
                    title: string;
                };
                top: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                x: {
                    type: string;
                    title: string;
                };
                y: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        DOMRect: {
            title: string;
            type: string;
            properties: {
                height: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                x: {
                    type: string;
                    title: string;
                };
                y: {
                    type: string;
                    title: string;
                };
                bottom: {
                    type: string;
                    title: string;
                };
                left: {
                    type: string;
                    title: string;
                };
                right: {
                    type: string;
                    title: string;
                };
                top: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        SVGAnimatedString: {
            title: string;
            type: string;
            properties: {
                animVal: {
                    type: string;
                    title: string;
                };
                baseVal: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        Window: {
            title: string;
            type: string;
            additionalProperties: {
                $ref: string;
            };
            properties: {
                clientInformation: {
                    $ref: string;
                    title: string;
                };
                closed: {
                    type: string;
                    title: string;
                };
                customElements: {
                    $ref: string;
                    title: string;
                };
                devicePixelRatio: {
                    type: string;
                    title: string;
                };
                document: {
                    $ref: string;
                    title: string;
                };
                event: {
                    $ref: string;
                    title: string;
                };
                external: {
                    $ref: string;
                    title: string;
                };
                frameElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                frames: {
                    $ref: string;
                    title: string;
                };
                history: {
                    $ref: string;
                    title: string;
                };
                innerHeight: {
                    type: string;
                    title: string;
                };
                innerWidth: {
                    type: string;
                    title: string;
                };
                length: {
                    type: string;
                    title: string;
                };
                location: {
                    $ref: string;
                    title: string;
                };
                locationbar: {
                    $ref: string;
                    title: string;
                };
                menubar: {
                    $ref: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                navigator: {
                    $ref: string;
                    title: string;
                };
                ondevicemotion: {
                    type: string[];
                    title: string;
                };
                ondeviceorientation: {
                    type: string[];
                    title: string;
                };
                ondeviceorientationabsolute: {
                    type: string[];
                    title: string;
                };
                onorientationchange: {
                    type: string[];
                    title: string;
                };
                opener: {
                    title: string;
                };
                orientation: {
                    type: string;
                    title: string;
                };
                outerHeight: {
                    type: string;
                    title: string;
                };
                outerWidth: {
                    type: string;
                    title: string;
                };
                pageXOffset: {
                    type: string;
                    title: string;
                };
                pageYOffset: {
                    type: string;
                    title: string;
                };
                parent: {
                    $ref: string;
                    title: string;
                };
                personalbar: {
                    $ref: string;
                    title: string;
                };
                screen: {
                    $ref: string;
                    title: string;
                };
                screenLeft: {
                    type: string;
                    title: string;
                };
                screenTop: {
                    type: string;
                    title: string;
                };
                screenX: {
                    type: string;
                    title: string;
                };
                screenY: {
                    type: string;
                    title: string;
                };
                scrollX: {
                    type: string;
                    title: string;
                };
                scrollY: {
                    type: string;
                    title: string;
                };
                scrollbars: {
                    $ref: string;
                    title: string;
                };
                self: {
                    allOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                speechSynthesis: {
                    $ref: string;
                    title: string;
                };
                status: {
                    type: string;
                    title: string;
                };
                statusbar: {
                    $ref: string;
                    title: string;
                };
                toolbar: {
                    $ref: string;
                    title: string;
                };
                top: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visualViewport: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                window: {
                    allOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                onafterprint: {
                    type: string[];
                    title: string;
                };
                onbeforeprint: {
                    type: string[];
                    title: string;
                };
                onbeforeunload: {
                    type: string[];
                    title: string;
                };
                ongamepadconnected: {
                    type: string[];
                    title: string;
                };
                ongamepaddisconnected: {
                    type: string[];
                    title: string;
                };
                onhashchange: {
                    type: string[];
                    title: string;
                };
                onlanguagechange: {
                    type: string[];
                    title: string;
                };
                onmessage: {
                    type: string[];
                    title: string;
                };
                onmessageerror: {
                    type: string[];
                    title: string;
                };
                onoffline: {
                    type: string[];
                    title: string;
                };
                ononline: {
                    type: string[];
                    title: string;
                };
                onpagehide: {
                    type: string[];
                    title: string;
                };
                onpageshow: {
                    type: string[];
                    title: string;
                };
                onpopstate: {
                    type: string[];
                    title: string;
                };
                onrejectionhandled: {
                    type: string[];
                    title: string;
                };
                onstorage: {
                    type: string[];
                    title: string;
                };
                onunhandledrejection: {
                    type: string[];
                    title: string;
                };
                onunload: {
                    type: string[];
                    title: string;
                };
                localStorage: {
                    $ref: string;
                    title: string;
                };
                caches: {
                    $ref: string;
                    title: string;
                };
                crossOriginIsolated: {
                    type: string;
                    title: string;
                };
                crypto: {
                    $ref: string;
                    title: string;
                };
                indexedDB: {
                    $ref: string;
                    title: string;
                };
                isSecureContext: {
                    type: string;
                    title: string;
                };
                origin: {
                    type: string;
                    title: string;
                };
                performance: {
                    $ref: string;
                    title: string;
                };
                sessionStorage: {
                    $ref: string;
                    title: string;
                };
                trustedTypes: {
                    $ref: string;
                    title: string;
                };
                TrustedHTML: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedScript: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedScriptURL: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedTypePolicyFactory: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedTypePolicy: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
            };
            required: string[];
        };
        Navigator: {
            title: string;
            type: string;
            properties: {
                clipboard: {
                    $ref: string;
                    title: string;
                };
                credentials: {
                    $ref: string;
                    title: string;
                };
                doNotTrack: {
                    type: string[];
                    title: string;
                };
                geolocation: {
                    $ref: string;
                    title: string;
                };
                maxTouchPoints: {
                    type: string;
                    title: string;
                };
                mediaCapabilities: {
                    $ref: string;
                    title: string;
                };
                mediaDevices: {
                    $ref: string;
                    title: string;
                };
                mediaSession: {
                    $ref: string;
                    title: string;
                };
                permissions: {
                    $ref: string;
                    title: string;
                };
                serviceWorker: {
                    $ref: string;
                    title: string;
                };
                userActivation: {
                    $ref: string;
                    title: string;
                };
                wakeLock: {
                    $ref: string;
                    title: string;
                };
                bluetooth: {
                    $ref: string;
                    title: string;
                };
                webdriver: {
                    type: string;
                    title: string;
                };
                hardwareConcurrency: {
                    type: string;
                    title: string;
                };
                cookieEnabled: {
                    type: string;
                    title: string;
                };
                appCodeName: {
                    type: string;
                    title: string;
                };
                appName: {
                    type: string;
                    title: string;
                };
                appVersion: {
                    type: string;
                    title: string;
                };
                platform: {
                    type: string;
                    title: string;
                };
                product: {
                    type: string;
                    title: string;
                };
                productSub: {
                    type: string;
                    title: string;
                };
                userAgent: {
                    type: string;
                    title: string;
                };
                vendor: {
                    type: string;
                    title: string;
                };
                vendorSub: {
                    type: string;
                    title: string;
                };
                language: {
                    type: string;
                    title: string;
                };
                languages: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                locks: {
                    $ref: string;
                    title: string;
                };
                onLine: {
                    type: string;
                    title: string;
                };
                mimeTypes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                pdfViewerEnabled: {
                    type: string;
                    title: string;
                };
                plugins: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                            additionalProperties: boolean;
                            patternProperties: {
                                "^[0-9]+$": {
                                    $ref: string;
                                };
                            };
                            properties: {
                                description: {
                                    type: string;
                                    title: string;
                                };
                                filename: {
                                    type: string;
                                    title: string;
                                };
                                length: {
                                    type: string;
                                    title: string;
                                };
                                name: {
                                    type: string;
                                    title: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                storage: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        Clipboard: {
            title: string;
            type: string;
        };
        CredentialsContainer: {
            title: string;
            type: string;
        };
        Geolocation: {
            title: string;
            type: string;
        };
        MediaCapabilities: {
            title: string;
            type: string;
        };
        MediaDevices: {
            title: string;
            type: string;
            properties: {
                ondevicechange: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        MediaSession: {
            title: string;
            type: string;
            properties: {
                metadata: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                playbackState: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        MediaMetadata: {
            title: string;
            type: string;
            properties: {
                album: {
                    type: string;
                    title: string;
                };
                artist: {
                    type: string;
                    title: string;
                };
                artwork: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        MediaImage: {
            title: string;
            type: string;
            properties: {
                sizes: {
                    type: string;
                    title: string;
                };
                src: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        MediaSessionPlaybackState: {
            title: string;
            enum: string[];
            type: string;
        };
        Permissions: {
            title: string;
            type: string;
        };
        ServiceWorkerContainer: {
            title: string;
            type: string;
            properties: {
                controller: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                oncontrollerchange: {
                    type: string[];
                    title: string;
                };
                onmessage: {
                    type: string[];
                    title: string;
                };
                onmessageerror: {
                    type: string[];
                    title: string;
                };
                ready: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        ServiceWorker: {
            title: string;
            type: string;
            properties: {
                onstatechange: {
                    type: string[];
                    title: string;
                };
                scriptURL: {
                    type: string;
                    title: string;
                };
                state: {
                    $ref: string;
                    title: string;
                };
                onerror: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        ServiceWorkerState: {
            title: string;
            enum: string[];
            type: string;
        };
        "Promise<ServiceWorkerRegistration>": {
            title: string;
            type: string;
            properties: {
                "__@toStringTag@16125": {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        UserActivation: {
            title: string;
            type: string;
            properties: {
                hasBeenActive: {
                    type: string;
                    title: string;
                };
                isActive: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        WakeLock: {
            title: string;
            type: string;
        };
        Bluetooth: {
            title: string;
            type: string;
            properties: {
                onavailabilitychanged: {
                    type: string;
                    title: string;
                };
                referringDevice: {
                    $ref: string;
                    title: string;
                };
                onadvertisementreceived: {
                    type: string;
                    title: string;
                };
                ongattserverdisconnected: {
                    type: string;
                    title: string;
                };
                oncharacteristicvaluechanged: {
                    type: string;
                    title: string;
                };
                onserviceadded: {
                    type: string;
                    title: string;
                };
                onservicechanged: {
                    type: string;
                    title: string;
                };
                onserviceremoved: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        BluetoothDevice: {
            title: string;
            type: string;
            properties: {
                id: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                gatt: {
                    $ref: string;
                    title: string;
                };
                watchingAdvertisements: {
                    type: string;
                    title: string;
                };
                onadvertisementreceived: {
                    type: string;
                    title: string;
                };
                ongattserverdisconnected: {
                    type: string;
                    title: string;
                };
                oncharacteristicvaluechanged: {
                    type: string;
                    title: string;
                };
                onserviceadded: {
                    type: string;
                    title: string;
                };
                onservicechanged: {
                    type: string;
                    title: string;
                };
                onserviceremoved: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        BluetoothRemoteGATTServer: {
            title: string;
            type: string;
            properties: {
                device: {
                    $ref: string;
                    title: string;
                };
                connected: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        LockManager: {
            title: string;
            type: string;
        };
        MimeType: {
            title: string;
            type: string;
            properties: {
                description: {
                    type: string;
                    title: string;
                };
                enabledPlugin: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        description: {
                            type: string;
                            title: string;
                        };
                        filename: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        name: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                suffixes: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        StorageManager: {
            title: string;
            type: string;
        };
        CustomElementRegistry: {
            title: string;
            type: string;
        };
        Event: {
            title: string;
            type: string;
            properties: {
                bubbles: {
                    type: string;
                    title: string;
                };
                cancelBubble: {
                    type: string;
                    title: string;
                };
                cancelable: {
                    type: string;
                    title: string;
                };
                composed: {
                    type: string;
                    title: string;
                };
                currentTarget: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultPrevented: {
                    type: string;
                    title: string;
                };
                eventPhase: {
                    type: string;
                    title: string;
                };
                isTrusted: {
                    type: string;
                    title: string;
                };
                returnValue: {
                    type: string;
                    title: string;
                };
                srcElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                target: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeStamp: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                NONE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CAPTURING_PHASE: {
                    type: string;
                    const: number;
                    title: string;
                };
                AT_TARGET: {
                    type: string;
                    const: number;
                    title: string;
                };
                BUBBLING_PHASE: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        EventTarget: {
            title: string;
            type: string;
        };
        External: {
            title: string;
            type: string;
        };
        History: {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                scrollRestoration: {
                    $ref: string;
                    title: string;
                };
                state: {
                    title: string;
                };
            };
            required: string[];
        };
        ScrollRestoration: {
            title: string;
            enum: string[];
            type: string;
        };
        Location: {
            title: string;
            type: string;
            properties: {
                ancestorOrigins: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                hash: {
                    type: string;
                    title: string;
                };
                host: {
                    type: string;
                    title: string;
                };
                hostname: {
                    type: string;
                    title: string;
                };
                href: {
                    type: string;
                    title: string;
                };
                origin: {
                    type: string;
                    title: string;
                };
                pathname: {
                    type: string;
                    title: string;
                };
                port: {
                    type: string;
                    title: string;
                };
                protocol: {
                    type: string;
                    title: string;
                };
                search: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        BarProp: {
            title: string;
            type: string;
            properties: {
                visible: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        Screen: {
            title: string;
            type: string;
            properties: {
                availHeight: {
                    type: string;
                    title: string;
                };
                availWidth: {
                    type: string;
                    title: string;
                };
                colorDepth: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                orientation: {
                    $ref: string;
                    title: string;
                };
                pixelDepth: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        ScreenOrientation: {
            title: string;
            type: string;
            properties: {
                angle: {
                    type: string;
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                type: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        OrientationType: {
            title: string;
            enum: string[];
            type: string;
        };
        SpeechSynthesis: {
            title: string;
            type: string;
            properties: {
                onvoiceschanged: {
                    type: string[];
                    title: string;
                };
                paused: {
                    type: string;
                    title: string;
                };
                pending: {
                    type: string;
                    title: string;
                };
                speaking: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        VisualViewport: {
            title: string;
            type: string;
            properties: {
                height: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                pageLeft: {
                    type: string;
                    title: string;
                };
                pageTop: {
                    type: string;
                    title: string;
                };
                scale: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        Storage: {
            title: string;
            type: string;
            additionalProperties: {};
            properties: {
                length: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        CacheStorage: {
            title: string;
            type: string;
        };
        Crypto: {
            title: string;
            type: string;
            properties: {
                subtle: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        SubtleCrypto: {
            title: string;
            type: string;
        };
        IDBFactory: {
            title: string;
            type: string;
        };
        Performance: {
            title: string;
            type: string;
            properties: {
                eventCounts: {
                    $ref: string;
                    title: string;
                };
                navigation: {
                    $ref: string;
                    title: string;
                };
                onresourcetimingbufferfull: {
                    type: string[];
                    title: string;
                };
                timeOrigin: {
                    type: string;
                    title: string;
                };
                timing: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        EventCounts: {
            title: string;
            type: string;
            properties: {
                size: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        PerformanceNavigation: {
            title: string;
            type: string;
            properties: {
                redirectCount: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                TYPE_NAVIGATE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TYPE_RELOAD: {
                    type: string;
                    const: number;
                    title: string;
                };
                TYPE_BACK_FORWARD: {
                    type: string;
                    const: number;
                    title: string;
                };
                TYPE_RESERVED: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        PerformanceTiming: {
            title: string;
            type: string;
            properties: {
                connectEnd: {
                    type: string;
                    title: string;
                };
                connectStart: {
                    type: string;
                    title: string;
                };
                domComplete: {
                    type: string;
                    title: string;
                };
                domContentLoadedEventEnd: {
                    type: string;
                    title: string;
                };
                domContentLoadedEventStart: {
                    type: string;
                    title: string;
                };
                domInteractive: {
                    type: string;
                    title: string;
                };
                domLoading: {
                    type: string;
                    title: string;
                };
                domainLookupEnd: {
                    type: string;
                    title: string;
                };
                domainLookupStart: {
                    type: string;
                    title: string;
                };
                fetchStart: {
                    type: string;
                    title: string;
                };
                loadEventEnd: {
                    type: string;
                    title: string;
                };
                loadEventStart: {
                    type: string;
                    title: string;
                };
                navigationStart: {
                    type: string;
                    title: string;
                };
                redirectEnd: {
                    type: string;
                    title: string;
                };
                redirectStart: {
                    type: string;
                    title: string;
                };
                requestStart: {
                    type: string;
                    title: string;
                };
                responseEnd: {
                    type: string;
                    title: string;
                };
                responseStart: {
                    type: string;
                    title: string;
                };
                secureConnectionStart: {
                    type: string;
                    title: string;
                };
                unloadEventEnd: {
                    type: string;
                    title: string;
                };
                unloadEventStart: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        TrustedTypePolicyFactory: {
            title: string;
            oneOf: {
                $ref: string;
            }[];
        };
        TrustedTypePolicyFactory_1: {
            title: string;
            type: string;
            properties: {
                emptyHTML: {
                    $ref: string;
                    title: string;
                };
                emptyScript: {
                    $ref: string;
                    title: string;
                };
                defaultPolicy: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        TrustedHTML: {
            title: string;
            type: string;
            properties: {
                brand: {
                    type: string;
                    const: boolean;
                    title: string;
                };
            };
            required: string[];
        };
        TrustedScript: {
            title: string;
            type: string;
            properties: {
                brand: {
                    type: string;
                    const: boolean;
                    title: string;
                };
            };
            required: string[];
        };
        "TrustedTypePolicy<TrustedTypePolicyOptions>": {
            title: string;
            oneOf: {
                $ref: string;
            }[];
        };
        TrustedTypePolicy: {
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        InternalTrustedTypePolicyFactory: {
            title: string;
            type: string;
            properties: {
                TrustedHTML: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedScript: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                TrustedScriptURL: {
                    type: string;
                    properties: {
                        prototype: {
                            $ref: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                emptyHTML: {
                    $ref: string;
                    title: string;
                };
                emptyScript: {
                    $ref: string;
                    title: string;
                };
                defaultPolicy: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        TrustedScriptURL: {
            title: string;
            type: string;
            properties: {
                brand: {
                    type: string;
                    const: boolean;
                    title: string;
                };
            };
            required: string[];
        };
        "TrustedTypePolicy<any>": {
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        DocumentType: {
            title: string;
            type: string;
            properties: {
                name: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                publicId: {
                    type: string;
                    title: string;
                };
                systemId: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        HTMLEmbedElement: {
            title: string;
            type: string;
            properties: {
                align: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                src: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        AutoFillBase: {
            title: string;
            enum: string[];
            type: string;
        };
        HTMLHeadElement: {
            title: string;
            type: string;
            properties: {
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        HTMLImageElement: {
            title: string;
            type: string;
            properties: {
                align: {
                    type: string;
                    title: string;
                };
                alt: {
                    type: string;
                    title: string;
                };
                border: {
                    type: string;
                    title: string;
                };
                complete: {
                    type: string;
                    title: string;
                };
                crossOrigin: {
                    type: string[];
                    title: string;
                };
                currentSrc: {
                    type: string;
                    title: string;
                };
                decoding: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                fetchPriority: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                hspace: {
                    type: string;
                    title: string;
                };
                isMap: {
                    type: string;
                    title: string;
                };
                loading: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                longDesc: {
                    type: string;
                    title: string;
                };
                lowsrc: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                naturalHeight: {
                    type: string;
                    title: string;
                };
                naturalWidth: {
                    type: string;
                    title: string;
                };
                referrerPolicy: {
                    type: string;
                    title: string;
                };
                sizes: {
                    type: string;
                    title: string;
                };
                src: {
                    type: string;
                    title: string;
                };
                srcset: {
                    type: string;
                    title: string;
                };
                useMap: {
                    type: string;
                    title: string;
                };
                vspace: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                x: {
                    type: string;
                    title: string;
                };
                y: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        DOMImplementation: {
            title: string;
            type: string;
        };
        HTMLAreaElement: {
            title: string;
            type: string;
            properties: {
                alt: {
                    type: string;
                    title: string;
                };
                coords: {
                    type: string;
                    title: string;
                };
                download: {
                    type: string;
                    title: string;
                };
                noHref: {
                    type: string;
                    title: string;
                };
                ping: {
                    type: string;
                    title: string;
                };
                referrerPolicy: {
                    type: string;
                    title: string;
                };
                rel: {
                    type: string;
                    title: string;
                };
                relList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                shape: {
                    type: string;
                    title: string;
                };
                target: {
                    type: string;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
                hash: {
                    type: string;
                    title: string;
                };
                host: {
                    type: string;
                    title: string;
                };
                hostname: {
                    type: string;
                    title: string;
                };
                href: {
                    type: string;
                    title: string;
                };
                origin: {
                    type: string;
                    title: string;
                };
                password: {
                    type: string;
                    title: string;
                };
                pathname: {
                    type: string;
                    title: string;
                };
                port: {
                    type: string;
                    title: string;
                };
                protocol: {
                    type: string;
                    title: string;
                };
                search: {
                    type: string;
                    title: string;
                };
                username: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        DocumentReadyState: {
            title: string;
            enum: string[];
            type: string;
        };
        DocumentTimeline: {
            title: string;
            type: string;
            properties: {
                currentTime: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string[];
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        CSSNumericValue: {
            title: string;
            type: string;
        };
        DocumentVisibilityState: {
            title: string;
            enum: string[];
            type: string;
        };
        FontFaceSet: {
            title: string;
            type: string;
            properties: {
                onloading: {
                    type: string[];
                    title: string;
                };
                onloadingdone: {
                    type: string[];
                    title: string;
                };
                onloadingerror: {
                    type: string[];
                    title: string;
                };
                ready: {
                    $ref: string;
                    title: string;
                };
                status: {
                    $ref: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                "__@toStringTag@16125": {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "Promise<FontFaceSet>": {
            title: string;
            type: string;
            properties: {
                "__@toStringTag@16125": {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        FontFaceSetLoadStatus: {
            title: string;
            enum: string[];
            type: string;
        };
        HTMLVideoElement: {
            title: string;
            type: string;
            properties: {
                disablePictureInPicture: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                onenterpictureinpicture: {
                    type: string[];
                    title: string;
                };
                onleavepictureinpicture: {
                    type: string[];
                    title: string;
                };
                playsInline: {
                    type: string;
                    title: string;
                };
                poster: {
                    type: string;
                    title: string;
                };
                videoHeight: {
                    type: string;
                    title: string;
                };
                videoWidth: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                autoplay: {
                    type: string;
                    title: string;
                };
                buffered: {
                    $ref: string;
                    title: string;
                };
                controls: {
                    type: string;
                    title: string;
                };
                crossOrigin: {
                    type: string[];
                    title: string;
                };
                currentSrc: {
                    type: string;
                    title: string;
                };
                currentTime: {
                    type: string;
                    title: string;
                };
                defaultMuted: {
                    type: string;
                    title: string;
                };
                defaultPlaybackRate: {
                    type: string;
                    title: string;
                };
                disableRemotePlayback: {
                    type: string;
                    title: string;
                };
                duration: {
                    type: string;
                    title: string;
                };
                ended: {
                    type: string;
                    title: string;
                };
                error: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loop: {
                    type: string;
                    title: string;
                };
                mediaKeys: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                muted: {
                    type: string;
                    title: string;
                };
                networkState: {
                    type: string;
                    title: string;
                };
                onencrypted: {
                    type: string[];
                    title: string;
                };
                onwaitingforkey: {
                    type: string[];
                    title: string;
                };
                paused: {
                    type: string;
                    title: string;
                };
                playbackRate: {
                    type: string;
                    title: string;
                };
                played: {
                    $ref: string;
                    title: string;
                };
                preload: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                preservesPitch: {
                    type: string;
                    title: string;
                };
                readyState: {
                    type: string;
                    title: string;
                };
                remote: {
                    $ref: string;
                    title: string;
                };
                seekable: {
                    $ref: string;
                    title: string;
                };
                seeking: {
                    type: string;
                    title: string;
                };
                sinkId: {
                    type: string;
                    title: string;
                };
                src: {
                    type: string;
                    title: string;
                };
                srcObject: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textTracks: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        onaddtrack: {
                            type: string[];
                            title: string;
                        };
                        onchange: {
                            type: string[];
                            title: string;
                        };
                        onremovetrack: {
                            type: string[];
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                volume: {
                    type: string;
                    title: string;
                };
                NETWORK_EMPTY: {
                    type: string;
                    const: number;
                    title: string;
                };
                NETWORK_IDLE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NETWORK_LOADING: {
                    type: string;
                    const: number;
                    title: string;
                };
                NETWORK_NO_SOURCE: {
                    type: string;
                    const: number;
                    title: string;
                };
                HAVE_NOTHING: {
                    type: string;
                    const: number;
                    title: string;
                };
                HAVE_METADATA: {
                    type: string;
                    const: number;
                    title: string;
                };
                HAVE_CURRENT_DATA: {
                    type: string;
                    const: number;
                    title: string;
                };
                HAVE_FUTURE_DATA: {
                    type: string;
                    const: number;
                    title: string;
                };
                HAVE_ENOUGH_DATA: {
                    type: string;
                    const: number;
                    title: string;
                };
                accessKey: {
                    type: string;
                    title: string;
                };
                accessKeyLabel: {
                    type: string;
                    title: string;
                };
                autocapitalize: {
                    type: string;
                    title: string;
                };
                dir: {
                    type: string;
                    title: string;
                };
                draggable: {
                    type: string;
                    title: string;
                };
                hidden: {
                    type: string;
                    title: string;
                };
                inert: {
                    type: string;
                    title: string;
                };
                innerText: {
                    type: string;
                    title: string;
                };
                lang: {
                    type: string;
                    title: string;
                };
                offsetHeight: {
                    type: string;
                    title: string;
                };
                offsetLeft: {
                    type: string;
                    title: string;
                };
                offsetParent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                offsetTop: {
                    type: string;
                    title: string;
                };
                offsetWidth: {
                    type: string;
                    title: string;
                };
                outerText: {
                    type: string;
                    title: string;
                };
                popover: {
                    type: string[];
                    title: string;
                };
                spellcheck: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                translate: {
                    type: string;
                    title: string;
                };
                attributes: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                classList: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                className: {
                    type: string;
                    title: string;
                };
                clientHeight: {
                    type: string;
                    title: string;
                };
                clientLeft: {
                    type: string;
                    title: string;
                };
                clientTop: {
                    type: string;
                    title: string;
                };
                clientWidth: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                localName: {
                    type: string;
                    title: string;
                };
                namespaceURI: {
                    type: string[];
                    title: string;
                };
                onfullscreenchange: {
                    type: string[];
                    title: string;
                };
                onfullscreenerror: {
                    type: string[];
                    title: string;
                };
                outerHTML: {
                    type: string;
                    title: string;
                };
                ownerDocument: {
                    $ref: string;
                    title: string;
                };
                part: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                prefix: {
                    type: string[];
                    title: string;
                };
                scrollHeight: {
                    type: string;
                    title: string;
                };
                scrollLeft: {
                    type: string;
                    title: string;
                };
                scrollTop: {
                    type: string;
                    title: string;
                };
                scrollWidth: {
                    type: string;
                    title: string;
                };
                shadowRoot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                slot: {
                    type: string;
                    title: string;
                };
                tagName: {
                    type: string;
                    title: string;
                };
                baseURI: {
                    type: string;
                    title: string;
                };
                childNodes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                firstChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                isConnected: {
                    type: string;
                    title: string;
                };
                lastChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nextSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                nodeName: {
                    type: string;
                    title: string;
                };
                nodeType: {
                    type: string;
                    title: string;
                };
                nodeValue: {
                    type: string[];
                    title: string;
                };
                parentElement: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                parentNode: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                textContent: {
                    type: string[];
                    title: string;
                };
                ELEMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ATTRIBUTE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                TEXT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                CDATA_SECTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_REFERENCE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                ENTITY_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                PROCESSING_INSTRUCTION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                COMMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_TYPE_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_FRAGMENT_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                NOTATION_NODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_DISCONNECTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_PRECEDING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_FOLLOWING: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINS: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_CONTAINED_BY: {
                    type: string;
                    const: number;
                    title: string;
                };
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {
                    type: string;
                    const: number;
                    title: string;
                };
                ariaAtomic: {
                    type: string[];
                    title: string;
                };
                ariaAutoComplete: {
                    type: string[];
                    title: string;
                };
                ariaBrailleLabel: {
                    type: string[];
                    title: string;
                };
                ariaBrailleRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaBusy: {
                    type: string[];
                    title: string;
                };
                ariaChecked: {
                    type: string[];
                    title: string;
                };
                ariaColCount: {
                    type: string[];
                    title: string;
                };
                ariaColIndex: {
                    type: string[];
                    title: string;
                };
                ariaColSpan: {
                    type: string[];
                    title: string;
                };
                ariaCurrent: {
                    type: string[];
                    title: string;
                };
                ariaDescription: {
                    type: string[];
                    title: string;
                };
                ariaDisabled: {
                    type: string[];
                    title: string;
                };
                ariaExpanded: {
                    type: string[];
                    title: string;
                };
                ariaHasPopup: {
                    type: string[];
                    title: string;
                };
                ariaHidden: {
                    type: string[];
                    title: string;
                };
                ariaInvalid: {
                    type: string[];
                    title: string;
                };
                ariaKeyShortcuts: {
                    type: string[];
                    title: string;
                };
                ariaLabel: {
                    type: string[];
                    title: string;
                };
                ariaLevel: {
                    type: string[];
                    title: string;
                };
                ariaLive: {
                    type: string[];
                    title: string;
                };
                ariaModal: {
                    type: string[];
                    title: string;
                };
                ariaMultiLine: {
                    type: string[];
                    title: string;
                };
                ariaMultiSelectable: {
                    type: string[];
                    title: string;
                };
                ariaOrientation: {
                    type: string[];
                    title: string;
                };
                ariaPlaceholder: {
                    type: string[];
                    title: string;
                };
                ariaPosInSet: {
                    type: string[];
                    title: string;
                };
                ariaPressed: {
                    type: string[];
                    title: string;
                };
                ariaReadOnly: {
                    type: string[];
                    title: string;
                };
                ariaRequired: {
                    type: string[];
                    title: string;
                };
                ariaRoleDescription: {
                    type: string[];
                    title: string;
                };
                ariaRowCount: {
                    type: string[];
                    title: string;
                };
                ariaRowIndex: {
                    type: string[];
                    title: string;
                };
                ariaRowSpan: {
                    type: string[];
                    title: string;
                };
                ariaSelected: {
                    type: string[];
                    title: string;
                };
                ariaSetSize: {
                    type: string[];
                    title: string;
                };
                ariaSort: {
                    type: string[];
                    title: string;
                };
                ariaValueMax: {
                    type: string[];
                    title: string;
                };
                ariaValueMin: {
                    type: string[];
                    title: string;
                };
                ariaValueNow: {
                    type: string[];
                    title: string;
                };
                ariaValueText: {
                    type: string[];
                    title: string;
                };
                role: {
                    type: string[];
                    title: string;
                };
                innerHTML: {
                    type: string;
                    title: string;
                };
                nextElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousElementSibling: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                childElementCount: {
                    type: string;
                    title: string;
                };
                children: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                firstElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                lastElementChild: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                assignedSlot: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                attributeStyleMap: {
                    $ref: string;
                    title: string;
                };
                style: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        accentColor: {
                            type: string;
                            title: string;
                        };
                        alignContent: {
                            type: string;
                            title: string;
                        };
                        alignItems: {
                            type: string;
                            title: string;
                        };
                        alignSelf: {
                            type: string;
                            title: string;
                        };
                        alignmentBaseline: {
                            type: string;
                            title: string;
                        };
                        all: {
                            type: string;
                            title: string;
                        };
                        animation: {
                            type: string;
                            title: string;
                        };
                        animationComposition: {
                            type: string;
                            title: string;
                        };
                        animationDelay: {
                            type: string;
                            title: string;
                        };
                        animationDirection: {
                            type: string;
                            title: string;
                        };
                        animationDuration: {
                            type: string;
                            title: string;
                        };
                        animationFillMode: {
                            type: string;
                            title: string;
                        };
                        animationIterationCount: {
                            type: string;
                            title: string;
                        };
                        animationName: {
                            type: string;
                            title: string;
                        };
                        animationPlayState: {
                            type: string;
                            title: string;
                        };
                        animationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        appearance: {
                            type: string;
                            title: string;
                        };
                        aspectRatio: {
                            type: string;
                            title: string;
                        };
                        backdropFilter: {
                            type: string;
                            title: string;
                        };
                        backfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        background: {
                            type: string;
                            title: string;
                        };
                        backgroundAttachment: {
                            type: string;
                            title: string;
                        };
                        backgroundBlendMode: {
                            type: string;
                            title: string;
                        };
                        backgroundClip: {
                            type: string;
                            title: string;
                        };
                        backgroundColor: {
                            type: string;
                            title: string;
                        };
                        backgroundImage: {
                            type: string;
                            title: string;
                        };
                        backgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        backgroundPosition: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionX: {
                            type: string;
                            title: string;
                        };
                        backgroundPositionY: {
                            type: string;
                            title: string;
                        };
                        backgroundRepeat: {
                            type: string;
                            title: string;
                        };
                        backgroundSize: {
                            type: string;
                            title: string;
                        };
                        baselineShift: {
                            type: string;
                            title: string;
                        };
                        baselineSource: {
                            type: string;
                            title: string;
                        };
                        blockSize: {
                            type: string;
                            title: string;
                        };
                        border: {
                            type: string;
                            title: string;
                        };
                        borderBlock: {
                            type: string;
                            title: string;
                        };
                        borderBlockColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEnd: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStart: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartColor: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderBlockStyle: {
                            type: string;
                            title: string;
                        };
                        borderBlockWidth: {
                            type: string;
                            title: string;
                        };
                        borderBottom: {
                            type: string;
                            title: string;
                        };
                        borderBottomColor: {
                            type: string;
                            title: string;
                        };
                        borderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderBottomStyle: {
                            type: string;
                            title: string;
                        };
                        borderBottomWidth: {
                            type: string;
                            title: string;
                        };
                        borderCollapse: {
                            type: string;
                            title: string;
                        };
                        borderColor: {
                            type: string;
                            title: string;
                        };
                        borderEndEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderEndStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderImage: {
                            type: string;
                            title: string;
                        };
                        borderImageOutset: {
                            type: string;
                            title: string;
                        };
                        borderImageRepeat: {
                            type: string;
                            title: string;
                        };
                        borderImageSlice: {
                            type: string;
                            title: string;
                        };
                        borderImageSource: {
                            type: string;
                            title: string;
                        };
                        borderImageWidth: {
                            type: string;
                            title: string;
                        };
                        borderInline: {
                            type: string;
                            title: string;
                        };
                        borderInlineColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEnd: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineEndWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStart: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartColor: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineStartWidth: {
                            type: string;
                            title: string;
                        };
                        borderInlineStyle: {
                            type: string;
                            title: string;
                        };
                        borderInlineWidth: {
                            type: string;
                            title: string;
                        };
                        borderLeft: {
                            type: string;
                            title: string;
                        };
                        borderLeftColor: {
                            type: string;
                            title: string;
                        };
                        borderLeftStyle: {
                            type: string;
                            title: string;
                        };
                        borderLeftWidth: {
                            type: string;
                            title: string;
                        };
                        borderRadius: {
                            type: string;
                            title: string;
                        };
                        borderRight: {
                            type: string;
                            title: string;
                        };
                        borderRightColor: {
                            type: string;
                            title: string;
                        };
                        borderRightStyle: {
                            type: string;
                            title: string;
                        };
                        borderRightWidth: {
                            type: string;
                            title: string;
                        };
                        borderSpacing: {
                            type: string;
                            title: string;
                        };
                        borderStartEndRadius: {
                            type: string;
                            title: string;
                        };
                        borderStartStartRadius: {
                            type: string;
                            title: string;
                        };
                        borderStyle: {
                            type: string;
                            title: string;
                        };
                        borderTop: {
                            type: string;
                            title: string;
                        };
                        borderTopColor: {
                            type: string;
                            title: string;
                        };
                        borderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        borderTopStyle: {
                            type: string;
                            title: string;
                        };
                        borderTopWidth: {
                            type: string;
                            title: string;
                        };
                        borderWidth: {
                            type: string;
                            title: string;
                        };
                        bottom: {
                            type: string;
                            title: string;
                        };
                        boxShadow: {
                            type: string;
                            title: string;
                        };
                        boxSizing: {
                            type: string;
                            title: string;
                        };
                        breakAfter: {
                            type: string;
                            title: string;
                        };
                        breakBefore: {
                            type: string;
                            title: string;
                        };
                        breakInside: {
                            type: string;
                            title: string;
                        };
                        captionSide: {
                            type: string;
                            title: string;
                        };
                        caretColor: {
                            type: string;
                            title: string;
                        };
                        clear: {
                            type: string;
                            title: string;
                        };
                        clip: {
                            type: string;
                            title: string;
                        };
                        clipPath: {
                            type: string;
                            title: string;
                        };
                        clipRule: {
                            type: string;
                            title: string;
                        };
                        color: {
                            type: string;
                            title: string;
                        };
                        colorInterpolation: {
                            type: string;
                            title: string;
                        };
                        colorInterpolationFilters: {
                            type: string;
                            title: string;
                        };
                        colorScheme: {
                            type: string;
                            title: string;
                        };
                        columnCount: {
                            type: string;
                            title: string;
                        };
                        columnFill: {
                            type: string;
                            title: string;
                        };
                        columnGap: {
                            type: string;
                            title: string;
                        };
                        columnRule: {
                            type: string;
                            title: string;
                        };
                        columnRuleColor: {
                            type: string;
                            title: string;
                        };
                        columnRuleStyle: {
                            type: string;
                            title: string;
                        };
                        columnRuleWidth: {
                            type: string;
                            title: string;
                        };
                        columnSpan: {
                            type: string;
                            title: string;
                        };
                        columnWidth: {
                            type: string;
                            title: string;
                        };
                        columns: {
                            type: string;
                            title: string;
                        };
                        contain: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicBlockSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicHeight: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicInlineSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicSize: {
                            type: string;
                            title: string;
                        };
                        containIntrinsicWidth: {
                            type: string;
                            title: string;
                        };
                        container: {
                            type: string;
                            title: string;
                        };
                        containerName: {
                            type: string;
                            title: string;
                        };
                        containerType: {
                            type: string;
                            title: string;
                        };
                        content: {
                            type: string;
                            title: string;
                        };
                        contentVisibility: {
                            type: string;
                            title: string;
                        };
                        counterIncrement: {
                            type: string;
                            title: string;
                        };
                        counterReset: {
                            type: string;
                            title: string;
                        };
                        counterSet: {
                            type: string;
                            title: string;
                        };
                        cssFloat: {
                            type: string;
                            title: string;
                        };
                        cssText: {
                            type: string;
                            title: string;
                        };
                        cursor: {
                            type: string;
                            title: string;
                        };
                        cx: {
                            type: string;
                            title: string;
                        };
                        cy: {
                            type: string;
                            title: string;
                        };
                        d: {
                            type: string;
                            title: string;
                        };
                        direction: {
                            type: string;
                            title: string;
                        };
                        display: {
                            type: string;
                            title: string;
                        };
                        dominantBaseline: {
                            type: string;
                            title: string;
                        };
                        emptyCells: {
                            type: string;
                            title: string;
                        };
                        fill: {
                            type: string;
                            title: string;
                        };
                        fillOpacity: {
                            type: string;
                            title: string;
                        };
                        fillRule: {
                            type: string;
                            title: string;
                        };
                        filter: {
                            type: string;
                            title: string;
                        };
                        flex: {
                            type: string;
                            title: string;
                        };
                        flexBasis: {
                            type: string;
                            title: string;
                        };
                        flexDirection: {
                            type: string;
                            title: string;
                        };
                        flexFlow: {
                            type: string;
                            title: string;
                        };
                        flexGrow: {
                            type: string;
                            title: string;
                        };
                        flexShrink: {
                            type: string;
                            title: string;
                        };
                        flexWrap: {
                            type: string;
                            title: string;
                        };
                        float: {
                            type: string;
                            title: string;
                        };
                        floodColor: {
                            type: string;
                            title: string;
                        };
                        floodOpacity: {
                            type: string;
                            title: string;
                        };
                        font: {
                            type: string;
                            title: string;
                        };
                        fontFamily: {
                            type: string;
                            title: string;
                        };
                        fontFeatureSettings: {
                            type: string;
                            title: string;
                        };
                        fontKerning: {
                            type: string;
                            title: string;
                        };
                        fontOpticalSizing: {
                            type: string;
                            title: string;
                        };
                        fontPalette: {
                            type: string;
                            title: string;
                        };
                        fontSize: {
                            type: string;
                            title: string;
                        };
                        fontSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        fontStretch: {
                            type: string;
                            title: string;
                        };
                        fontStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesis: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisSmallCaps: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisStyle: {
                            type: string;
                            title: string;
                        };
                        fontSynthesisWeight: {
                            type: string;
                            title: string;
                        };
                        fontVariant: {
                            type: string;
                            title: string;
                        };
                        fontVariantAlternates: {
                            type: string;
                            title: string;
                        };
                        fontVariantCaps: {
                            type: string;
                            title: string;
                        };
                        fontVariantEastAsian: {
                            type: string;
                            title: string;
                        };
                        fontVariantLigatures: {
                            type: string;
                            title: string;
                        };
                        fontVariantNumeric: {
                            type: string;
                            title: string;
                        };
                        fontVariantPosition: {
                            type: string;
                            title: string;
                        };
                        fontVariationSettings: {
                            type: string;
                            title: string;
                        };
                        fontWeight: {
                            type: string;
                            title: string;
                        };
                        forcedColorAdjust: {
                            type: string;
                            title: string;
                        };
                        gap: {
                            type: string;
                            title: string;
                        };
                        grid: {
                            type: string;
                            title: string;
                        };
                        gridArea: {
                            type: string;
                            title: string;
                        };
                        gridAutoColumns: {
                            type: string;
                            title: string;
                        };
                        gridAutoFlow: {
                            type: string;
                            title: string;
                        };
                        gridAutoRows: {
                            type: string;
                            title: string;
                        };
                        gridColumn: {
                            type: string;
                            title: string;
                        };
                        gridColumnEnd: {
                            type: string;
                            title: string;
                        };
                        gridColumnGap: {
                            type: string;
                            title: string;
                        };
                        gridColumnStart: {
                            type: string;
                            title: string;
                        };
                        gridGap: {
                            type: string;
                            title: string;
                        };
                        gridRow: {
                            type: string;
                            title: string;
                        };
                        gridRowEnd: {
                            type: string;
                            title: string;
                        };
                        gridRowGap: {
                            type: string;
                            title: string;
                        };
                        gridRowStart: {
                            type: string;
                            title: string;
                        };
                        gridTemplate: {
                            type: string;
                            title: string;
                        };
                        gridTemplateAreas: {
                            type: string;
                            title: string;
                        };
                        gridTemplateColumns: {
                            type: string;
                            title: string;
                        };
                        gridTemplateRows: {
                            type: string;
                            title: string;
                        };
                        height: {
                            type: string;
                            title: string;
                        };
                        hyphenateCharacter: {
                            type: string;
                            title: string;
                        };
                        hyphens: {
                            type: string;
                            title: string;
                        };
                        imageOrientation: {
                            type: string;
                            title: string;
                        };
                        imageRendering: {
                            type: string;
                            title: string;
                        };
                        inlineSize: {
                            type: string;
                            title: string;
                        };
                        inset: {
                            type: string;
                            title: string;
                        };
                        insetBlock: {
                            type: string;
                            title: string;
                        };
                        insetBlockEnd: {
                            type: string;
                            title: string;
                        };
                        insetBlockStart: {
                            type: string;
                            title: string;
                        };
                        insetInline: {
                            type: string;
                            title: string;
                        };
                        insetInlineEnd: {
                            type: string;
                            title: string;
                        };
                        insetInlineStart: {
                            type: string;
                            title: string;
                        };
                        isolation: {
                            type: string;
                            title: string;
                        };
                        justifyContent: {
                            type: string;
                            title: string;
                        };
                        justifyItems: {
                            type: string;
                            title: string;
                        };
                        justifySelf: {
                            type: string;
                            title: string;
                        };
                        left: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        letterSpacing: {
                            type: string;
                            title: string;
                        };
                        lightingColor: {
                            type: string;
                            title: string;
                        };
                        lineBreak: {
                            type: string;
                            title: string;
                        };
                        lineHeight: {
                            type: string;
                            title: string;
                        };
                        listStyle: {
                            type: string;
                            title: string;
                        };
                        listStyleImage: {
                            type: string;
                            title: string;
                        };
                        listStylePosition: {
                            type: string;
                            title: string;
                        };
                        listStyleType: {
                            type: string;
                            title: string;
                        };
                        margin: {
                            type: string;
                            title: string;
                        };
                        marginBlock: {
                            type: string;
                            title: string;
                        };
                        marginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        marginBlockStart: {
                            type: string;
                            title: string;
                        };
                        marginBottom: {
                            type: string;
                            title: string;
                        };
                        marginInline: {
                            type: string;
                            title: string;
                        };
                        marginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        marginInlineStart: {
                            type: string;
                            title: string;
                        };
                        marginLeft: {
                            type: string;
                            title: string;
                        };
                        marginRight: {
                            type: string;
                            title: string;
                        };
                        marginTop: {
                            type: string;
                            title: string;
                        };
                        marker: {
                            type: string;
                            title: string;
                        };
                        markerEnd: {
                            type: string;
                            title: string;
                        };
                        markerMid: {
                            type: string;
                            title: string;
                        };
                        markerStart: {
                            type: string;
                            title: string;
                        };
                        mask: {
                            type: string;
                            title: string;
                        };
                        maskClip: {
                            type: string;
                            title: string;
                        };
                        maskComposite: {
                            type: string;
                            title: string;
                        };
                        maskImage: {
                            type: string;
                            title: string;
                        };
                        maskMode: {
                            type: string;
                            title: string;
                        };
                        maskOrigin: {
                            type: string;
                            title: string;
                        };
                        maskPosition: {
                            type: string;
                            title: string;
                        };
                        maskRepeat: {
                            type: string;
                            title: string;
                        };
                        maskSize: {
                            type: string;
                            title: string;
                        };
                        maskType: {
                            type: string;
                            title: string;
                        };
                        mathDepth: {
                            type: string;
                            title: string;
                        };
                        mathStyle: {
                            type: string;
                            title: string;
                        };
                        maxBlockSize: {
                            type: string;
                            title: string;
                        };
                        maxHeight: {
                            type: string;
                            title: string;
                        };
                        maxInlineSize: {
                            type: string;
                            title: string;
                        };
                        maxWidth: {
                            type: string;
                            title: string;
                        };
                        minBlockSize: {
                            type: string;
                            title: string;
                        };
                        minHeight: {
                            type: string;
                            title: string;
                        };
                        minInlineSize: {
                            type: string;
                            title: string;
                        };
                        minWidth: {
                            type: string;
                            title: string;
                        };
                        mixBlendMode: {
                            type: string;
                            title: string;
                        };
                        objectFit: {
                            type: string;
                            title: string;
                        };
                        objectPosition: {
                            type: string;
                            title: string;
                        };
                        offset: {
                            type: string;
                            title: string;
                        };
                        offsetAnchor: {
                            type: string;
                            title: string;
                        };
                        offsetDistance: {
                            type: string;
                            title: string;
                        };
                        offsetPath: {
                            type: string;
                            title: string;
                        };
                        offsetPosition: {
                            type: string;
                            title: string;
                        };
                        offsetRotate: {
                            type: string;
                            title: string;
                        };
                        opacity: {
                            type: string;
                            title: string;
                        };
                        order: {
                            type: string;
                            title: string;
                        };
                        orphans: {
                            type: string;
                            title: string;
                        };
                        outline: {
                            type: string;
                            title: string;
                        };
                        outlineColor: {
                            type: string;
                            title: string;
                        };
                        outlineOffset: {
                            type: string;
                            title: string;
                        };
                        outlineStyle: {
                            type: string;
                            title: string;
                        };
                        outlineWidth: {
                            type: string;
                            title: string;
                        };
                        overflow: {
                            type: string;
                            title: string;
                        };
                        overflowAnchor: {
                            type: string;
                            title: string;
                        };
                        overflowClipMargin: {
                            type: string;
                            title: string;
                        };
                        overflowWrap: {
                            type: string;
                            title: string;
                        };
                        overflowX: {
                            type: string;
                            title: string;
                        };
                        overflowY: {
                            type: string;
                            title: string;
                        };
                        overscrollBehavior: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorBlock: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorInline: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorX: {
                            type: string;
                            title: string;
                        };
                        overscrollBehaviorY: {
                            type: string;
                            title: string;
                        };
                        padding: {
                            type: string;
                            title: string;
                        };
                        paddingBlock: {
                            type: string;
                            title: string;
                        };
                        paddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        paddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        paddingBottom: {
                            type: string;
                            title: string;
                        };
                        paddingInline: {
                            type: string;
                            title: string;
                        };
                        paddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        paddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        paddingLeft: {
                            type: string;
                            title: string;
                        };
                        paddingRight: {
                            type: string;
                            title: string;
                        };
                        paddingTop: {
                            type: string;
                            title: string;
                        };
                        page: {
                            type: string;
                            title: string;
                        };
                        pageBreakAfter: {
                            type: string;
                            title: string;
                        };
                        pageBreakBefore: {
                            type: string;
                            title: string;
                        };
                        pageBreakInside: {
                            type: string;
                            title: string;
                        };
                        paintOrder: {
                            type: string;
                            title: string;
                        };
                        parentRule: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            title: string;
                        };
                        perspective: {
                            type: string;
                            title: string;
                        };
                        perspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        placeContent: {
                            type: string;
                            title: string;
                        };
                        placeItems: {
                            type: string;
                            title: string;
                        };
                        placeSelf: {
                            type: string;
                            title: string;
                        };
                        pointerEvents: {
                            type: string;
                            title: string;
                        };
                        position: {
                            type: string;
                            title: string;
                        };
                        printColorAdjust: {
                            type: string;
                            title: string;
                        };
                        quotes: {
                            type: string;
                            title: string;
                        };
                        r: {
                            type: string;
                            title: string;
                        };
                        resize: {
                            type: string;
                            title: string;
                        };
                        right: {
                            type: string;
                            title: string;
                        };
                        rotate: {
                            type: string;
                            title: string;
                        };
                        rowGap: {
                            type: string;
                            title: string;
                        };
                        rubyPosition: {
                            type: string;
                            title: string;
                        };
                        rx: {
                            type: string;
                            title: string;
                        };
                        ry: {
                            type: string;
                            title: string;
                        };
                        scale: {
                            type: string;
                            title: string;
                        };
                        scrollBehavior: {
                            type: string;
                            title: string;
                        };
                        scrollMargin: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlock: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginBottom: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInline: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollMarginInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollMarginLeft: {
                            type: string;
                            title: string;
                        };
                        scrollMarginRight: {
                            type: string;
                            title: string;
                        };
                        scrollMarginTop: {
                            type: string;
                            title: string;
                        };
                        scrollPadding: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlock: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBlockStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingBottom: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInline: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineEnd: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingInlineStart: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingLeft: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingRight: {
                            type: string;
                            title: string;
                        };
                        scrollPaddingTop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapAlign: {
                            type: string;
                            title: string;
                        };
                        scrollSnapStop: {
                            type: string;
                            title: string;
                        };
                        scrollSnapType: {
                            type: string;
                            title: string;
                        };
                        scrollbarColor: {
                            type: string;
                            title: string;
                        };
                        scrollbarGutter: {
                            type: string;
                            title: string;
                        };
                        scrollbarWidth: {
                            type: string;
                            title: string;
                        };
                        shapeImageThreshold: {
                            type: string;
                            title: string;
                        };
                        shapeMargin: {
                            type: string;
                            title: string;
                        };
                        shapeOutside: {
                            type: string;
                            title: string;
                        };
                        shapeRendering: {
                            type: string;
                            title: string;
                        };
                        stopColor: {
                            type: string;
                            title: string;
                        };
                        stopOpacity: {
                            type: string;
                            title: string;
                        };
                        stroke: {
                            type: string;
                            title: string;
                        };
                        strokeDasharray: {
                            type: string;
                            title: string;
                        };
                        strokeDashoffset: {
                            type: string;
                            title: string;
                        };
                        strokeLinecap: {
                            type: string;
                            title: string;
                        };
                        strokeLinejoin: {
                            type: string;
                            title: string;
                        };
                        strokeMiterlimit: {
                            type: string;
                            title: string;
                        };
                        strokeOpacity: {
                            type: string;
                            title: string;
                        };
                        strokeWidth: {
                            type: string;
                            title: string;
                        };
                        tabSize: {
                            type: string;
                            title: string;
                        };
                        tableLayout: {
                            type: string;
                            title: string;
                        };
                        textAlign: {
                            type: string;
                            title: string;
                        };
                        textAlignLast: {
                            type: string;
                            title: string;
                        };
                        textAnchor: {
                            type: string;
                            title: string;
                        };
                        textCombineUpright: {
                            type: string;
                            title: string;
                        };
                        textDecoration: {
                            type: string;
                            title: string;
                        };
                        textDecorationColor: {
                            type: string;
                            title: string;
                        };
                        textDecorationLine: {
                            type: string;
                            title: string;
                        };
                        textDecorationSkipInk: {
                            type: string;
                            title: string;
                        };
                        textDecorationStyle: {
                            type: string;
                            title: string;
                        };
                        textDecorationThickness: {
                            type: string;
                            title: string;
                        };
                        textEmphasis: {
                            type: string;
                            title: string;
                        };
                        textEmphasisColor: {
                            type: string;
                            title: string;
                        };
                        textEmphasisPosition: {
                            type: string;
                            title: string;
                        };
                        textEmphasisStyle: {
                            type: string;
                            title: string;
                        };
                        textIndent: {
                            type: string;
                            title: string;
                        };
                        textOrientation: {
                            type: string;
                            title: string;
                        };
                        textOverflow: {
                            type: string;
                            title: string;
                        };
                        textRendering: {
                            type: string;
                            title: string;
                        };
                        textShadow: {
                            type: string;
                            title: string;
                        };
                        textTransform: {
                            type: string;
                            title: string;
                        };
                        textUnderlineOffset: {
                            type: string;
                            title: string;
                        };
                        textUnderlinePosition: {
                            type: string;
                            title: string;
                        };
                        textWrap: {
                            type: string;
                            title: string;
                        };
                        textWrapMode: {
                            type: string;
                            title: string;
                        };
                        textWrapStyle: {
                            type: string;
                            title: string;
                        };
                        top: {
                            type: string;
                            title: string;
                        };
                        touchAction: {
                            type: string;
                            title: string;
                        };
                        transform: {
                            type: string;
                            title: string;
                        };
                        transformBox: {
                            type: string;
                            title: string;
                        };
                        transformOrigin: {
                            type: string;
                            title: string;
                        };
                        transformStyle: {
                            type: string;
                            title: string;
                        };
                        transition: {
                            type: string;
                            title: string;
                        };
                        transitionBehavior: {
                            type: string;
                            title: string;
                        };
                        transitionDelay: {
                            type: string;
                            title: string;
                        };
                        transitionDuration: {
                            type: string;
                            title: string;
                        };
                        transitionProperty: {
                            type: string;
                            title: string;
                        };
                        transitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        translate: {
                            type: string;
                            title: string;
                        };
                        unicodeBidi: {
                            type: string;
                            title: string;
                        };
                        userSelect: {
                            type: string;
                            title: string;
                        };
                        vectorEffect: {
                            type: string;
                            title: string;
                        };
                        verticalAlign: {
                            type: string;
                            title: string;
                        };
                        visibility: {
                            type: string;
                            title: string;
                        };
                        webkitAlignContent: {
                            type: string;
                            title: string;
                        };
                        webkitAlignItems: {
                            type: string;
                            title: string;
                        };
                        webkitAlignSelf: {
                            type: string;
                            title: string;
                        };
                        webkitAnimation: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDelay: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDirection: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationDuration: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationFillMode: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationIterationCount: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationName: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationPlayState: {
                            type: string;
                            title: string;
                        };
                        webkitAnimationTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitAppearance: {
                            type: string;
                            title: string;
                        };
                        webkitBackfaceVisibility: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundClip: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitBackgroundSize: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderBottomRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopLeftRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBorderTopRightRadius: {
                            type: string;
                            title: string;
                        };
                        webkitBoxAlign: {
                            type: string;
                            title: string;
                        };
                        webkitBoxFlex: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrdinalGroup: {
                            type: string;
                            title: string;
                        };
                        webkitBoxOrient: {
                            type: string;
                            title: string;
                        };
                        webkitBoxPack: {
                            type: string;
                            title: string;
                        };
                        webkitBoxShadow: {
                            type: string;
                            title: string;
                        };
                        webkitBoxSizing: {
                            type: string;
                            title: string;
                        };
                        webkitFilter: {
                            type: string;
                            title: string;
                        };
                        webkitFlex: {
                            type: string;
                            title: string;
                        };
                        webkitFlexBasis: {
                            type: string;
                            title: string;
                        };
                        webkitFlexDirection: {
                            type: string;
                            title: string;
                        };
                        webkitFlexFlow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexGrow: {
                            type: string;
                            title: string;
                        };
                        webkitFlexShrink: {
                            type: string;
                            title: string;
                        };
                        webkitFlexWrap: {
                            type: string;
                            title: string;
                        };
                        webkitJustifyContent: {
                            type: string;
                            title: string;
                        };
                        webkitLineClamp: {
                            type: string;
                            title: string;
                        };
                        webkitMask: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageOutset: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSlice: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageSource: {
                            type: string;
                            title: string;
                        };
                        webkitMaskBoxImageWidth: {
                            type: string;
                            title: string;
                        };
                        webkitMaskClip: {
                            type: string;
                            title: string;
                        };
                        webkitMaskComposite: {
                            type: string;
                            title: string;
                        };
                        webkitMaskImage: {
                            type: string;
                            title: string;
                        };
                        webkitMaskOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitMaskPosition: {
                            type: string;
                            title: string;
                        };
                        webkitMaskRepeat: {
                            type: string;
                            title: string;
                        };
                        webkitMaskSize: {
                            type: string;
                            title: string;
                        };
                        webkitOrder: {
                            type: string;
                            title: string;
                        };
                        webkitPerspective: {
                            type: string;
                            title: string;
                        };
                        webkitPerspectiveOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTextFillColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextSizeAdjust: {
                            type: string;
                            title: string;
                        };
                        webkitTextStroke: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeColor: {
                            type: string;
                            title: string;
                        };
                        webkitTextStrokeWidth: {
                            type: string;
                            title: string;
                        };
                        webkitTransform: {
                            type: string;
                            title: string;
                        };
                        webkitTransformOrigin: {
                            type: string;
                            title: string;
                        };
                        webkitTransformStyle: {
                            type: string;
                            title: string;
                        };
                        webkitTransition: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDelay: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionDuration: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionProperty: {
                            type: string;
                            title: string;
                        };
                        webkitTransitionTimingFunction: {
                            type: string;
                            title: string;
                        };
                        webkitUserSelect: {
                            type: string;
                            title: string;
                        };
                        whiteSpace: {
                            type: string;
                            title: string;
                        };
                        whiteSpaceCollapse: {
                            type: string;
                            title: string;
                        };
                        widows: {
                            type: string;
                            title: string;
                        };
                        width: {
                            type: string;
                            title: string;
                        };
                        willChange: {
                            type: string;
                            title: string;
                        };
                        wordBreak: {
                            type: string;
                            title: string;
                        };
                        wordSpacing: {
                            type: string;
                            title: string;
                        };
                        wordWrap: {
                            type: string;
                            title: string;
                        };
                        writingMode: {
                            type: string;
                            title: string;
                        };
                        x: {
                            type: string;
                            title: string;
                        };
                        y: {
                            type: string;
                            title: string;
                        };
                        zIndex: {
                            type: string;
                            title: string;
                        };
                        zoom: {
                            type: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                contentEditable: {
                    type: string;
                    title: string;
                };
                enterKeyHint: {
                    type: string;
                    title: string;
                };
                inputMode: {
                    type: string;
                    title: string;
                };
                isContentEditable: {
                    type: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onanimationcancel: {
                    type: string[];
                    title: string;
                };
                onanimationend: {
                    type: string[];
                    title: string;
                };
                onanimationiteration: {
                    type: string[];
                    title: string;
                };
                onanimationstart: {
                    type: string[];
                    title: string;
                };
                onauxclick: {
                    type: string[];
                    title: string;
                };
                onbeforeinput: {
                    type: string[];
                    title: string;
                };
                onbeforetoggle: {
                    type: string[];
                    title: string;
                };
                onblur: {
                    type: string[];
                    title: string;
                };
                oncancel: {
                    type: string[];
                    title: string;
                };
                oncanplay: {
                    type: string[];
                    title: string;
                };
                oncanplaythrough: {
                    type: string[];
                    title: string;
                };
                onchange: {
                    type: string[];
                    title: string;
                };
                onclick: {
                    type: string[];
                    title: string;
                };
                onclose: {
                    type: string[];
                    title: string;
                };
                oncontextmenu: {
                    type: string[];
                    title: string;
                };
                oncopy: {
                    type: string[];
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
                oncut: {
                    type: string[];
                    title: string;
                };
                ondblclick: {
                    type: string[];
                    title: string;
                };
                ondrag: {
                    type: string[];
                    title: string;
                };
                ondragend: {
                    type: string[];
                    title: string;
                };
                ondragenter: {
                    type: string[];
                    title: string;
                };
                ondragleave: {
                    type: string[];
                    title: string;
                };
                ondragover: {
                    type: string[];
                    title: string;
                };
                ondragstart: {
                    type: string[];
                    title: string;
                };
                ondrop: {
                    type: string[];
                    title: string;
                };
                ondurationchange: {
                    type: string[];
                    title: string;
                };
                onemptied: {
                    type: string[];
                    title: string;
                };
                onended: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    $ref: string;
                    title: string;
                };
                onfocus: {
                    type: string[];
                    title: string;
                };
                onformdata: {
                    type: string[];
                    title: string;
                };
                ongotpointercapture: {
                    type: string[];
                    title: string;
                };
                oninput: {
                    type: string[];
                    title: string;
                };
                oninvalid: {
                    type: string[];
                    title: string;
                };
                onkeydown: {
                    type: string[];
                    title: string;
                };
                onkeypress: {
                    type: string[];
                    title: string;
                };
                onkeyup: {
                    type: string[];
                    title: string;
                };
                onload: {
                    type: string[];
                    title: string;
                };
                onloadeddata: {
                    type: string[];
                    title: string;
                };
                onloadedmetadata: {
                    type: string[];
                    title: string;
                };
                onloadstart: {
                    type: string[];
                    title: string;
                };
                onlostpointercapture: {
                    type: string[];
                    title: string;
                };
                onmousedown: {
                    type: string[];
                    title: string;
                };
                onmouseenter: {
                    type: string[];
                    title: string;
                };
                onmouseleave: {
                    type: string[];
                    title: string;
                };
                onmousemove: {
                    type: string[];
                    title: string;
                };
                onmouseout: {
                    type: string[];
                    title: string;
                };
                onmouseover: {
                    type: string[];
                    title: string;
                };
                onmouseup: {
                    type: string[];
                    title: string;
                };
                onpaste: {
                    type: string[];
                    title: string;
                };
                onpause: {
                    type: string[];
                    title: string;
                };
                onplay: {
                    type: string[];
                    title: string;
                };
                onplaying: {
                    type: string[];
                    title: string;
                };
                onpointercancel: {
                    type: string[];
                    title: string;
                };
                onpointerdown: {
                    type: string[];
                    title: string;
                };
                onpointerenter: {
                    type: string[];
                    title: string;
                };
                onpointerleave: {
                    type: string[];
                    title: string;
                };
                onpointermove: {
                    type: string[];
                    title: string;
                };
                onpointerout: {
                    type: string[];
                    title: string;
                };
                onpointerover: {
                    type: string[];
                    title: string;
                };
                onpointerup: {
                    type: string[];
                    title: string;
                };
                onprogress: {
                    type: string[];
                    title: string;
                };
                onratechange: {
                    type: string[];
                    title: string;
                };
                onreset: {
                    type: string[];
                    title: string;
                };
                onresize: {
                    type: string[];
                    title: string;
                };
                onscroll: {
                    type: string[];
                    title: string;
                };
                onscrollend: {
                    type: string[];
                    title: string;
                };
                onsecuritypolicyviolation: {
                    type: string[];
                    title: string;
                };
                onseeked: {
                    type: string[];
                    title: string;
                };
                onseeking: {
                    type: string[];
                    title: string;
                };
                onselect: {
                    type: string[];
                    title: string;
                };
                onselectionchange: {
                    type: string[];
                    title: string;
                };
                onselectstart: {
                    type: string[];
                    title: string;
                };
                onslotchange: {
                    type: string[];
                    title: string;
                };
                onstalled: {
                    type: string[];
                    title: string;
                };
                onsubmit: {
                    type: string[];
                    title: string;
                };
                onsuspend: {
                    type: string[];
                    title: string;
                };
                ontimeupdate: {
                    type: string[];
                    title: string;
                };
                ontoggle: {
                    type: string[];
                    title: string;
                };
                ontouchcancel: {
                    type: string[];
                    title: string;
                };
                ontouchend: {
                    type: string[];
                    title: string;
                };
                ontouchmove: {
                    type: string[];
                    title: string;
                };
                ontouchstart: {
                    type: string[];
                    title: string;
                };
                ontransitioncancel: {
                    type: string[];
                    title: string;
                };
                ontransitionend: {
                    type: string[];
                    title: string;
                };
                ontransitionrun: {
                    type: string[];
                    title: string;
                };
                ontransitionstart: {
                    type: string[];
                    title: string;
                };
                onvolumechange: {
                    type: string[];
                    title: string;
                };
                onwaiting: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationend: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationiteration: {
                    type: string[];
                    title: string;
                };
                onwebkitanimationstart: {
                    type: string[];
                    title: string;
                };
                onwebkittransitionend: {
                    type: string[];
                    title: string;
                };
                onwheel: {
                    type: string[];
                    title: string;
                };
                autofocus: {
                    type: string;
                    title: string;
                };
                dataset: {
                    $ref: string;
                    title: string;
                };
                nonce: {
                    type: string;
                    title: string;
                };
                tabIndex: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        TimeRanges: {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        MediaError: {
            title: string;
            type: string;
            properties: {
                code: {
                    type: string;
                    title: string;
                };
                message: {
                    type: string;
                    title: string;
                };
                MEDIA_ERR_ABORTED: {
                    type: string;
                    const: number;
                    title: string;
                };
                MEDIA_ERR_NETWORK: {
                    type: string;
                    const: number;
                    title: string;
                };
                MEDIA_ERR_DECODE: {
                    type: string;
                    const: number;
                    title: string;
                };
                MEDIA_ERR_SRC_NOT_SUPPORTED: {
                    type: string;
                    const: number;
                    title: string;
                };
            };
            required: string[];
        };
        MediaKeys: {
            title: string;
            type: string;
        };
        RemotePlayback: {
            title: string;
            type: string;
            properties: {
                onconnect: {
                    type: string[];
                    title: string;
                };
                onconnecting: {
                    type: string[];
                    title: string;
                };
                ondisconnect: {
                    type: string[];
                    title: string;
                };
                state: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        RemotePlaybackState: {
            title: string;
            enum: string[];
            type: string;
        };
        Blob: {
            title: string;
            type: string;
            properties: {
                size: {
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        MediaSource: {
            title: string;
            type: string;
            properties: {
                activeSourceBuffers: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        onaddsourcebuffer: {
                            type: string[];
                            title: string;
                        };
                        onremovesourcebuffer: {
                            type: string[];
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                duration: {
                    type: string;
                    title: string;
                };
                onsourceclose: {
                    type: string[];
                    title: string;
                };
                onsourceended: {
                    type: string[];
                    title: string;
                };
                onsourceopen: {
                    type: string[];
                    title: string;
                };
                readyState: {
                    $ref: string;
                    title: string;
                };
                sourceBuffers: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        length: {
                            type: string;
                            title: string;
                        };
                        onaddsourcebuffer: {
                            type: string[];
                            title: string;
                        };
                        onremovesourcebuffer: {
                            type: string[];
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
            };
            required: string[];
        };
        SourceBuffer: {
            title: string;
            type: string;
            properties: {
                appendWindowEnd: {
                    type: string;
                    title: string;
                };
                appendWindowStart: {
                    type: string;
                    title: string;
                };
                buffered: {
                    $ref: string;
                    title: string;
                };
                mode: {
                    $ref: string;
                    title: string;
                };
                onabort: {
                    type: string[];
                    title: string;
                };
                onerror: {
                    type: string[];
                    title: string;
                };
                onupdate: {
                    type: string[];
                    title: string;
                };
                onupdateend: {
                    type: string[];
                    title: string;
                };
                onupdatestart: {
                    type: string[];
                    title: string;
                };
                timestampOffset: {
                    type: string;
                    title: string;
                };
                updating: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        AppendMode: {
            title: string;
            enum: string[];
            type: string;
        };
        ReadyState: {
            title: string;
            enum: string[];
            type: string;
        };
        MediaStream: {
            title: string;
            type: string;
            properties: {
                active: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                onaddtrack: {
                    type: string[];
                    title: string;
                };
                onremovetrack: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        TextTrack: {
            title: string;
            type: string;
            properties: {
                activeCues: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            length: {
                                type: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                cues: {
                    anyOf: ({
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^[0-9]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            length: {
                                type: string;
                                title: string;
                            };
                        };
                        required: string[];
                    } | {
                        type: string;
                        additionalProperties?: undefined;
                        patternProperties?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                inBandMetadataTrackDispatchType: {
                    type: string;
                    title: string;
                };
                kind: {
                    $ref: string;
                    title: string;
                };
                label: {
                    type: string;
                    title: string;
                };
                language: {
                    type: string;
                    title: string;
                };
                mode: {
                    $ref: string;
                    title: string;
                };
                oncuechange: {
                    type: string[];
                    title: string;
                };
            };
            required: string[];
        };
        TextTrackCue: {
            title: string;
            type: string;
            properties: {
                endTime: {
                    type: string;
                    title: string;
                };
                id: {
                    type: string;
                    title: string;
                };
                onenter: {
                    type: string[];
                    title: string;
                };
                onexit: {
                    type: string[];
                    title: string;
                };
                pauseOnExit: {
                    type: string;
                    title: string;
                };
                startTime: {
                    type: string;
                    title: string;
                };
                track: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        TextTrackKind: {
            title: string;
            enum: string[];
            type: string;
        };
        TextTrackMode: {
            title: string;
            enum: string[];
            type: string;
        };
        ImageData: {
            title: string;
            type: string;
            properties: {
                colorSpace: {
                    $ref: string;
                    title: string;
                };
                data: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        BYTES_PER_ELEMENT: {
                            type: string;
                            title: string;
                        };
                        buffer: {
                            $ref: string;
                            title: string;
                        };
                        byteLength: {
                            type: string;
                            title: string;
                        };
                        byteOffset: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        "__@toStringTag@16125": {
                            type: string;
                            const: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        PredefinedColorSpace: {
            title: string;
            enum: string[];
            type: string;
        };
        "__esri.CompressedTextureData": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                encoding: {
                    type: string;
                    const: string;
                    title: string;
                };
                data: {
                    type: string;
                    additionalProperties: boolean;
                    patternProperties: {
                        "^[0-9]+$": {
                            type: string;
                        };
                    };
                    properties: {
                        BYTES_PER_ELEMENT: {
                            type: string;
                            title: string;
                        };
                        buffer: {
                            $ref: string;
                            title: string;
                        };
                        byteLength: {
                            type: string;
                            title: string;
                        };
                        byteOffset: {
                            type: string;
                            title: string;
                        };
                        length: {
                            type: string;
                            title: string;
                        };
                        "__@toStringTag@16125": {
                            type: string;
                            const: string;
                            title: string;
                        };
                    };
                    required: string[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SeparableWrapModes": {
            description: string;
            title: string;
            type: string;
            properties: {
                horizontal: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                vertical: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshTextureTransform": {
            title: string;
            type: string;
            properties: {
                offset: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                rotation: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                scale: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshMaterialMetallicRoughness": {
            title: string;
            type: string;
            properties: {
                metallic: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                roughness: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                emissiveColor: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                emissiveTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                emissiveTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                metallicRoughnessTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                occlusionTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                occlusionTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                alphaCutoff: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                alphaMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                doubleSided: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                colorTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                colorTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                normalTexture: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                normalTextureTransform: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshTransform": {
            title: string;
            type: string;
            properties: {
                rotationAngle: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                rotationAxis: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                scale: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                translation: {
                    description: string;
                    default: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshGeoreferencedVertexSpace": {
            title: string;
            type: string;
            properties: {
                origin: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshLocalVertexSpace": {
            title: string;
            type: string;
            properties: {
                origin: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TimeExtent": {
            title: string;
            type: string;
            properties: {
                end: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                start: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureReductionBinning": {
            title: string;
            type: string;
            properties: {
                fixedBinLevel: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AggregateField": {
            title: string;
            type: string;
            properties: {
                alias: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                isAutoGenerated: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                onStatisticField: {
                    description: string;
                    type: string;
                    title: string;
                };
                statisticType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                onStatisticExpression: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.supportExpressionInfo": {
            title: string;
            type: string;
            properties: {
                expression: {
                    description: string;
                    type: string;
                    title: string;
                };
                returnType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LabelClass": {
            title: string;
            type: string;
            properties: {
                allowOverrun: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                deconflictionStrategy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                labelExpression: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                labelPlacement: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                labelPosition: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                repeatLabel: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                useCodedValues: {
                    description: string;
                    type: string;
                    title: string;
                };
                where: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                labelExpressionInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                repeatLabelDistance: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                symbol: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LabelClassLabelExpressionInfo": {
            title: string;
            type: string;
            properties: {
                expression: {
                    type: string[];
                    title: string;
                };
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.LabelSymbol3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                callout: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                symbolLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                verticalOffset: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                styleOrigin: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Callout3D": {
            title: string;
            type: string;
            properties: {
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.TextSymbol3DLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Symbol3DVerticalOffset": {
            title: string;
            type: string;
            properties: {
                maxWorldLength: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minWorldLength: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                screenLength: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.StyleOrigin": {
            title: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                styleName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                styleUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                portal: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Portal": {
            title: string;
            type: string;
            properties: {
                access: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                allSSL: {
                    description: string;
                    type: string;
                    title: string;
                };
                authMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                authorizedCrossOriginDomains: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                basemapGalleryGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                basemapGalleryGroupQuery3D: {
                    description: string;
                    type: string[];
                    title: string;
                };
                bingKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                canListApps: {
                    description: string;
                    type: string;
                    title: string;
                };
                canListData: {
                    description: string;
                    type: string;
                    title: string;
                };
                canListPreProvisionedItems: {
                    description: string;
                    type: string;
                    title: string;
                };
                canProvisionDirectPurchase: {
                    description: string;
                    type: string;
                    title: string;
                };
                canSearchPublic: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                canShareBingPublic: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                canSharePublic: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                canSignInArcGIS: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                canSignInIDP: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                colorSetsGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                commentsEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                culture: {
                    description: string;
                    type: string[];
                    title: string;
                };
                customBaseUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                default3DBasemapQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                defaultBasemap: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultDevBasemap: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultVectorBasemap: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                devBasemapGalleryGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                eueiEnabled: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                featuredGroups: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                featuredItemsGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                galleryTemplatesGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                hasCategorySchema: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                hasClassificationSchema: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                helperServices: {
                    description: string;
                    title: string;
                };
                homePageFeaturedContent: {
                    description: string;
                    type: string[];
                    title: string;
                };
                homePageFeaturedContentCount: {
                    description: string;
                    type: string[];
                    title: string;
                };
                httpPort: {
                    description: string;
                    type: string[];
                    title: string;
                };
                httpsPort: {
                    description: string;
                    type: string[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                ipCntryCode: {
                    description: string;
                    type: string[];
                    title: string;
                };
                isOrganization: {
                    description: string;
                    type: string;
                    title: string;
                };
                isPortal: {
                    description: string;
                    type: string;
                    title: string;
                };
                isReadOnly: {
                    description: string;
                    type: string;
                    title: string;
                };
                layerTemplatesGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                maxTokenExpirationMinutes: {
                    description: string;
                    type: string[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                portalHostname: {
                    description: string;
                    type: string[];
                    title: string;
                };
                portalMode: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                portalProperties: {
                    description: string;
                    title: string;
                };
                recycleBinEnabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                region: {
                    description: string;
                    type: string[];
                    title: string;
                };
                restUrl: {
                    description: string;
                    type: string;
                    title: string;
                };
                rotatorPanels: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                showHomePageDescription: {
                    description: string;
                    type: string;
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                supportsHostedServices: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                symbolSetsGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                templatesGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                thumbnailUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                units: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                url: {
                    description: string;
                    type: string;
                    title: string;
                };
                urlKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                use3dBasemaps: {
                    description: string;
                    type: string;
                    title: string;
                };
                useDefault3dBasemap: {
                    description: string;
                    type: string;
                    title: string;
                };
                user: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                useStandardizedQuery: {
                    description: string;
                    type: string;
                    title: string;
                };
                useVectorBasemaps: {
                    description: string;
                    type: string;
                    title: string;
                };
                vectorBasemapGalleryGroupQuery: {
                    description: string;
                    type: string[];
                    title: string;
                };
                created: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                defaultExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                modified: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Basemap": {
            title: string;
            type: string;
            properties: {
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                thumbnailUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                baseLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                portalItem: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                referenceLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                style: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.Layer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PortalItem": {
            title: string;
            type: string;
            properties: {
                access: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                accessInformation: {
                    description: string;
                    type: string[];
                    title: string;
                };
                apiKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                applicationProxies: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                avgRating: {
                    description: string;
                    type: string[];
                    title: string;
                };
                categories: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                classification: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                culture: {
                    description: string;
                    type: string[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                groupCategories: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                isLayer: {
                    description: string;
                    type: string;
                    title: string;
                };
                isOrgItem: {
                    description: string;
                    type: string;
                    title: string;
                };
                itemControl: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                itemPageUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                itemUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                licenseInfo: {
                    description: string;
                    type: string[];
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                numComments: {
                    description: string;
                    type: string[];
                    title: string;
                };
                numRatings: {
                    description: string;
                    type: string[];
                    title: string;
                };
                numViews: {
                    description: string;
                    type: string[];
                    title: string;
                };
                owner: {
                    description: string;
                    type: string[];
                    title: string;
                };
                ownerFolder: {
                    description: string;
                    type: string[];
                    title: string;
                };
                screenshots: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                size: {
                    description: string;
                    type: string[];
                    title: string;
                };
                snippet: {
                    description: string;
                    type: string[];
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                tags: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                thumbnailUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string[];
                    title: string;
                };
                typeKeywords: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                created: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                extent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                modified: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                portal: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PortalItemApplicationProxies": {
            title: string;
            type: string;
            properties: {
                sourceUrl: {
                    type: string;
                    title: string;
                };
                proxyUrl: {
                    type: string;
                    title: string;
                };
                proxyId: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "HashMap<any>": {
            title: string;
            type: string;
        };
        "__esri.BasemapStyle": {
            title: string;
            type: string;
            properties: {
                apiKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                language: {
                    description: string;
                    type: string[];
                    title: string;
                };
                places: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                serviceUrl: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                worldview: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PortalFeaturedGroups": {
            title: string;
            type: string;
            properties: {
                owner: {
                    type: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PortalUser": {
            title: string;
            type: string;
            properties: {
                access: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                culture: {
                    description: string;
                    type: string[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                email: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fullName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                orgId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                portal: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                preferredView: {
                    description: string;
                    type: string[];
                    title: string;
                };
                privileges: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                region: {
                    description: string;
                    type: string[];
                    title: string;
                };
                role: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                roleId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                thumbnailUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                units: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                userContentUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                username: {
                    description: string;
                    type: string;
                    title: string;
                };
                created: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                modified: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TextSymbol": {
            title: string;
            type: string;
            properties: {
                angle: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                borderLineSize: {
                    description: string;
                    type: string[];
                    title: string;
                };
                horizontalAlignment: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                kerning: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                lineHeight: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                rotated: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                text: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                verticalAlignment: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                backgroundColor: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                borderLineColor: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                font: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                haloColor: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                haloSize: {
                    description: string;
                    type: string[];
                    title: string;
                };
                lineWidth: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                xoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                yoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Font": {
            title: string;
            type: string;
            properties: {
                decoration: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                family: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                style: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                weight: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                size: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PopupTemplate": {
            title: string;
            type: string;
            properties: {
                lastEditInfoEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                outFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                overwriteActions: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                returnGeometry: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                actions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                content: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                    } | {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        $ref?: undefined;
                    } | {
                        type: string[];
                        $ref?: undefined;
                        items?: undefined;
                    })[];
                    title: string;
                };
                expressionInfos: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                fieldInfos: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                layerOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        Function: {
            title: string;
            type: string;
            properties: {
                prototype: {
                    title: string;
                };
                length: {
                    type: string;
                    title: string;
                };
                arguments: {
                    title: string;
                };
                caller: {
                    $ref: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "Promise<any>": {
            title: string;
            type: string;
            properties: {
                "__@toStringTag@16125": {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.ActionButton|__esri.ActionToggle>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Content": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.popupExpressionInfo": {
            title: string;
            type: string;
            properties: {
                expression: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                returnType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FieldInfo": {
            title: string;
            type: string;
            properties: {
                fieldName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                isEditable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                statisticType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                stringFieldOption: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                tooltip: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                format: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FieldInfoFormat": {
            title: string;
            type: string;
            properties: {
                dateFormat: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                digitSeparator: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                places: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LayerOptions": {
            title: string;
            type: string;
            properties: {
                returnTopmostRaster: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                showNoDataRecords: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ClassBreaksRenderer": {
            title: string;
            type: string;
            properties: {
                defaultLabel: {
                    description: string;
                    type: string[];
                    title: string;
                };
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                normalizationField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                normalizationTotal: {
                    description: string;
                    type: string[];
                    title: string;
                };
                normalizationType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                backgroundFillSymbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                classBreakInfos: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                defaultSymbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbol": {
            title: string;
            type: string;
            properties: {
                data: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolReference": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveOverrides: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                symbol: {
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                minScale: {
                    type: string;
                    title: string;
                };
                maxScale: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PrimitiveOverride": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    const: string;
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                propertyName: {
                    type: string;
                    title: string;
                };
                valueExpressionInfo: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PrimitiveOverrideValueExpressionInfo": {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                title: {
                    type: string;
                    title: string;
                };
                expression: {
                    type: string;
                    title: string;
                };
                name: {
                    type: string;
                    title: string;
                };
                returnType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMLineSymbol": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                useRealWorldSymbolSizes: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolLayer": {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        "__esri.CIMGradientFill": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                colorRamp: {
                    $ref: string;
                    title: string;
                };
                gradientMethod: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                gradientSize: {
                    type: string;
                    title: string;
                };
                gradientSizeUnits: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                gradientType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                interval: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffect": {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        "__esri.CIMGeometricEffectArrow": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                geometricEffectArrowType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectBuffer": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectControlMeasureLine": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                rule: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectCut": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                beginCut: {
                    type: string;
                    title: string;
                };
                endCut: {
                    type: string;
                    title: string;
                };
                middleCut: {
                    type: string;
                    title: string;
                };
                invert: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectDashes": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                customEndingOffset: {
                    type: string;
                    title: string;
                };
                dashTemplate: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                lineDashEnding: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetAlongLine: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectDonut": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                option: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectJog": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                length: {
                    type: string;
                    title: string;
                };
                position: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectMove": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectOffset": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                method: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                option: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectRotate": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectScale": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                xScaleFactor: {
                    type: string;
                    title: string;
                };
                yScaleFactor: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGeometricEffectWave": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                amplitude: {
                    type: string;
                    title: string;
                };
                period: {
                    type: string;
                    title: string;
                };
                seed: {
                    type: string;
                    title: string;
                };
                waveform: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMColorRamp": {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        "__esri.CIMLinearContinousColorRamp": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                fromColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                toColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMultipartColorRamp": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                colorRamps: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                weights: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMFixedColorRamp": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                colors: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMGradientStroke": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                capStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                joinStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                miterLimit: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                colorRamp: {
                    $ref: string;
                    title: string;
                };
                gradientMethod: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                gradientSize: {
                    type: string;
                    title: string;
                };
                gradientSizeUnits: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                gradientType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                interval: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMHatchFill": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                lineSymbol: {
                    $ref: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                rotation: {
                    type: string;
                    title: string;
                };
                separation: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPictureFill": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                rotation: {
                    type: string;
                    title: string;
                };
                scaleX: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                colorSubstitutions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                tintColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMColorSubstitution": {
            description: string;
            title: string;
            type: string;
            properties: {
                oldColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                newColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPictureMarker": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                anchorPoint: {
                    $ref: string;
                    title: string;
                };
                anchorPointUnits: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                rotateClockwise: {
                    type: string;
                    title: string;
                };
                rotation: {
                    type: string;
                    title: string;
                };
                markerPlacement: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                scaleX: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                colorSubstitutions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                tintColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                animations: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPictureMarkerAnchorPoint": {
            title: string;
            type: string;
            properties: {
                x: {
                    title: string;
                };
                y: {
                    title: string;
                };
            };
        };
        "__esri.CIMMarkerPlacementAlongLineSameSize": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                angleToLine: {
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                customEndingOffset: {
                    type: string;
                    title: string;
                };
                endings: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetAlongLine: {
                    type: string;
                    title: string;
                };
                placementTemplate: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementAtExtremities": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                angleToLine: {
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                extremityPlacement: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetAlongLine: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementAtRatioPositions": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                angleToLine: {
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                beginPosition: {
                    type: string;
                    title: string;
                };
                endPosition: {
                    type: string;
                    title: string;
                };
                flipFirst: {
                    type: string;
                    title: string;
                };
                positionArray: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementInsidePolygon": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                gridAngle: {
                    type: string;
                    title: string;
                };
                gridType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                shiftOddRows: {
                    type: string;
                    title: string;
                };
                stepX: {
                    type: string;
                    title: string;
                };
                stepY: {
                    type: string;
                    title: string;
                };
                randomness: {
                    type: string;
                    title: string;
                };
                seed: {
                    type: string;
                    title: string;
                };
                clipping: {
                    const: string;
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementOnLine": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                angleToLine: {
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                relativeTo: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                startPointOffset: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementOnVertices": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                angleToLine: {
                    type: string;
                    title: string;
                };
                offset: {
                    type: string;
                    title: string;
                };
                placeOnControlPoints: {
                    type: string;
                    title: string;
                };
                placeOnEndPoints: {
                    type: string;
                    title: string;
                };
                placeOnRegularVertices: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerPlacementPolygonCenter": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                placePerPart: {
                    type: string;
                    title: string;
                };
                method: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                clipAtBoundary: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMAnimatedSymbolProperties": {
            description: string;
            title: string;
            type: string;
            properties: {
                playAnimation: {
                    type: string;
                    title: string;
                };
                reverseAnimation: {
                    type: string;
                    title: string;
                };
                randomizeStartTime: {
                    type: string;
                    title: string;
                };
                randomizeStartSeed: {
                    type: string;
                    title: string;
                };
                startTimeOffset: {
                    type: string;
                    title: string;
                };
                duration: {
                    type: string;
                    title: string;
                };
                repeatType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                repeatDelay: {
                    type: string;
                    title: string;
                };
                easing: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        "__esri.CIMSymbolAnimation": {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        "__esri.CIMSymbolAnimationSize": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                toSize: {
                    type: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolAnimationScale": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                scaleFactor: {
                    type: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolAnimationColor": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                toColor: {
                    $ref: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolAnimationTransparency": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                toTransparency: {
                    type: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolAnimationRotation": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                toRotation: {
                    type: string;
                    title: string;
                };
                rotateClockwise: {
                    type: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSymbolAnimationOffset": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                animatedSymbolProperties: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPictureStroke": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                url: {
                    type: string;
                    title: string;
                };
                colorSubstitutions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                tintColor: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                capStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                joinStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                miterLimit: {
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSolidFill": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                animations: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMSolidStroke": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    };
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
                capStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                joinStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                miterLimit: {
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                animations: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMVectorMarker": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                enable: {
                    type: string;
                    title: string;
                };
                colorLocked: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                size: {
                    type: string;
                    title: string;
                };
                anchorPoint: {
                    $ref: string;
                    title: string;
                };
                anchorPointUnits: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                rotateClockwise: {
                    type: string;
                    title: string;
                };
                rotation: {
                    type: string;
                    title: string;
                };
                markerPlacement: {
                    description: string;
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                frame: {
                    $ref: string;
                    title: string;
                };
                markerGraphics: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                scaleSymbolsProportionally: {
                    type: string;
                    title: string;
                };
                respectFrame: {
                    type: string;
                    title: string;
                };
                animations: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMVectorMarkerAnchorPoint": {
            title: string;
            type: string;
            properties: {
                x: {
                    title: string;
                };
                y: {
                    title: string;
                };
            };
        };
        "__esri.Envelope": {
            description: string;
            title: string;
            type: string;
            properties: {
                xmin: {
                    type: string;
                    title: string;
                };
                xmax: {
                    type: string;
                    title: string;
                };
                ymin: {
                    type: string;
                    title: string;
                };
                ymax: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMMarkerGraphic": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                geometry: {
                    title: string;
                };
                symbol: {
                    anyOf: {
                        $ref: string;
                    }[];
                    title: string;
                };
                textString: {
                    type: string;
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPointSymbol": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                angleAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                primitiveName: {
                    type: string;
                    title: string;
                };
                scaleX: {
                    type: string;
                    title: string;
                };
                useRealWorldSymbolSizes: {
                    type: string;
                    title: string;
                };
                animations: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMPolygonSymbol": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                effects: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                useRealWorldSymbolSizes: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMTextSymbol": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
                fontFamilyName: {
                    type: string;
                    title: string;
                };
                fontStyleName: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                haloSize: {
                    type: string;
                    title: string;
                };
                haloSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                horizontalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offsetX: {
                    type: string;
                    title: string;
                };
                offsetY: {
                    type: string;
                    title: string;
                };
                strikethrough: {
                    type: string;
                    title: string;
                };
                symbol: {
                    $ref: string;
                    title: string;
                };
                underline: {
                    type: string;
                    title: string;
                };
                verticalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                callout: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CIMBackgroundCallout": {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                backgroundSymbol: {
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FillSymbol": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                outline: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SimpleLineSymbol": {
            title: string;
            type: string;
            properties: {
                cap: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                join: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                miterLimit: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                style: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                marker: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                width: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LineSymbolMarker": {
            title: string;
            type: string;
            properties: {
                placement: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                style: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                color: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PolygonSymbol3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                styleOrigin: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.ExtrudeSymbol3DLayer|__esri.FillSymbol3DLayer|__esri.WaterSymbol3DLayer|__esri.IconSymbol3DLayer|__esri.LineSymbol3DLayer|__esri.ObjectSymbol3DLayer|__esri.TextSymbol3DLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ClassBreakInfo": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maxValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                minValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                symbol: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SymbolUnion": {
            description: string;
            title: string;
            anyOf: {
                $ref: string;
            }[];
        };
        "__esri.LineSymbol3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                styleOrigin: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.LineSymbol3DLayer|__esri.PathSymbol3DLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.MeshSymbol3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                symbolLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                styleOrigin: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.FillSymbol3DLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PictureFillSymbol": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                xscale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                yscale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                height: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                width: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                xoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                yoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                outline: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PictureMarkerSymbol": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                height: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                width: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                angle: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                xoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                yoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PointSymbol3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                callout: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                symbolLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                verticalOffset: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                styleOrigin: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LineCallout3D": {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                border: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                size: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LineCallout3DBorder": {
            title: string;
            type: string;
            properties: {
                color: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
            };
        };
        "__esri.Collection<__esri.IconSymbol3DLayer|__esri.ObjectSymbol3DLayer|__esri.TextSymbol3DLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SimpleFillSymbol": {
            title: string;
            type: string;
            properties: {
                style: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                color: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                outline: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SimpleMarkerSymbol": {
            title: string;
            type: string;
            properties: {
                path: {
                    description: string;
                    type: string;
                    title: string;
                };
                style: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                color: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                outline: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                size: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                angle: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                xoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                yoffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.WebStyleSymbol": {
            title: string;
            type: string;
            properties: {
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                styleName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                styleUrl: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                portal: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                color: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ClassBreaksRendererLegendOptions": {
            title: string;
            type: string;
            properties: {
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.VisualVariable": {
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.VisualVariableLegendOptions": {
            title: string;
            type: string;
            properties: {
                showLegend: {
                    type: string[];
                    title: string;
                };
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.AuthoringInfo": {
            title: string;
            type: string;
            properties: {
                classificationMethod: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                fadeRatio: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fields: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                flowTheme: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                focus: {
                    description: string;
                    type: string[];
                    title: string;
                };
                isAutoGenerated: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                lengthUnit: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                maxSliderValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minSliderValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                numClasses: {
                    description: string;
                    type: string[];
                    title: string;
                };
                standardDeviationInterval: {
                    description: string;
                    type: string[];
                    title: string;
                };
                statistics: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                univariateSymbolStyle: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                univariateTheme: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                colorRamp: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                field1: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                field2: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visualVariables: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoStatistics": {
            title: string;
            type: string;
            properties: {
                max: {
                    type: string;
                    title: string;
                };
                min: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ColorRamp": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoField1": {
            title: string;
            type: string;
            properties: {
                field: {
                    type: string;
                    title: string;
                };
                normalizationField: {
                    type: string;
                    title: string;
                };
                classBreakInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                label: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoField1ClassBreakInfos": {
            title: string;
            type: string;
            properties: {
                maxValue: {
                    type: string;
                    title: string;
                };
                minValue: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoField2": {
            title: string;
            type: string;
            properties: {
                field: {
                    type: string;
                    title: string;
                };
                normalizationField: {
                    type: string;
                    title: string;
                };
                classBreakInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                label: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoField2ClassBreakInfos": {
            title: string;
            type: string;
            properties: {
                maxValue: {
                    type: string;
                    title: string;
                };
                minValue: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AuthoringInfoVisualVariable": {
            title: string;
            type: string;
            properties: {
                endTime: {
                    description: string;
                    type: string[];
                    title: string;
                };
                field: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maxSliderValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minSliderValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                normalizationField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                referenceSizeScale: {
                    description: string;
                    type: string[];
                    title: string;
                };
                referenceSizeSymbolStyle: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                startTime: {
                    description: string;
                    type: string[];
                    title: string;
                };
                style: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                theme: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                units: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                sizeStops: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SizeStop": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                value: {
                    description: string;
                    type: string;
                    title: string;
                };
                size: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UniqueValueRenderer": {
            title: string;
            type: string;
            properties: {
                defaultLabel: {
                    description: string;
                    type: string[];
                    title: string;
                };
                field: {
                    description: string;
                    type: string[];
                    title: string;
                };
                field2: {
                    description: string;
                    type: string[];
                    title: string;
                };
                field3: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fieldDelimiter: {
                    description: string;
                    type: string[];
                    title: string;
                };
                orderByClassesEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                backgroundFillSymbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultSymbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                uniqueValueGroups: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                uniqueValueInfos: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UniqueValueRendererLegendOptions": {
            title: string;
            type: string;
            properties: {
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.UniqueValueGroup": {
            title: string;
            type: string;
            properties: {
                heading: {
                    description: string;
                    type: string[];
                    title: string;
                };
                classes: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UniqueValueClass": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                symbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                values: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UniqueValue": {
            title: string;
            type: string;
            properties: {
                value: {
                    description: string;
                    type: string[];
                    title: string;
                };
                value2: {
                    description: string;
                    type: string[];
                    title: string;
                };
                value3: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UniqueValueInfo": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                value: {
                    description: string;
                    type: string[];
                    title: string;
                };
                symbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DictionaryRenderer": {
            title: string;
            type: string;
            properties: {
                config: {
                    description: string;
                    title: string;
                };
                fieldMap: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                scaleExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                scaleExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "HashMap<string>": {
            title: string;
            type: string;
        };
        "__esri.SimpleRenderer": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                symbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DotDensityRenderer": {
            title: string;
            type: string;
            properties: {
                dotBlendingEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                dotSize: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                dotValue: {
                    description: string;
                    type: string;
                    title: string;
                };
                referenceScale: {
                    description: string;
                    type: string;
                    title: string;
                };
                seed: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                attributes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                backgroundColor: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                outline: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttributeColorInfo": {
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                color: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DotDensityRendererLegendOptions": {
            title: string;
            type: string;
            properties: {
                unit: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.PieChartRenderer": {
            title: string;
            type: string;
            properties: {
                defaultLabel: {
                    description: string;
                    type: string[];
                    title: string;
                };
                holePercentage: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                attributes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                backgroundFillSymbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                defaultColor: {
                    $ref: string;
                    description: string;
                    default: string;
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                othersCategory: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                outline: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                size: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                visualVariables: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.PieChartRendererLegendOptions": {
            title: string;
            type: string;
            properties: {
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.PieChartRendererOthersCategory": {
            title: string;
            type: string;
            properties: {
                color: {
                    $ref: string;
                    title: string;
                };
                label: {
                    type: string[];
                    title: string;
                };
                threshold: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.OpacityVariable": {
            title: string;
            type: string;
            properties: {
                normalizationField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                stops: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.OpacityStop": {
            title: string;
            type: string;
            properties: {
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                opacity: {
                    description: string;
                    type: string;
                    title: string;
                };
                value: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SizeVariable": {
            title: string;
            type: string;
            properties: {
                axis: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxDataValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minDataValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                normalizationField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                target: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                useSymbolValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueRepresentation: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                valueUnit: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxSize: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string[];
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                minSize: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string[];
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                stops: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.HeatmapRenderer": {
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                maxDensity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minDensity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                referenceScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                valueExpressionTitle: {
                    description: string;
                    type: string[];
                    title: string;
                };
                colorStops: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                legendOptions: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                radius: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                authoringInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.HeatmapColorStop": {
            title: string;
            type: string;
            properties: {
                ratio: {
                    description: string;
                    type: string;
                    title: string;
                };
                color: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.HeatmapRendererLegendOptions": {
            title: string;
            type: string;
            properties: {
                minLabel: {
                    type: string[];
                    title: string;
                };
                maxLabel: {
                    type: string[];
                    title: string;
                };
                title: {
                    type: string[];
                    title: string;
                };
            };
        };
        "__esri.FeatureReductionCluster": {
            title: string;
            type: string;
            properties: {
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                clusterMaxSize: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                clusterMinSize: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                clusterRadius: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                symbol: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureReductionSelection": {
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.LayerFloorInfo": {
            title: string;
            type: string;
            properties: {
                floorField: {
                    description: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FormTemplate": {
            title: string;
            type: string;
            properties: {
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                preserveFieldValuesWhenHidden: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                elements: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                expressionInfos: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FieldElement": {
            title: string;
            type: string;
            properties: {
                editableExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fieldName: {
                    description: string;
                    type: string[];
                    title: string;
                };
                hint: {
                    description: string;
                    type: string[];
                    title: string;
                };
                requiredExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                domain: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                input: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.BarcodeScannerInput": {
            title: string;
            type: string;
            properties: {
                maxLength: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minLength: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ComboBoxInput": {
            title: string;
            type: string;
            properties: {
                noValueOptionLabel: {
                    description: string;
                    type: string[];
                    title: string;
                };
                showNoValueOption: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DatePickerInput": {
            title: string;
            type: string;
            properties: {
                max: {
                    description: string;
                    type: string[];
                    title: string;
                };
                min: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DateTimeOffsetPickerInput": {
            title: string;
            type: string;
            properties: {
                includeTimeOffset: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                max: {
                    description: string;
                    type: string[];
                    title: string;
                };
                min: {
                    description: string;
                    type: string[];
                    title: string;
                };
                timeResolution: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DateTimePickerInput": {
            title: string;
            type: string;
            properties: {
                includeTime: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                max: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                min: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.RadioButtonsInput": {
            title: string;
            type: string;
            properties: {
                noValueOptionLabel: {
                    description: string;
                    type: string[];
                    title: string;
                };
                showNoValueOption: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SwitchInput": {
            title: string;
            type: string;
            properties: {
                offValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                onValue: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TextAreaInput": {
            title: string;
            type: string;
            properties: {
                maxLength: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minLength: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TextBoxInput": {
            title: string;
            type: string;
            properties: {
                maxLength: {
                    description: string;
                    type: string[];
                    title: string;
                };
                minLength: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TimePickerInput": {
            title: string;
            type: string;
            properties: {
                max: {
                    description: string;
                    type: string[];
                    title: string;
                };
                min: {
                    description: string;
                    type: string[];
                    title: string;
                };
                timeResolution: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.GroupElement": {
            title: string;
            type: string;
            properties: {
                initialState: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                elements: {
                    description: string;
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.RelationshipElement": {
            title: string;
            type: string;
            properties: {
                displayCount: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                displayType: {
                    description: string;
                    default: string;
                    type: string;
                    const: string;
                    title: string;
                };
                editableExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                relationshipId: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                orderByFields: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.RelatedRecordsInfoFieldOrder": {
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string;
                    title: string;
                };
                order: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TextElement": {
            title: string;
            type: string;
            properties: {
                text: {
                    description: string;
                    type: string[];
                    title: string;
                };
                textFormat: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttachmentElement": {
            title: string;
            type: string;
            properties: {
                allowUserRename: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                attachmentKeyword: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                displayFilename: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                editableExpression: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                filenameExpression: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                maxAttachmentCount: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                minAttachmentCount: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                useOriginalFilename: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                input: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AttachmentInput": {
            title: string;
            type: string;
            properties: {
                attachmentAssociationType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                inputTypes: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.AudioInput": {
            title: string;
            type: string;
            properties: {
                inputMethod: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxDuration: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.DocumentInput": {
            title: string;
            type: string;
            properties: {
                maxFileSize: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ImageInput": {
            title: string;
            type: string;
            properties: {
                inputMethod: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxImageSize: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SignatureInput": {
            title: string;
            type: string;
            properties: {
                inputMethod: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.VideoInput": {
            title: string;
            type: string;
            properties: {
                inputMethod: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                maxDuration: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UtilityNetworkAssociationsElement": {
            title: string;
            type: string;
            properties: {
                editableExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                associationTypes: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                label: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visibilityExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.UtilityNetworkAssociationType": {
            title: string;
            type: string;
            properties: {
                associatedAssetGroup: {
                    description: string;
                    type: string;
                    title: string;
                };
                associatedAssetType: {
                    description: string;
                    type: string;
                    title: string;
                };
                associatedNetworkSourceId: {
                    description: string;
                    type: string;
                    title: string;
                };
                description: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string;
                    title: string;
                };
                type: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.ExpressionInfo": {
            title: string;
            type: string;
            properties: {
                expression: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                returnType: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.OrderByInfo": {
            title: string;
            type: string;
            properties: {
                field: {
                    description: string;
                    type: string[];
                    title: string;
                };
                order: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                valueExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.Graphic>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureTemplate": {
            title: string;
            type: string;
            properties: {
                description: {
                    description: string;
                    type: string[];
                    title: string;
                };
                drawingTool: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string[];
                    title: string;
                };
                prototype: {
                    description: string;
                    title: string;
                };
                thumbnail: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureTemplateThumbnail": {
            title: string;
            type: string;
            properties: {
                contentType: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                imageData: {
                    type: string;
                    title: string;
                };
                height: {
                    type: string;
                    title: string;
                };
                width: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TimeInfo": {
            title: string;
            type: string;
            properties: {
                endField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                startField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                stops: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                            format: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                timeZone: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                trackIdField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                fullTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                interval: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TimeInterval": {
            title: string;
            type: string;
            properties: {
                unit: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                value: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TrackInfo": {
            title: string;
            type: string;
            properties: {
                enabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxDisplayObservationsPerTrack: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                timeField: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                latestObservations: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                maxDisplayDuration: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                previousObservations: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                trackLines: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.TrackPartInfo": {
            title: string;
            type: string;
            properties: {
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.FeatureType": {
            title: string;
            type: string;
            properties: {
                domains: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string[];
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                templates: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CatalogLayer": {
            title: string;
            type: string;
            properties: {
                apiKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                copyright: {
                    description: string;
                    type: string[];
                    title: string;
                };
                customParameters: {
                    description: string;
                    title: string;
                };
                dateFieldsTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                datesInUnknownTimezone: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                definitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayFilterEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                displayFilterInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                drawOrderField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                dynamicGroupLayer: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                editFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editingInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                effectiveCapabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effectiveEditingEnabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                fields: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                fieldsIndex: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                footprintLayer: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                gdbVersion: {
                    description: string;
                    type: string[];
                    title: string;
                };
                geometryFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                geometryType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                hasM: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                isTable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                itemNameField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                itemSourceField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                itemTypeField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                layerId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                layers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                legendEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScaleField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScaleField: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                outFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                preferredTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                relationships: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                returnM: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                returnZ: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                serviceDefinitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                serviceItemId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                subtypeField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                subtypes: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                useViewTime: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                version: {
                    description: string;
                    type: string[];
                    title: string;
                };
                elevationInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                floorInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                historicMoment: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                orderBy: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                portalItem: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                timeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeOffset: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CatalogDynamicGroupLayer": {
            title: string;
            type: string;
            properties: {
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                layers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                legendEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maximumVisibleSublayers: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Map": {
            title: string;
            type: string;
            properties: {
                allLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                allTables: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                editableLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                basemap: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                ground: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                layers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                tables: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.FeatureLayer|__esri.GeoJSONLayer|__esri.OrientedImageryLayer|__esri.SubtypeGroupLayer|__esri.SceneLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Ground": {
            title: string;
            type: string;
            properties: {
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                layers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                navigationConstraint: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                surfaceColor: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.BaseElevationLayer|__esri.ElevationLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.GroundNavigationConstraint": {
            title: string;
            type: string;
            properties: {
                type: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.GroupLayer": {
            title: string;
            type: string;
            properties: {
                allLayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                allTables: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                visibilityMode: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                layers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                portalItem: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                tables: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CatalogFootprintLayer": {
            title: string;
            type: string;
            properties: {
                apiKey: {
                    description: string;
                    type: string[];
                    title: string;
                };
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                charts: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                customParameters: {
                    description: string;
                    title: string;
                };
                dateFieldsTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                datesInUnknownTimezone: {
                    description: string;
                    title: string;
                };
                definitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayFilterEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                displayFilterInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                effectiveCapabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                fields: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                fieldsIndex: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                geometryFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                geometryType: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                hasM: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                legendEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                orderBy: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                outFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                preferredTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                returnM: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                returnZ: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                timeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeOffset: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                useViewTime: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                elevationInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                featureEffect: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CatalogFootprintLayerElevationInfo": {
            title: string;
            type: string;
            properties: {
                featureExpressionInfo: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                mode: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                offset: {
                    type: string[];
                    title: string;
                };
                unit: {
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.CatalogFootprintLayerElevationInfoFeatureExpressionInfo": {
            title: string;
            type: string;
            properties: {
                expression: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.CatalogFootprintLayer|__esri.CatalogDynamicGroupLayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SubtypeSublayer": {
            title: string;
            type: string;
            properties: {
                capabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editingEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                effectiveCapabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effectiveEditingEnabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fieldsIndex: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                geometryType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                globalIdField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                labelsVisible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                legendEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                popupEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                relationships: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                subtypeCode: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                subtypeField: {
                    description: string;
                    type: string;
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                attributeTableTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                formTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                labelingInfo: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                popupTemplate: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                renderer: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                templates: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.SubtypeGroupLayer": {
            title: string;
            type: string;
            properties: {
                blendMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                capabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                copyright: {
                    description: string;
                    type: string[];
                    title: string;
                };
                customParameters: {
                    description: string;
                    title: string;
                };
                dateFieldsTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                datesInUnknownTimezone: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                definitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                displayFilterEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                displayFilterInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                editingEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                editingInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effect: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {};
                    } | {
                        type: string[];
                        items?: undefined;
                    })[];
                    title: string;
                };
                effectiveCapabilities: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                effectiveEditingEnabled: {
                    description: string;
                    type: string;
                    title: string;
                };
                fields: {
                    description: string;
                    type: string;
                    items: {
                        $ref: string;
                    };
                    title: string;
                };
                fieldsIndex: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                gdbVersion: {
                    description: string;
                    type: string[];
                    title: string;
                };
                geometryFieldsInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                geometryType: {
                    description: string;
                    anyOf: ({
                        enum: string[];
                        type: string;
                    } | {
                        type: string;
                        enum?: undefined;
                    })[];
                    title: string;
                };
                hasM: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                hasZ: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                isTable: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                layerId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                maxScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                minScale: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                objectIdField: {
                    description: string;
                    type: string;
                    title: string;
                };
                outFields: {
                    description: string;
                    default: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                persistenceEnabled: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                preferredTimeZone: {
                    description: string;
                    type: string[];
                    title: string;
                };
                refreshInterval: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                relationships: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                returnM: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                returnZ: {
                    description: string;
                    default: string;
                    type: string[];
                    title: string;
                };
                serviceDefinitionExpression: {
                    description: string;
                    type: string[];
                    title: string;
                };
                serviceItemId: {
                    description: string;
                    type: string[];
                    title: string;
                };
                sourceJSON: {
                    description: string;
                    title: string;
                };
                subtypeField: {
                    description: string;
                    type: string[];
                    title: string;
                };
                subtypes: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                title: {
                    description: string;
                    type: string[];
                    title: string;
                };
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                url: {
                    description: string;
                    type: string[];
                    title: string;
                };
                useViewTime: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                version: {
                    description: string;
                    type: string[];
                    title: string;
                };
                elevationInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                floorInfo: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                fullExtent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                historicMoment: {
                    description: string;
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    title: string;
                };
                portalItem: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                sublayers: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                timeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeInfo: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                timeOffset: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                listMode: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loaded: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                loadError: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                loadStatus: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                loadWarnings: {
                    description: string;
                    type: string;
                    items: {};
                    title: string;
                };
                opacity: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                parent: {
                    description: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                visible: {
                    description: string;
                    default: string;
                    type: string;
                    title: string;
                };
                visibilityTimeExtent: {
                    description: string;
                    default: string;
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "__esri.Collection<__esri.SubtypeSublayer>": {
            title: string;
            type: string;
            properties: {
                length: {
                    type: string;
                    title: string;
                };
                destroyed: {
                    type: string;
                    title: string;
                };
                initialized: {
                    type: string;
                    title: string;
                };
                declaredClass: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "Omit<ITextSymbol,\"xoffset\"|\"yoffset\">": {
            title: string;
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    title: string;
                };
                style: {
                    type: string;
                    title: string;
                };
                text: {
                    type: string;
                    title: string;
                };
                color: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                backgroundColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                borderLineSize: {
                    type: string;
                    title: string;
                };
                borderLineColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                haloSize: {
                    type: string;
                    title: string;
                };
                haloColor: {
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                verticalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                horizontalAlignment: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                rightToLeft: {
                    type: string;
                    title: string;
                };
                kerning: {
                    type: string;
                    title: string;
                };
                font: {
                    $ref: string;
                    title: string;
                };
                angle: {
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
        "Intl.NumberFormatOptions": {
            title: string;
            type: string;
            properties: {
                localeMatcher: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                style: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                currency: {
                    type: string;
                    title: string;
                };
                currencyDisplay: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                useGrouping: {
                    type: string;
                    title: string;
                };
                minimumIntegerDigits: {
                    type: string;
                    title: string;
                };
                minimumFractionDigits: {
                    type: string;
                    title: string;
                };
                maximumFractionDigits: {
                    type: string;
                    title: string;
                };
                minimumSignificantDigits: {
                    type: string;
                    title: string;
                };
                maximumSignificantDigits: {
                    type: string;
                    title: string;
                };
                numberingSystem: {
                    type: string;
                    title: string;
                };
                compactDisplay: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                notation: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                signDisplay: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                unit: {
                    type: string;
                    title: string;
                };
                unitDisplay: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                currencySign: {
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
        };
        "Intl.DateTimeFormatOptions": {
            title: string;
            type: string;
            properties: {
                localeMatcher: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                weekday: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                era: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                year: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                month: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                day: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                hour: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                minute: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                second: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeZoneName: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                formatMatcher: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                hour12: {
                    type: string;
                    title: string;
                };
                timeZone: {
                    type: string;
                    title: string;
                };
                calendar: {
                    type: string;
                    title: string;
                };
                dayPeriod: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                numberingSystem: {
                    type: string;
                    title: string;
                };
                dateStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeStyle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                hourCycle: {
                    enum: string[];
                    type: string;
                    title: string;
                };
                fractionalSecondDigits: {
                    enum: number[];
                    type: string;
                    title: string;
                };
            };
        };
        DateTimeFormatOptions: {
            description: string;
            title: string;
            type: string;
            properties: {
                type: {
                    description: string;
                    type: string;
                    const: string;
                    title: string;
                };
                intlOptions: {
                    $ref: string;
                    description: string;
                    title: string;
                };
                formatPerDateTimeUnit: {
                    description: string;
                    $ref: string;
                    title: string;
                };
            };
            required: string[];
        };
        "Omit<WebChartLineChartSeries,\"type\">": {
            title: string;
            type: string;
            properties: {
                x: {
                    description: string;
                    minLength: number;
                    type: string;
                    title: string;
                };
                y: {
                    description: string;
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    title: string;
                };
                id: {
                    description: string;
                    type: string;
                    title: string;
                };
                name: {
                    description: string;
                    type: string;
                    title: string;
                };
                visible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipReverseColor: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                dataTooltipValueFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipPercentFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataTooltipDateFormat: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                query: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                dataLabels: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                assignToSecondValueAxis: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                lineSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                lineSmoothed: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                showArea: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                markerVisible: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                markerSymbol: {
                    description: string;
                    $ref: string;
                    title: string;
                };
                areaColor: {
                    description: string;
                    type: string;
                    items: {
                        type: string;
                    }[];
                    minItems: number;
                    maxItems: number;
                    title: string;
                };
                stackNegativeValuesToBaseline: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                binTemporalData: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                timeIntervalUnits: {
                    description: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                timeIntervalSize: {
                    description: string;
                    type: string;
                    title: string;
                };
                timeAggregationType: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
                trimIncompleteTimeInterval: {
                    description: string;
                    default: boolean;
                    type: string;
                    title: string;
                };
                nullPolicy: {
                    description: string;
                    default: string;
                    enum: string[];
                    type: string;
                    title: string;
                };
            };
            required: string[];
        };
    };
    let $ref: string;
}
declare namespace _default {
    export { WebChartJSONSchemas };
}
export default _default;
