import type { IDisposer } from "@amcharts/amcharts4/core";
import type { CommonStorageType } from "@arcgis/charts-js-common";
import type { DebouncedFunc } from "lodash-es";
import type { BarSeriesLastUpdateInfo } from "../../chart-library-elements/series/bar-chart/interfaces";
import type { MappedTextSymbol } from "../../chart-library-elements/symbols/interfaces";
import type { AxisSizeChangedEvent, AxisValidatedEvent, DataRangeChangedEvent, PieSeriesValidatedEvent } from "../../interfaces";
import type { WebChartDataItem } from "@arcgis/charts-spec";
export interface StorageType extends CommonStorageType {
    legend: CommonStorageType["legend"];
    cursor: CommonStorageType["cursor"] & {
        selectEndedCallbackDisposer?: IDisposer;
    };
    chart: CommonStorageType["chart"] & {
        boxPlotMeanLinesData?: WebChartDataItem[];
        gaugeAutoResizeAxisLabelsDisposer?: IDisposer;
        gaugeAutoResizeInnerLabelFirstDisposer?: IDisposer;
        gaugeAutoResizeInnerLabelSecondDisposer?: IDisposer;
        gaugeAutoResizeFirstAndLastLabelsDisposer?: IDisposer;
    };
    series: CommonStorageType["series"] & {
        barSeriesLastUpdate?: BarSeriesLastUpdateInfo;
        pieChartSliceGrouperCallback?: (this: unknown, event: PieSeriesValidatedEvent) => Promise<void>;
        updateStyleCallbackDisposer?: IDisposer;
        updateSelectionCallbackDisposer?: IDisposer;
    };
    axis: CommonStorageType["axis"] & {
        labelsSymbol?: MappedTextSymbol;
        debouncedAxisLabelRotationCallback?: DebouncedFunc<(event: AxisValidatedEvent) => void>;
        debouncedAxisLabelWrapCallback?: DebouncedFunc<(event: DataRangeChangedEvent) => void>;
        debouncedAxisLabelStaggerCallback?: DebouncedFunc<(event: DataRangeChangedEvent) => void>;
        debouncedUpdateMinGridDistanceForWrapBehavior?: DebouncedFunc<(event: AxisSizeChangedEvent) => void>;
    };
    marker: CommonStorageType["marker"];
    label: CommonStorageType["label"];
}
