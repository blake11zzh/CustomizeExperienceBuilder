/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as t,a as e}from"../../../../../../../chunks/tslib.es6.js";import has from"../../../../../../../core/has.js";import{location as i,uniform as o,UniformGroup as s,input as r}from"../../GraphShaderModule.js";import{ifElse as n,greaterThan as a,Float as l,dot as d,mix as p,Vec2 as m,clamp as c,texture2D as h,step as u,length as g,Vec4 as y}from"../../graph/glsl.js";import{bitset as v}from"../line/gradientStrokeConstants.js";import{BaseHittestVertexInput as f}from"./AFeatureShader.js";import{LineVertexInput as w,LineFragmentInput as b,LineShader as x,getLineVertexData as j,getLineAntialiasing as L}from"./LineShader.js";import{MosaicInfo as S}from"./MosaicInfo.js";import{getBit as A,getBitBool as D,oneMinus as z}from"./utils.js";class F extends w{}t([i(9,l)],F.prototype,"accumulatedDistance",void 0),t([i(10,l)],F.prototype,"totalLength",void 0),t([i(11,l)],F.prototype,"gradientSize",void 0),t([i(12,m)],F.prototype,"segmentDirection",void 0),t([i(13,y)],F.prototype,"tlbr",void 0);class C extends b{}class I extends s{}t([o(l)],I.prototype,"isColorPass",void 0);class P extends x{vertex(t,e){const{totalLength:i,gradientSize:o,segmentDirection:s,tlbr:r}=t,p=j(this,t),m=A(t.bitset,v.isAlongLine),c=i.divide(this.view.displayZoomFactor),h=n(D(t.bitset,v.isAbsoluteSize),(()=>{const t=n(a(m,new l(.5)),c,p.halfWidth);return o.divide(t)}),o),u=t.accumulatedDistance.divide(this.view.displayZoomFactor).add(d(s,p.scaledOffset)).divide(c),g=r.divide(this.mosaicInfo.size.xyxy);return{...p,tlbr:g,relativePositionAlongLine:u,relativeGradientSize:h,isAlongLine:A(t.bitset,v.isAlongLine),isDiscrete:A(t.bitset,v.isDiscrete),...this.maybeRunHittest(t,e,p.halfWidth)}}fragment(t){const{isAlongLine:e,isDiscrete:i,relativePositionAlongLine:o,relativeGradientSize:s,normal:r,tlbr:d}=t,y=L(t,this.antialiasingControls.blur),v=new l(.5).multiply(r.y).add(new l(.5)),f=n(a(e,new l(.5)),o,v),w=n(a(i,new l(.5)),s.subtract(1),new l(0)),b=z(f.add(w).divide(s)),x=p(d.xy,d.zw,new m(c(b,new l(0),new l(1)),.5)),j=h(this.mosaicInfo.texture,x),S=t.opacity.multiply(y),A=this.getFragmentOutput(j.multiply(S),t),D=u(new l(.5),this.technique.isColorPass).multiply(has("gradient-depth-epsilon")),F=u(new l(0),r.y).multiply(new l(has("gradient-depth-bias")).subtract(D));return A.glFragDepth=c(g(r).add(F),new l(0),new l(1)),A}}t([o(S)],P.prototype,"mosaicInfo",void 0),t([o(I)],P.prototype,"technique",void 0),t([e(0,r(F)),e(1,r(f))],P.prototype,"vertex",null);export{C as GradientStrokeFragmentInput,P as GradientStrokeShader,F as GradientStrokeVertexInput};
