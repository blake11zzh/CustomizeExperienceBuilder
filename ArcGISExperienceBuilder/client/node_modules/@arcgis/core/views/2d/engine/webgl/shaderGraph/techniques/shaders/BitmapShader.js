/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as o,a as t}from"../../../../../../../chunks/tslib.es6.js";import{location as i,uniform as e,GraphShaderModule as r,define as s,VertexInput as p,UniformGroup as c,FragmentOutput as n,input as l,FragmentInput as a}from"../../GraphShaderModule.js";import{Vec3 as d,Vec4 as y,texture2D as f,Vec2 as g,Sampler2D as m,Mat3 as u,Float as x}from"../../graph/glsl.js";import{sampleBicubicBSpline as h}from"./bitmapUtils.js";class v extends p{}o([i(0,g)],v.prototype,"position",void 0);class b extends a{}class j extends c{}o([e(m)],j.prototype,"texture",void 0),o([e(u)],j.prototype,"dvsMat3",void 0),o([e(g)],j.prototype,"coordScale",void 0),o([e(x)],j.prototype,"opacity",void 0);class w extends r{vertex(o){const t=this.config.dvsMat3.multiply(new d(o.position.multiply(this.config.coordScale),1));return{glPosition:new y(t,1),texcoord:o.position}}fragment(o){const t=new n;let i;return i=this.bicubic?h(this.config.texture,o.texcoord,this.config.coordScale):f(this.config.texture,o.texcoord),t.fragColor=new y(i.rgb.multiply(this.config.opacity),i.a.multiply(this.config.opacity)),t}}o([e(j)],w.prototype,"config",void 0),o([s],w.prototype,"bicubic",void 0),o([t(0,l(v))],w.prototype,"vertex",null),o([t(0,l(b))],w.prototype,"fragment",null);export{w as BitmapShader};
