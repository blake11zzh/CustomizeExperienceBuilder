/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as t,a as e}from"../../../../../../../chunks/tslib.es6.js";import{location as i,uniform as r,input as o}from"../../GraphShaderModule.js";import{ifElse as s,Float as a,Vec2 as n,greaterThan as d,cond as l,equal as p,sqrt as m,dot as c,abs as u,max as v,clamp as f,mix as x,texture2D as g,Vec4 as h}from"../../graph/glsl.js";import{bitset as y,gradientFillMethods as w}from"../fill/gradientFillConstants.js";import{FeatureFragmentInput as b,BaseHittestVertexInput as j}from"./AFeatureShader.js";import{FillVertexInput as S,FillShader as z}from"./FillShader.js";import{MosaicInfo as M}from"./MosaicInfo.js";import{getBitBool as F,getBit as I,oneMinus as P}from"./utils.js";class D extends S{}t([i(5,h)],D.prototype,"tlbr",void 0),t([i(6,n)],D.prototype,"relativePosition",void 0),t([i(7,a)],D.prototype,"gradientMethod",void 0),t([i(8,n)],D.prototype,"relativeGradientSize",void 0);class G extends b{}class A extends z{vertex(t,e){const{tlbr:i,relativePosition:r,gradientMethod:o,relativeGradientSize:n}=t,d=s(F(t.bitset,y.isAbsolute),this.view.displayZoomFactor,new a(1));return{...super.vertex(t,e),tlbr:i,relativePosition:r,gradientMethod:o,gradientSize:n.multiply(d),isDiscrete:I(t.bitset,y.isDiscrete)}}fragment(t){const{tlbr:e,relativePosition:i,gradientMethod:r,gradientSize:o,isDiscrete:h}=t,y=s(d(h,new a(.5)),o.subtract(1),new n(0)),b=l([p(r,new a(w.rectangular)),()=>{const t=u(i).add(y).divide(o);return P(v(t.x,t.y))}],[p(r,new a(w.circular)),P(m(c(i,i)).add(y.x).divide(o.x))],[!0,P(i.x.add(y.x).divide(o.x))]),j=new n(f(b,new a(0),new a(1)),.5),S=x(e.xy,e.zw,j).divide(this.mosaicInfo.size),z=g(this.mosaicInfo.texture,S),M=t.color.a;return this.getFragmentOutput(z.multiply(M),t,new a(0))}}t([r(M)],A.prototype,"mosaicInfo",void 0),t([e(0,o(D)),e(1,o(j))],A.prototype,"vertex",null),t([e(0,o(G))],A.prototype,"fragment",null);export{G as GradientFillFragmentInput,A as GradientFillShader,D as GradientFillVertexInput};
