import type { ISimpleLineSymbol, WebChartTextSymbol } from "@arcgis/charts-spec";
import { ChartModel } from "../chart-model/chart-model";
export declare abstract class ModelWithBasicXAxis extends ChartModel {
    /**
     * Gets the x-axis title text.
     * @returns {string}
     */
    getXAxisTitleText(): string;
    /**
     * Sets the x-axis title text.
     * @param {string} newXAxisTitleText - The new x-axis title text.
     */
    setXAxisTitleText(newXAxisTitleText: string): void;
    /**
     * Gets whether the x-axis title is visible or not.
     *
     * `true`: X-axis title is visible.
     *
     * `false`: X-axis title is hidden.
     *
     * @returns {boolean}
     */
    getXAxisTitleVisibility(): boolean;
    /**
     * Sets the visibility of the x-axis title.
     *
     * `true`: X-axis title is visible.
     *
     * `false`: X-axis title is hidden.
     *
     * @param {boolean} newXAxisTitleVisibility - Whether the x-axis title is visible or not.
     */
    setXAxisTitleVisibility(newXAxisTitleVisibility: boolean): void;
    /**
     * Gets the maximum bound that is currently set for the x-axis.
     * @returns {number | null}
     */
    getMaxXBound(): number | null;
    /**
     * Sets the maximum bound for the x-axis.
     * @param {number | null} newMaxXBound - The new maximum bound for the x-axis.
     * @async **This method is `async` and must be awaited for the changes to take effect.**
     */
    setMaxXBound(newMaxXBound: number | null): Promise<void>;
    /**
     * Gets the minimum bound that is currently set for the x-axis.
     * @returns {number | null}
     */
    getMinXBound(): number | null;
    /**
     * Sets the minimum bound for the x-axis.
     * @param {number | null} newMinXBound - The new minimum bound for the x-axis.
     * @async **This method is `async` and must be awaited for the changes to take effect.**
     */
    setMinXBound(newMinXBound: number | null): Promise<void>;
    /**
     * Gets the x-axis title text symbol. Contains styling information such as font, color, and symbol style.
     * @returns {WebChartTextSymbol | undefined}
     */
    getXAxisTitleSymbol(): WebChartTextSymbol | undefined;
    /**
     * Sets the x-axis title text symbol. Contains styling information such as font, color, and symbol style.
     * @param {WebChartTextSymbol | undefined} newXAxisTitle - The new x-axis title text symbol.
     */
    setXAxisTitleSymbol(newXAxisTitle: WebChartTextSymbol | undefined): void;
    /**
     * Gets the axis labels text symbol. Contains styling information such as font, color, and symbol style.
     * @returns {WebChartTextSymbol | undefined}
     */
    getAxisLabelsSymbol(): WebChartTextSymbol | undefined;
    /**
     * Sets the axis labels text symbol. Contains styling information such as font, color, and symbol style.
     * @param {WebChartTextSymbol | undefined} newAxisLabelsSymbol - The new axis labels text symbol.
     */
    setAxisLabelsSymbol(newAxisLabelsSymbol: WebChartTextSymbol | undefined): void;
    /**
     * Gets the axis lines symbol. Contains styling information such as line width, line style, and line color.
     * @returns {ISimpleLineSymbol | undefined}
     */
    getAxisLinesSymbol(): ISimpleLineSymbol | undefined;
    /**
     * Sets the axis lines symbol. Contains styling information such as line width, line style, and line color.
     * @param {ISimpleLineSymbol | undefined} newAxisLinesSymbol - The new axis lines symbol.
     */
    setAxisLinesSymbol(newAxisLinesSymbol: ISimpleLineSymbol | undefined): void;
}
