import type { ChartConfig } from "@arcgis/charts-shared-utils";
import type { ISimpleLineSymbol, WebChartAxisScrollBar, WebChartTextSymbol } from "@arcgis/charts-spec";
/**
 * Gets the x-axis title symbol from the chart config.
 * @param config
 */
export declare const getXAxisTitleSymbol: (config: ChartConfig) => WebChartTextSymbol | undefined;
/**
 * Sets the x-axis title symbol in the chart config.
 * @param config
 * @param newXAxisTitleSymbol
 */
export declare const setXAxisTitleSymbol: (newXAxisTitleSymbol: WebChartTextSymbol | undefined, config: ChartConfig) => void;
/**
 * Gets the y-axis title symbol from the chart config.
 * @param config
 */
export declare const getYAxisTitleSymbol: (config: ChartConfig) => WebChartTextSymbol | undefined;
/**
 * Sets the y-axis title symbol in the chart config.
 * @param config
 * @param newYAxisTitleSymbol
 */
export declare const setYAxisTitleSymbol: (newYAxisTitleSymbol: WebChartTextSymbol | undefined, config: ChartConfig) => void;
/**
 * Gets the axis labels text symbol from the chart config.
 * @param config
 */
export declare const getAxisLabelsSymbol: (config: ChartConfig) => WebChartTextSymbol | undefined;
/**
 * Sets the axis labels text symbol in the chart config.
 * @param config
 * @param newAxisLabelsSymbol
 */
export declare const setAxisLabelsSymbol: (newAxisLabelsSymbol: WebChartTextSymbol | undefined, config: ChartConfig) => void;
/**
 * Gets the axis lines symbol from the chart config.
 * @param config
 */
export declare const getAxisLinesSymbol: (config: ChartConfig) => ISimpleLineSymbol | undefined;
/**
 * Sets the axis lines symbol in the chart config.
 * @param config
 * @param newAxisLinesSymbol
 */
export declare const setAxisLinesSymbol: (newAxisLinesSymbol: ISimpleLineSymbol | undefined, config: ChartConfig) => void;
/**
 * Gets the grid lines symbol from the chart config.
 * @param config
 */
export declare const getGridLinesSymbol: (config: ChartConfig) => ISimpleLineSymbol | undefined;
/**
 * Sets the grid lines symbol in the chart config.
 * @param config
 * @param newGridLinesSymbol
 */
export declare const setGridLinesSymbol: (newGridLinesSymbol: ISimpleLineSymbol | undefined, config: ChartConfig) => void;
/**
 * Get the title text of the axis
 * @param config - the config object
 * @param axisIndex - the index of the axis
 */
export declare const getAxisTitleText: (axisIndex: number, config: ChartConfig) => string;
/**
 * Set the title text of the axis
 * @param newAxisTitle - the new title text
 * @param axisIndex - the index of the axis
 * @param config - the config object
 */
export declare const setAxisTitleText: (newAxisTitle: string, axisIndex: number, config: ChartConfig) => void;
/**
 * Get the visibility of the axis title
 * @param axisIndex - the index of the axis
 * @param config - the config object
 */
export declare const getAxisTitleVisibility: (axisIndex: number, config: ChartConfig) => boolean;
/**
 * Set the visibility of the axis title
 * @param newVisibility - whether to show the axis title or not
 * @param axisIndex - the index of the axis
 * @param config - the config object
 */
export declare const setAxisTitleVisibility: (newVisibility: boolean, axisIndex: number, config: ChartConfig) => void;
/**
 * Get whether the X logarithmic scale is enabled
 * @param config - the config object
 */
export declare const getXLogarithmic: (config: ChartConfig) => boolean;
/**
 * Set whether the X logarithmic scale is enabled
 * @param config
 * @param enableXLogarithmic
 */
export declare const setXLogarithmic: (config: ChartConfig, enableXLogarithmic: boolean) => Promise<void>;
/**
 * Get whether the Y logarithmic scale is enabled
 * @param config - the config object
 */
export declare const getYLogarithmic: (config: ChartConfig) => boolean;
/**
 * Sets whether the Y logarithmic scale is enabled
 * @param config - the config object
 * @param enableYLogarithmic - the value to set
 */
export declare const setYLogarithmic: (config: ChartConfig, enableYLogarithmic: boolean) => Promise<void>;
/**
 * Returns the x-axis scrollbar configuration.
 * @category Public
 */
export declare const getXAxisScrollbar: (config: ChartConfig) => WebChartAxisScrollBar | undefined;
/**
 * Sets the x-axis scrollbar configuration.
 * @category Public
 */
export declare const setXAxisScrollbar: (config: ChartConfig, scrollbar: WebChartAxisScrollBar | undefined) => void;
/**
 * Returns the y-axis scrollbar configuration.
 * @category Public
 */
export declare const getYAxisScrollbar: (config: ChartConfig) => WebChartAxisScrollBar | undefined;
/**
 * Sets the y-axis scrollbar configuration.
 * @category Public
 */
export declare const setYAxisScrollbar: (config: ChartConfig, scrollbar: WebChartAxisScrollBar | undefined) => void;
