import type { ChartConfig } from "@arcgis/charts-shared-utils";
import type { ISimpleFillSymbol, WebChartGaugeSeries, WebChartTextSymbol } from "@arcgis/charts-spec";
/**
 * Gets the visibility of the needle.
 * @param config
 */
export declare const getNeedleVisibility: (config: ChartConfig<WebChartGaugeSeries>) => boolean;
/**
 * Sets the visibility of the needle.
 * @param visible
 * @param config
 */
export declare const setNeedleVisibility: (visible: boolean, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the symbol of the needle.
 * @param config
 */
export declare const getNeedleSymbol: (config: ChartConfig<WebChartGaugeSeries>) => ISimpleFillSymbol | undefined;
/**
 * Sets the symbol of the needle.
 * @param symbol
 * @param config
 */
export declare const setNeedleSymbol: (symbol: ISimpleFillSymbol | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the start width of the needle.
 * @param config
 */
export declare const getNeedleStartWidth: (config: ChartConfig<WebChartGaugeSeries>) => number | null | undefined;
/**
 * Sets the start width of the needle.
 * @param startWidth
 * @param config
 */
export declare const setNeedleStartWidth: (startWidth: number | null | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the end width of the needle.
 * @param config
 */
export declare const getNeedleEndWidth: (config: ChartConfig<WebChartGaugeSeries>) => number | null | undefined;
/**
 * Sets the end width of the needle.
 * @param endWidth
 * @param config
 */
export declare const setNeedleEndWidth: (endWidth: number | null | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the inner radius of the needle.
 * @param config
 */
export declare const getNeedleInnerRadius: (config: ChartConfig<WebChartGaugeSeries>) => number | null | undefined;
/**
 * Sets the inner radius of the needle.
 * @param innerRadius
 * @param config
 */
export declare const setNeedleInnerRadius: (innerRadius: number | null | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets whether to display the pin for the needle.
 * @param config
 */
export declare const getNeedleDisplayPin: (config: ChartConfig<WebChartGaugeSeries>) => boolean;
/**
 * Sets whether to display the pin for the needle.
 * @param displayPin
 * @param config
 */
export declare const setNeedleDisplayPin: (displayPin: boolean, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets whether the gauge inner label is visible.
 * @param config
 */
export declare const getInnerLabelVisible: (config: ChartConfig<WebChartGaugeSeries>) => boolean;
/**
 * Sets whether the gauge inner label is visible.
 * @param visible
 * @param config
 */
export declare const setInnerLabelVisibility: (visible: boolean, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the content of the gauge inner label.
 * @param config
 */
export declare const getInnerLabelContent: (config: ChartConfig<WebChartGaugeSeries>) => WebChartTextSymbol | undefined;
/**
 * Sets the content of the gauge inner label.
 * @param content
 * @param config
 */
export declare const setInnerLabelContent: (content: WebChartTextSymbol | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the visibility of the gauge axis ticks.
 * @param config
 */
export declare const getAxisTickVisibility: (config: ChartConfig<WebChartGaugeSeries>) => boolean;
/**
 * Sets the visibility of the gauge axis ticks.
 * @param visible
 * @param config
 */
export declare const setAxisTickVisibility: (visible: boolean, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets the increment between axis labels.
 * @param config
 */
export declare const getLabelsIncrement: (config: ChartConfig<WebChartGaugeSeries>) => number | undefined;
/**
 * Sets the increment between axis labels.
 * @param increment
 * @param config
 */
export declare const setLabelsIncrement: (increment: number | undefined, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Gets whether to only show the first and last axis labels.
 * @param config
 */
export declare const getShowOnlyMinMaxLabels: (config: ChartConfig<WebChartGaugeSeries>) => boolean;
/**
 * Sets whether to only show the first and last axis labels.
 * @param value
 * @param config
 */
export declare const setShowOnlyMinMaxLabels: (value: boolean, config: ChartConfig<WebChartGaugeSeries>) => void;
