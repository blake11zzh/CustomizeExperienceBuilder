import type { ChartConfig } from "@arcgis/charts-shared-utils";
import type { WebChartGaugeSeries } from "@arcgis/charts-spec";
import { RESTStatisticType } from "@arcgis/charts-spec";
import type { LayerInfo } from "../../interfaces/common";
export declare const updateSeries: (props: {
    config: ChartConfig<WebChartGaugeSeries>;
    layerInfo: LayerInfo;
    field: string;
    aggregationType: Exclude<RESTStatisticType, "no_aggregation">;
}) => Promise<void>;
/**
 * Gets the aggregation type from the config.
 * @param config - the guage chart config
 */
export declare const getAggregationType: (config: ChartConfig<WebChartGaugeSeries>) => Exclude<RESTStatisticType, "no_aggregation">;
/**
 * Sets the aggregation type to the config.
 * @param newAggregationType
 * @param config
 * @param layerInfo
 */
export declare const setAggregationType: (newAggregationType: Exclude<RESTStatisticType, "no_aggregation">, config: ChartConfig<WebChartGaugeSeries>, layerInfo: LayerInfo) => Promise<void>;
/**
 * Checks if the feature index is valid.
 *
 * NOTE: It should be a number and greater than or equal to 0.
 * @param { number | undefined } featureIndex - the feature index
 *
 * @returns boolean
 */
export declare const isValidFeatureIndex: (featureIndex?: number) => boolean;
/**
 * get the field from the config
 * @param config - the guage chart config
 */
export declare const getField: (config: ChartConfig<WebChartGaugeSeries>) => string;
/**
 * set the new field to the config
 * @param newField - the new field
 * @param config - the guage chart config
 */
export declare const setField: (newField: string, config: ChartConfig<WebChartGaugeSeries>, layerInfo: LayerInfo) => Promise<void>;
/**
 * get the inner radius from the config
 * @param config - the guage chart config
 */
export declare const getInnerRadius: (config: ChartConfig<WebChartGaugeSeries>) => number;
/**
 * set the new inner radius to the config
 * @param newInnerRadius - the new inner radius
 * @param config - the guage chart config
 */
export declare const setInnerRadius: (newInnerRadius: number, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * get the start angle from the config
 * @param config - the guage chart config
 */
export declare const getStartAngle: (config: ChartConfig<WebChartGaugeSeries>) => number;
/**
 * set the new start angle to the config
 * @param newStartAngle - the new start angle
 * @param config - the guage chart config
 */
export declare const setStartAngle: (newStartAngle: number, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * get the end angle from the config
 * @param config - the guage chart config
 */
export declare const getEndAngle: (config: ChartConfig<WebChartGaugeSeries>) => number;
/**
 * set the new end angle to the config
 * @param newEndAngle - the new end angle
 * @param config - the guage chart config
 */
export declare const setEndAngle: (newEndAngle: number, config: ChartConfig<WebChartGaugeSeries>) => void;
