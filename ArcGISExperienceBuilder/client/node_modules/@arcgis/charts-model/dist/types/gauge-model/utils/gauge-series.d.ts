import type { ChartConfig } from "@arcgis/charts-shared-utils";
import type { ValueConversion, WebChartGaugeSeries } from "@arcgis/charts-spec";
import { GaugeChartSubTypes } from "@arcgis/charts-spec";
import type { LayerInfo } from "../../interfaces/common";
/**
 * Get the conversion to apply to the gauge value
 * @param {ChartConfig<WebChartGaugeSeries>} config - the chart configuration
 */
export declare const getValueConversion: (config: ChartConfig<WebChartGaugeSeries>) => ValueConversion | undefined;
/**
 * Set the conversion to apply to the gauge value
 * @param {ValueConversion} valueConversion - the conversion to apply
 * @param {ChartConfig<WebChartGaugeSeries>} config - the chart configuration
 */
export declare const setValueConversion: (valueConversion: ValueConversion, config: ChartConfig<WebChartGaugeSeries>) => void;
/**
 * Get the index of the feature to be rendered.
 *
 * NOTE: This property will be ignored for a statistic gauge (indicated via `WebGaugeChart.subType` property).
 * For feature-based gauge, if this property is not present, the first feature will be used (featureIndex = 0)
 * @param {ChartConfig<WebChartGaugeSeries>} config - the chart configuration
 */
export declare const getFeatureIndex: (config: ChartConfig<WebChartGaugeSeries>) => number | undefined;
/**
 * Set the index of the feature to be rendered.
 *
 * NOTE: This property will be ignored for a statistic gauge (indicated via `WebGaugeChart.subType` property).
 * @param {number | null} featureIndex - the index of the feature to be rendered
 * @param {ChartConfig<WebChartGaugeSeries>} config - the chart configuration
 * @param {LayerInfo} layerInfo - the layer information
 */
export declare const setFeatureIndex: (featureIndex: number | null, config: ChartConfig<WebChartGaugeSeries>, layerInfo: LayerInfo) => Promise<void>;
/**
 * Get the type of Gauge chart, like FeatureGauge and StatisticGauge.
 *
 * NOTE: When this property is not specified, it will be defaulted to GaugeChartSubTypes.StatisticGauge.
 *
 * @param {ChartConfig<WebChartGaugeSeries>} config - the chart configuration
 * @default GaugeChartSubTypes.StatisticGauge
 *
 * @returns {GaugeChartSubTypes}
 */
export declare const getGaugeSubType: (config: ChartConfig<WebChartGaugeSeries>) => GaugeChartSubTypes;
