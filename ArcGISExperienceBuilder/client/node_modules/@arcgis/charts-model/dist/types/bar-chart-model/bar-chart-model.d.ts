import type { WebChart, WebChartBarChartSeries } from "@arcgis/charts-spec";
import type { ChartConfig } from "@arcgis/charts-shared-utils";
import { ModelWithXYAxes, ModelWithLegend, ModelWithColorMatch, ModelWithRotation, ModelWithDataLabels, ModelWithYGuides, ModelWithXGuides, ModelWithTemporalBinning } from "../mixins";
import type { LayerInfo } from "../interfaces/common";
import type { ModelParams } from "../interfaces/chart-interfaces";
import { SerialChartModel } from "../serial-chart-model/serial-chart-model";
export declare class BarChartModel extends SerialChartModel {
    /**
     * Current configuration used for the bar chart.
     */
    protected _config: ChartConfig<WebChartBarChartSeries, WebChart>;
    protected _chartType: "barSeries";
    protected layerInfo: LayerInfo;
    setup(params: ModelParams<ChartConfig<WebChartBarChartSeries>>): Promise<void>;
    protected generateDefaultConfig(): Promise<Omit<typeof this._config, "iLayer">>;
    /**
     * Gets whether to hide oversized stacked labels of the series based on the series index. If the index is out of bounds, it will return `undefined`.
     * @param {number} seriesIndex The index of the series.
     * @returns {boolean | undefined}
     */
    getSeriesHideOversizedStackedLabels(seriesIndex: number): boolean | undefined;
    /**
     * Sets whether to hide oversized stacked labels of the series based on the series index.
     * @param {boolean} newValue The new value for hiding oversized stacked labels.
     * @param {number} seriesIndex The index of the series.
     */
    setSeriesHideOversizedStackedLabels(newValue: boolean | undefined, seriesIndex: number): void;
    /**
     * Resets the series styling to the default styling.
     */
    resetSeriesStyling(): Promise<void>;
    /**
     * Returns whether the series styling is able to be reset.
     * @returns {boolean}
     */
    resetAvailable(): Promise<boolean>;
}
export interface BarChartModel extends ModelWithXYAxes, ModelWithLegend, ModelWithColorMatch, ModelWithRotation, ModelWithDataLabels, ModelWithXGuides, ModelWithYGuides, ModelWithTemporalBinning {
}
