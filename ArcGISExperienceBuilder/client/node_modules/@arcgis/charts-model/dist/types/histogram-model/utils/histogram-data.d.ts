import type { HistogramOverlays, ISimpleFillSymbol, ISimpleLineSymbol } from "@arcgis/charts-spec";
import { WebChartDataTransformations } from "@arcgis/charts-spec";
import type { HistogramConfig } from "@arcgis/charts-shared-utils";
import type { LayerInfo } from "../../interfaces/common";
/**
 * get the numeric field from the config
 * @param config - the histogram config
 */
export declare const getNumericField: (config: HistogramConfig) => string;
/**
 * set the numeric field in the config
 * @param newNumericField - the new numeric field
 * @param config - the histogram config
 */
export declare const setNumericField: (newNumericField: string, config: HistogramConfig, layerInfo: LayerInfo) => Promise<void>;
/**
 * get the data transformation type from the config
 * @param config - the histogram config
 */
export declare const getDataTransformationType: (config: HistogramConfig) => WebChartDataTransformations;
/**
 * set the data transformation type in the config
 * @param newDataTransformationType - the new data transformation type
 * @param config - the histogram config
 */
export declare const setDataTransformationType: (newDataTransformationType: WebChartDataTransformations, config: HistogramConfig) => void;
/**
 * get the bin count from the config
 * @param config the histogram config
 * @returns the bin count
 */
export declare const getBinCount: (config: HistogramConfig) => number;
/**
 * set the bin count in the config
 * @param newBinCount - the new bin count
 * @param config - the histogram config
 */
export declare const setBinCount: (newBinCount: number, config: HistogramConfig) => void;
/**
 * get the bin color from the config
 * @param config - the histogram config
 */
export declare const getBinColor: (config: HistogramConfig) => ISimpleFillSymbol;
/**
 * set the bin color in the config
 * @param newBinColor - the new bin color
 * @param config - the histogram config
 */
export declare const setBinColor: (newBinColor: ISimpleFillSymbol, config: HistogramConfig) => void;
/**
 * get the normal distribution color from the config
 * @param config - the histogram config
 */
export declare const getNormalDistColor: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * set the normal distribution color in the config
 * @param newNormalDistColor - the new normal distribution color
 * @param config - the histogram config
 */
export declare const setNormalDistColor: (newNormalDistColor: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * get the mean color from the config
 * @param config - the histogram config
 */
export declare const getMeanColor: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * set the mean color in the config
 * @param newMeanColor - the new mean color
 * @param config - the histogram config
 */
export declare const setMeanColor: (newMeanColor: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * get the median color from the config
 * @param config - the histogram config
 */
export declare const getMedianColor: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * set the median color in the config
 * @param newMedianColor - the new median color
 * @param config - the histogram config
 */
export declare const setMedianColor: (newMedianColor: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * get the standard deviation color from the config
 * @param config - the histogram config
 */
export declare const getStandardDevColor: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * set the standard deviation color in the config
 * @param newStandardDevColor - the new standard deviation color
 * @param config - the histogram config
 */
export declare const setStandardDevColor: (newStandardDevColor: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * get the show normal distribution overlay from the config
 * @param config - the histogram config
 */
export declare const getShowNormalDistOverlay: (config: HistogramConfig) => boolean;
/**
 * set the show normal distribution overlay in the config
 * @param newShowNormalDistOverlay - the new show normal distribution overlay
 * @param config - the histogram config
 */
export declare const setShowNormalDistOverlay: (newShowNormalDistOverlay: boolean, config: HistogramConfig) => void;
/**
 * get the show mean overlay from the config
 * @param config - the histogram config
 */
export declare const getShowMeanOverlay: (config: HistogramConfig) => boolean;
/**
 * set the show mean overlay in the config
 * @param newShowMeanOverlay - the new show mean overlay
 * @param config - the histogram config
 */
export declare const setShowMeanOverlay: (newShowMeanOverlay: boolean, config: HistogramConfig) => void;
/**
 * get the show median overlay from the config
 * @param config - the histogram config
 */
export declare const getShowMedianOverlay: (config: HistogramConfig) => boolean;
/**
 * set the show median overlay in the config
 * @param newShowMedianOverlay - the new show median overlay
 * @param config - the histogram config
 */
export declare const setShowMedianOverlay: (newShowMedianOverlay: boolean, config: HistogramConfig) => void;
/**
 * get the show standard deviation overlay from the config
 * @param config - the histogram config
 */
export declare const getShowStandardDevOverlay: (config: HistogramConfig) => boolean;
/**
 * set the show standard deviation overlay in the config
 * @param newShowStandardDevOverlay - the new show standard deviation overlay
 * @param config - the histogram config
 */
export declare const setShowStandardDevOverlay: (newShowStandardDevOverlay: boolean, config: HistogramConfig) => void;
/**
 * Get the chart overlays for the series. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**.
 * @param config - the histogram config
 */
export declare const getSeriesOverlays: (config: HistogramConfig) => HistogramOverlays | undefined;
/**
 * Set the chart overlays for the series. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**.
 * @param newOverlays - the new overlays
 * @param config - the histogram config
 */
export declare const setSeriesOverlays: (newOverlays: HistogramOverlays, config: HistogramConfig) => void;
