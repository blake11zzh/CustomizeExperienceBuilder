import type { WebChartBarChartSeries, WebChartLineChartSeries } from "@arcgis/charts-spec";
import { type ChartConfig } from "@arcgis/charts-shared-utils";
import { SerialChartDataSortingKinds } from "../interfaces/common";
/**
 * Get the sort order kind for the bar and line chart
 * @param {ChartConfig<WebChartBarChartSeries | WebChartLineChartSeries>} config - the chart configuration
 *
 * @returns {SerialChartDataSortingKinds}
 */
export declare const getSortOrderKindForBarLineChart: (config: ChartConfig<WebChartBarChartSeries | WebChartLineChartSeries>) => SerialChartDataSortingKinds;
/**
 * Check if custom sort is enabled based on the chart type.
 * @param {ChartConfig<WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartLineChartSeries | WebChartPieChartSeries>} config - The chart config.
 * @returns {boolean} - True if custom sort is enabled, otherwise false.
 */
export declare const isCustomSortEnabled: (config: ChartConfig) => boolean;
/**
 * Get the order by list from the config.
 * The order by list is only used when the sort order kind is custom sort.
 * @param  {ChartConfig<WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartLineChartSeries | WebChartPieChartSeries>} config - The chart config.
 *
 * @returns string[] - The order by list.
 */
export declare const getOrderByList: (config: ChartConfig) => string[];
/**
 * Set the sort order kind for the bar and line chart
 * @param {SerialChartDataSortingKinds} newSortOrderKind - the new sort order kind
 * @param {ChartConfig} config - the chart configuration
 * @param {string[] | undefined} orderByList - the list of fields to order by
 */
export declare const setSortOrderKind: (newSortOrderKind: string, config: ChartConfig, orderByList?: string[]) => void;
/**
 * Gets the x-axis field.
 * @param {ChartConfig} config - The chart config.
 * @returns {string}
 */
export declare const getXAxisField: (config: ChartConfig) => string;
