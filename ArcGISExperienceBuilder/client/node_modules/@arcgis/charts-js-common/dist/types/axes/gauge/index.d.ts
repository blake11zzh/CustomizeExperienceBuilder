import type { QueryObject } from "@arcgis/charts-shared-utils";
import type { NumberFormatOptions, WebChartAxis, WebChartDataItem, WebChartGaugeAxis, WebChartQuery, WebGaugeChart } from "@arcgis/charts-spec";
/**
 * Converts a numeric value to a ratio based on the axis min and max.
 * @param props.value The value to convert
 * @param props.axisMin The axis min bound
 * @param props.axisMax The axis max bound
 */
export declare function convertValueToRatio(props: {
    value: number;
    axisMin: number;
    axisMax: number;
}): number;
/**
 * Validates a given labels increment
 * @param value The value to validate
 */
export declare function isValidLabelsIncrement(value?: number): value is number;
/**
 * Calculates the labelsIncrement (if not provided) and adjust the axis maximum if needed.
 * It then returns the calculated labelsIncrement, number of intervals with the axis min and max.
 * @param axisConfig the axis config
 */
export declare function getGaugeAxisFactors(axisConfig: WebChartGaugeAxis): {
    min: number;
    max: number;
    labelsIncrement: number;
    numberOfIntervals: number;
};
/**
 * When the axis is displayed using the percent format, we need to adjust the guide boundaries
 * to a value relative to the modified axis min max.
 * For instance if a guide start is 150 while axis min is 0 and axis max is 300, it means start
 * is at 50% of the axis. In consequence the bound will be changed to 0.5.
 * @param props.axisConfig The configuration for the axis
 * @param props.axisMin The axis min bound from the config
 * @param props.axisMax The axis max bound from the config
 */
export declare function applyPercentRatioToGuideBoundaries(props: {
    axisConfig: WebChartAxis;
    axisMin?: number | null;
    axisMax?: number | null;
}): void;
/**
 * Fetches the gauge bounds from the data, based on the provided index
 * @param props.chartData The gauge chart data
 * @param props.featureIndex The index of the âˆ‚ata item to look into (zero-based index)
 * @param props.chartConfig The chart configuration
 */
export declare function fetchGaugeByFeatureBounds(props: {
    chartData: WebChartDataItem[];
    featureIndex: number;
    chartConfig: WebGaugeChart;
}): {
    minimumFromData: number | undefined;
    maximumFromData: number | undefined;
};
/**
 * Fetches the `x` value from the feature specified by the index.
 * @param props.chartData The gauge chart data
 * @param props.featureIndex The index of the feature to render (zero-based index)
 * @param props.x The series' `x` property
 */
export declare function getFeatureValue(props: {
    featureIndex: number;
    chartData: WebChartDataItem[];
    x: string;
}): number;
/**
 * Get the minimum, maximum, and inner label values for the input dataset, considering the `minimumFromField`, `maximumFromField`
 * from the axis configuration, and the `x` property from the series configuration.
 *
 * For a gauge by feature, the `featureIndex` parameter is needed to fetch the min/max bounds from the data.
 *
 * For a statistic gauge, the `queryConfig` and `queryObject` is needed for a new query to be performed to get the min/max bounds from the data.
 *
 * @param props.chartConfig The chart config
 * @param props.chartData The gauge chart data
 * @param props.featureIndex The index of the feature to render (zero-based index) for a gauge by feature*
 * @param props.queryConfig The query config to be used to fetch the data for a statistic gauge
 * @param props.queryObject The query object to be used to fetch the data for a statistic gauge (layer or feature layer view)
 *
 * @returns The values for the minimum, maximum and inner labels for rendering a new gauge chart.
 */
export declare function getGaugeDataInfo(props: {
    chartConfig: WebGaugeChart;
    chartData: WebChartDataItem[];
    featureIndex?: number;
    queryConfig?: WebChartQuery;
    queryObject?: QueryObject;
}): Promise<{
    minimum: number;
    maximum: number;
    dataValue: number;
}>;
/**
 * Determine whether or not ticks (with and without labels) should be created by checking if
 * any of the following has changed:
 * - axis min and max,
 * - axis value format,
 * - labelsIncrement
 * - minimumFromField
 *
 * @param props.oldConfig The former config
 * @param props.axisMax The axis max bound
 * @param props.min The min value for the first tick
 * @param props.max The max value for the last tick
 * @param props.labelsIncrement The label increment
 * @param props.numberOfIntervals The number of intervals (space between two axis labels)
 * @param props.valueFormat The number format of the axis
 * @param props.minimumFromField The minimumFromField (used in gauge by feature)
 */
export declare function shouldCreateTicksAndLabels(props: {
    oldConfig?: WebGaugeChart;
    axisMax?: number;
    min: number;
    max: number;
    labelsIncrement: number;
    numberOfIntervals: number;
    valueFormat: NumberFormatOptions;
    minimumFromField?: string;
}): boolean;
