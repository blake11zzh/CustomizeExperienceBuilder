[{"id":"string_functions","title":"Funkcija niske","items":[{"type":"function","name":"char_length","bundle":"string","description":"Vraća broj znakova u tekstualnoj nisci kao ceo broj.","examples":"\n##### Primer\n\nVraća 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća broj znakova u tekstualnoj nisci kao ceo broj.\n\n**Parametar**\n\n- **string**: Niska teksta za koju se vraća dužina.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Vraća prvu vrednost na listi koja nije `NULL`. Sve vrednosti koje se prenesu u funkciju moraju da budu istog tipa, sa izuzetkom `NULL` vrednosti.","examples":"\n##### Primeri\n\nVraća 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nVraća -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prvu vrednost na listi koja nije `NULL`. Sve vrednosti koje se prenesu u funkciju moraju da budu istog tipa, sa izuzetkom `NULL` vrednosti.\n\n**Parametri**\n\n- **value1**: Prva vrednost na listi.\n- **valueN**: Naredna vrednost (vrednosti) na listi.\n\n**Povratna vrednost**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Povezuje dve niske zajedno.","examples":"\n##### Primer\n\nVraća 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Povezuje dve niske zajedno.\n\n**Parametri**\n\n- **string1**: Prva niska teksta.\n- **string2**: Niska teksta koja se povezuje sa prvom niskom teksta.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Vraća korisničko ime korisnika koji je trenutno prijavljen na portal.","examples":"\n##### Primer\n\nVraća korisničko ime korisnika koji je trenutno prijavljen na portal.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća korisničko ime korisnika koji je trenutno prijavljen na portal.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Konvertuje sve znakove u niski teksta u mala slova.","examples":"\n##### Primer\n\nVraća 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje sve znakove u niski teksta u mala slova.\n\n**Parametar**\n\n- **string**: Niska teksta koja se konvertuje u mala slova.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Vraća prvo pojavljivanje podniske u drugoj niski teksta. Vraća 0 ako podniska nije pronađena.","examples":"\n##### Primeri\n\nVraća 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nVraća 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prvo pojavljivanje podniske u drugoj niski teksta. Vraća 0 ako podniska nije pronađena.\n\n**Parametri**\n\n- **substring**: Niska teksta koja se traži.\n- **string**: Niska koja će se pretražiti za podniske.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Vraća podskup znakova u nisci teksta od početne tačke do precizirane dužine niske.","examples":"\n##### Primer\n\nVraća 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća podskup znakova u nisci teksta od početne tačke do precizirane dužine niske.\n\n**Parametri**\n\n- **string**: Niska teksta iz koje se ekstrahuje.\n- **start**: Vrednost celog broja koja precizira gde će vraćeni znakovi započeti.\n- **length**: Broj znakova koje treba izdvojiti.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Vraća podskup znakova u nisci teksta od početne tačke do precizirane dužine niske.","examples":"\n##### Primeri\n\nVraća 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nVraća 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća podskup znakova u nisci teksta od početne tačke do precizirane dužine niske.\n\n**Parametri**\n\n- **string**: Niska teksta iz koje se ekstrahuje.\n- **start**: Vrednost celog broja koja precizira gde će vraćeni znakovi započeti.\n- **length**: Broj znakova koje treba izdvojiti.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Vraća nisku teksta u kojoj su svi vodeći i/ili prateći razmaci ili drugi precizirani znakovi uklonjeni. LEADING će odseći vodeću stranu niske teksta, TRAILING će odseći prateću stranu niske teksta, dok će BOTH odseći obe strane niske teksta.","examples":"\n##### Primeri\n\nVraća 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nVraća '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nVraća 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća nisku teksta u kojoj su svi vodeći i/ili prateći razmaci ili drugi precizirani znakovi uklonjeni. LEADING će odseći vodeću stranu niske teksta, TRAILING će odseći prateću stranu niske teksta, dok će BOTH odseći obe strane niske teksta.\n\n**Parametri**\n\n- **side**: Strana niske teksta sa koje će razmaci ili znakovi biti uklonjeni. Moguće vrednosti: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Znakovi koji će biti odsečeni iz niske teksta.\n- **string**: Niska teksta koja se iseca.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Konvertuje sve znakove u niski teksta u velika slova.","examples":"\n##### Primer\n\nVraća 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje sve znakove u niski teksta u velika slova.\n\n**Parametar**\n\n- **string**: Niska teksta koja se konvertuje u velika slova.\n\n**Povratna vrednost**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"date_functions","title":"Funkcije datuma","items":[{"type":"function","name":"current_date","bundle":"date","description":"Vraća trenutni datum u UTC vremenskom formatu.","examples":"\n##### Primer\n\nVraća trenutni datum u UTC vremenskom formatu.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutni datum u UTC vremenskom formatu.\n\n**Povratna vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Vraća trenutni UTC datum i vreme u satima, minutima i sekundama.","examples":"\n##### Primer\n\nVraća trenutni UTC datum i vreme u satima, minutima i sekundama.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutni UTC datum i vreme u satima, minutima i sekundama.\n\n**Povratna vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Vraća trenutni UTC datum i vreme u satima, minutima i sekundama i milisekundama.","examples":"\n##### Primer\n\nVraća trenutni UTC datum i vreme u satima, minutima i sekundama i milisekundama.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutni UTC datum i vreme u satima, minutima i sekundama i milisekundama.\n\n**Povratna vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Vraća pojedinačni deo datuma/vremena, kao što je godina, mesec, dan, sat, minut ili sekund.","examples":"\n##### Primeri\n\nVraća 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nVraća 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nVraća 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća pojedinačni deo datuma/vremena, kao što je godina, mesec, dan, sat, minut ili sekund.\n\n**Parametri**\n\n- **part**: Deo koji se ekstrahuje iz datuma. Moguće vrednosti: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Datum iz kojeg se ekstrahuje deo.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Numeričke funkcije","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Vraća apsolutnu vrednost broja.","examples":"\n##### Primer\n\nVraća 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća apsolutnu vrednost broja.\n\n**Parametar**\n\n- **number**: Broj na kom treba izvršiti operaciju.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Vraća arkus kosinus broja.","examples":"\n##### Primer\n\nVraća 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arkus kosinus broja.\n\n**Parametar**\n\n- **number**: Broj između -1 i 1 na kom treba izvršiti operaciju.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Vraća arkus sinus broja.","examples":"\n##### Primer\n\nVraća 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arkus sinus broja.\n\n**Parametar**\n\n- **number**: Broj između -1 i 1 na kom treba izvršiti operaciju.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Vraća arkus tangentu broja.","examples":"\n##### Primer\n\nVraća 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arkus tangentu broja.\n\n**Parametar**\n\n- **number**: Broj na kom treba izvršiti operaciju.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Konvertuje vrednost iz jednog tipa podataka u drugi. Parametar dataType će da odredi u koji tip se vrednost konvertuje. FLOAT konvertuje vrednost u dvostruku, INTEGER konvertuje vrednost u ceo broj itd.","examples":"\n##### Primeri\n\nVraća 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nVraća ''1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nVraća '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje vrednost iz jednog tipa podataka u drugi. Parametar dataType će da odredi u koji tip se vrednost konvertuje. FLOAT konvertuje vrednost u dvostruku, INTEGER konvertuje vrednost u ceo broj itd.\n\n**Parametri**\n\n- **value**: Vrednost koja se konvertuje u drugi tip podataka.\n- **dataType**: Tip podataka u koji se vrednost konvertuje. Moguće vrednosti: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Povratna vrednost**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Vraća najmanji ceo broj veći od ovog broja ili jednak ovom broju.","examples":"\n##### Primer\n\nVraća 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća najmanji ceo broj veći od ovog broja ili jednak ovom broju.\n\n**Parametar**\n\n- **number**: Broj do koga se zaokružuje naviše.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Vraća trigonometrijski kosinus broja, za koji se pretpostavlja da je ugao u radijanima.","examples":"\n##### Primer\n\nVraća -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trigonometrijski kosinus broja, za koji se pretpostavlja da je ugao u radijanima.\n\n**Parametar**\n\n- **number**: Ugao u radijanima na kojem se vrši operacija.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Vraća najveći ceo broj manji od ovog broja ili jednak ovom broju.","examples":"\n##### Primer\n\nVraća 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća najveći ceo broj manji od ovog broja ili jednak ovom broju.\n\n**Parametar**\n\n- **number**: Broj na kojeg se zaokružuje naniže.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Vraća prirodni logaritam (osnova e) ovog broja.","examples":"\n##### Primer\n\nVraća 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prirodni logaritam (osnova e) ovog broja.\n\n**Parametar**\n\n- **number**: Broj veći od 0 na kojem se vrši operacija.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Vraća logaritam sa osnovom -10 ovog broja.","examples":"\n##### Primer\n\nVraća 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća logaritam sa osnovom -10 ovog broja.\n\n**Parametar**\n\n- **number**: Broj na kojem se vrši operacija koji je veći od 0.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Vraća ostatak nakon deljenja deljenog broja deliocem. I deljeni broj i delilac moraju da budu celi brojevi.","examples":"\n##### Primer\n\nVraća 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća ostatak nakon deljenja deljenog broja deliocem. I deljeni broj i delilac moraju da budu celi brojevi.\n\n**Parametri**\n\n- **x**: Broj koji predstavlja deljeni broj.\n- **y**: Broj koji predstavlja delioca.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Vraća `NULL` ako je expression1 jednak expression2, u suprotnom vraća expression1. Vrednosti za expression1 i expression2 moraju biti istog tipa. NULLIF se uobičajeno koristi za sprečavanje grešaka deljenja sa nulom, pomoću postavljanja expression2 na 0.","examples":"\n##### Primeri\n\nVraća `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nVraća 32\n\n```sql\nNULLIF(32, 0)\n```\n\nVraća `null` ako je POP18 jednak 0, u suprotnom vraća vrednost TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća `NULL` ako je expression1 jednak expression2, u suprotnom vraća expression1. Vrednosti za expression1 i expression2 moraju biti istog tipa. NULLIF se uobičajeno koristi za sprečavanje grešaka deljenja sa nulom, pomoću postavljanja expression2 na 0.\n\n**Parametri**\n\n- **expression1**: Vrednost na kojoj se vrši operacija.\n- **expression2**: Vrednost na kojoj se vrši operacija.\n\n**Povratna vrednost**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Vraća vrednost broja podignutog na određenu potenciju.","examples":"\n##### Primer\n\nVraća 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća vrednost broja podignutog na određenu potenciju.\n\n**Parametri**\n\n- **x**: Broj na kojem se vrši operacija.\n- **y**: Eksponent koji označava broj puta množenja broja samim sobom.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Zaokružuje broj na preciziranu dužinu.","examples":"\n##### Primeri\n\nVraća 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nVraća 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Zaokružuje broj na preciziranu dužinu.\n\n**Parametri**\n\n- **number**: Broj koji se zaokružuje.\n- **length**: Broj decimalnih mesta na koje se broj zaokružuje do celog broja. Pozitivna dužina zaokružuje broj na precizirano decimalno mesto. Negativna dužina zaokružuje broj na levu stranu decimalnog zareza.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Vraća predznak određenog broja. Negativni broj će vratiti -1. Pozitivni broj će vratiti 1.","examples":"\n##### Primeri\n\nVraća -1\n\n```sql\nSIGN(-132)\n```\n\nVraća 0\n\n```sql\nSIGN(0)\n```\n\nVraća 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća predznak određenog broja. Negativni broj će vratiti -1. Pozitivni broj će vratiti 1.\n\n**Parametar**\n\n- **number**: Broj na kom treba izvršiti operaciju.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Vraća trigonometrijski sinus broja, za koji se pretpostavlja da je ugao u radijanima.","examples":"\n##### Primer\n\nVraća 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trigonometrijski sinus broja, za koji se pretpostavlja da je ugao u radijanima.\n\n**Parametar**\n\n- **number**: Ugao u radijanima na kojem se vrši operacija.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Vraća tangens broja, za koji se pretpostavlja da je ugao u radijanima.","examples":"\n##### Primer\n\nVraća 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća tangens broja, za koji se pretpostavlja da je ugao u radijanima.\n\n**Parametar**\n\n- **number**: Ugao u radijanima na kojem se vrši operacija.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Vraća skraćen broj.","examples":"\n##### Primeri\n\nVraća 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nVraća 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nVraća 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća skraćen broj.\n\n**Parametri**\n\n- **number**: Broj koji se skraćuje.\n- **decimals**: Pozitivna vrednost skraćuje broj na precizirano decimalno mesto. Negativna vrednost skraćuje broj na levu stranu decimalnog zareza.\n\n**Povratna vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]