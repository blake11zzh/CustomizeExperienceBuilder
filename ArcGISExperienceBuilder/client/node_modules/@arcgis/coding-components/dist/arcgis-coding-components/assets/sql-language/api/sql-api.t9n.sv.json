[{"id":"date_functions","title":"Datumfunktioner","items":[{"type":"function","name":"current_date","bundle":"date","description":"Returnerar aktuellt datum i UTC.","examples":"\n##### Exempel\n\nReturnerar aktuellt datum i UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar aktuellt datum i UTC.\n\n**Returvärde**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Returnerar aktuellt UTC-datum och -tid i timmar, minuter och sekunder.","examples":"\n##### Exempel\n\nReturnerar aktuellt UTC-datum och -tid i timmar, minuter och sekunder.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar aktuellt UTC-datum och -tid i timmar, minuter och sekunder.\n\n**Returvärde**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Returnerar aktuellt UTC-datum och -tid i timmar, minuter, sekunder och millisekunder.","examples":"\n##### Exempel\n\nReturnerar aktuellt UTC-datum och -tid i timmar, minuter, sekunder och millisekunder.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar aktuellt UTC-datum och -tid i timmar, minuter, sekunder och millisekunder.\n\n**Returvärde**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Returnerar en del av ett värde för datum/tid, till exempel år, månad, dag, timme, minut och sekund.","examples":"\n##### Exempel\n\nReturnerar 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nReturnerar 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nReturnerar 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar en del av ett värde för datum/tid, till exempel år, månad, dag, timme, minut och sekund.\n\n**Parametrar**\n\n- **part**: Delen att extrahera från datumet. Möjliga värden: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Datumet att extrahera en del från.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Numeriska funktioner","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Returnerar det absoluta värdet för talet.","examples":"\n##### Exempel\n\nReturnerar 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar det absoluta värdet för talet.\n\n**Parameter**\n\n- **number**: Ett tal som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Returnerar arcuscosinus av ett tal.","examples":"\n##### Exempel\n\nReturnerar 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar arcuscosinus av ett tal.\n\n**Parameter**\n\n- **number**: Ett tal mellan −1 och 1 som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Returnerar arcussinus av ett tal.","examples":"\n##### Exempel\n\nReturnerar 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar arcussinus av ett tal.\n\n**Parameter**\n\n- **number**: Ett tal mellan −1 och 1 som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Returnerar arcus tangens för ett tal.","examples":"\n##### Exempel\n\nReturnerar 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar arcus tangens för ett tal.\n\n**Parameter**\n\n- **number**: Ett tal som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Konverterar ett värde från en datatyp till en annan. Parametern dataType avgör vilken typ värdet konverteras till. FLOAT konverterar värdet till en dubbel, INTEGER konverterar värdet till ett heltal, etc.","examples":"\n##### Exempel\n\nReturnerar 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nReturnerar '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nReturnerar '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterar ett värde från en datatyp till en annan. Parametern dataType avgör vilken typ värdet konverteras till. FLOAT konverterar värdet till en dubbel, INTEGER konverterar värdet till ett heltal, etc.\n\n**Parametrar**\n\n- **value**: Värdet som ska konverteras till en annan datatyp.\n- **dataType**: Datatypen som värdet ska konverteras till. Möjliga värden: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Returvärde**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Returnerar det minsta heltalet som är större än eller lika med talet.","examples":"\n##### Exempel\n\nReturnerar 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar det minsta heltalet som är större än eller lika med talet.\n\n**Parameter**\n\n- **number**: Talet avrundat uppåt.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Returnerar trigonometrisk cosinus för talet, vilket antas vara en vinkel i radianer.","examples":"\n##### Exempel\n\nReturnerar -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar trigonometrisk cosinus för talet, vilket antas vara en vinkel i radianer.\n\n**Parameter**\n\n- **number**: En vinkel i radianer som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Returnerar det största heltalet som är mindre än eller lika med talet.","examples":"\n##### Exempel\n\nReturnerar 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar det största heltalet som är mindre än eller lika med talet.\n\n**Parameter**\n\n- **number**: Talet som ska avrundas nedåt.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Returnerar den naturliga logaritmen (bas e) för talet.","examples":"\n##### Exempel\n\nReturnerar 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar den naturliga logaritmen (bas e) för talet.\n\n**Parameter**\n\n- **number**: Ett tal större än 0 som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Returnerar bas-10-logaritmen för talet.","examples":"\n##### Exempel\n\nReturnerar 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar bas-10-logaritmen för talet.\n\n**Parameter**\n\n- **number**: Ett tal som åtgärden ska utföras på som är större än 0.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Returnerar resten efter att en täljare har delats med en nämnare. Både täljaren och nämnaren måste vara heltal.","examples":"\n##### Exempel\n\nReturnerar 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar resten efter att en täljare har delats med en nämnare. Både täljaren och nämnaren måste vara heltal.\n\n**Parametrar**\n\n- **x**: Talet som representerar täljaren.\n- **y**: Talet som representerar nämnaren.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Returnerar `NULL` om expression1 är lika med expression2, annars returneras expression1. Värden för expression1 och expression2 måste vara av samma typ. NULLIF används vanligen för att förhindra delat med noll-fel genom att ange expression2 till 0.","examples":"\n##### Exempel\n\nReturnerar `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nReturnerar 32\n\n```sql\nNULLIF(32, 0)\n```\n\nReturnerar `null` om POP18 är lika med 0, returnerar annars värdet för TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar `NULL` om expression1 är lika med expression2, annars returneras expression1. Värden för expression1 och expression2 måste vara av samma typ. NULLIF används vanligen för att förhindra delat med noll-fel genom att ange expression2 till 0.\n\n**Parametrar**\n\n- **expression1**: Ett värde som åtgärden ska utföras på.\n- **expression2**: Ett värde som åtgärden ska utföras på.\n\n**Returvärde**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Returnerar värdet för talet upphöjt till den specifika potensen.","examples":"\n##### Exempel\n\nReturnerar 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar värdet för talet upphöjt till den specifika potensen.\n\n**Parametrar**\n\n- **x**: Talet som åtgärden ska utföras på.\n- **y**: Exponenten som anger det antal gånger som talet ska multipliceras med sig självt.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Avrundar talet till angiven längd.","examples":"\n##### Exempel\n\nReturnerar 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nReturnerar 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Avrundar talet till angiven längd.\n\n**Parametrar**\n\n- **number**: Talet som ska avrundas.\n- **length**: Antalet decimaler som talet ska avrundas till. En positiv längd avrundar talet till den angivna decimalen. En negativ längd avrundar talet till vänster om decimalkommat.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Returnerar tecknet för ett angivet tal. Ett negativt tal returnerar -1. Ett positivt tal returnerar 1.","examples":"\n##### Exempel\n\nReturnerar -1\n\n```sql\nSIGN(-132)\n```\n\nReturnerar 0\n\n```sql\nSIGN(0)\n```\n\nReturnerar 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar tecknet för ett angivet tal. Ett negativt tal returnerar -1. Ett positivt tal returnerar 1.\n\n**Parameter**\n\n- **number**: Ett tal som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Returnerar trigonometrisk sinus för talet, vilket antas vara en vinkel i radianer.","examples":"\n##### Exempel\n\nReturnerar 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar trigonometrisk sinus för talet, vilket antas vara en vinkel i radianer.\n\n**Parameter**\n\n- **number**: En vinkel i radianer som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Returnerar tangenten för ett tal, vilket antas vara en vinkel i radianer.","examples":"\n##### Exempel\n\nReturnerar 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar tangenten för ett tal, vilket antas vara en vinkel i radianer.\n\n**Parameter**\n\n- **number**: En vinkel i radianer som åtgärden ska utföras på.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Returnerar ett nedkortat tal.","examples":"\n##### Exempel\n\nReturnerar 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nReturnerar 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nReturnerar 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar ett nedkortat tal.\n\n**Parametrar**\n\n- **number**: Ett tal som ska kortas ned.\n- **decimals**: Ett positivt värde kortar ned talet till den angivna decimalen. Ett negativt värde kortar ned talet till vänster om decimalkommat.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Strängfunktioner","items":[{"type":"function","name":"char_length","bundle":"string","description":"Returnerar antalet tecken i textsträngen som ett heltal.","examples":"\n##### Exempel\n\nReturnerar 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar antalet tecken i textsträngen som ett heltal.\n\n**Parameter**\n\n- **string**: Textsträngen som längden ska returneras för.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Returnerar det första värdet i listan som inte är `NULL`. Alla värden som skickats till funktionen måste vara av samma typ, med undantag av `NULL`-värden","examples":"\n##### Exempel\n\nReturnerar 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nReturnerar -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar det första värdet i listan som inte är `NULL`. Alla värden som skickats till funktionen måste vara av samma typ, med undantag av `NULL`-värden\n\n**Parametrar**\n\n- **value1**: Det första värdet i listan.\n- **valueN**: Efterföljande värde(n) i listan.\n\n**Returvärde**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Sammanfogar två strängar.","examples":"\n##### Exempel\n\nReturnerar 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Sammanfogar två strängar.\n\n**Parametrar**\n\n- **string1**: Den första textsträngen.\n- **string2**: Textsträngen som ska konkateneras till den första textsträngen.\n\n**Returvärde**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Returnerar användarnamnet för användaren som för närvarande är inloggad i portalen.","examples":"\n##### Exempel\n\nReturnerar användarnamnet för användaren som för närvarande är inloggad i portalen.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar användarnamnet för användaren som för närvarande är inloggad i portalen.\n\n**Returvärde**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Konverterar alla tecken i textsträngen till gemener.","examples":"\n##### Exempel\n\nReturnerar 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterar alla tecken i textsträngen till gemener.\n\n**Parameter**\n\n- **string**: Textsträngen som ska konverteras till gemener.\n\n**Returvärde**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Returnerar den första förekomsten av en delsträng i en annan textsträng. Returnerar 0 om delsträngen inte kan hittas.","examples":"\n##### Exempel\n\nReturnerar 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nReturnerar 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar den första förekomsten av en delsträng i en annan textsträng. Returnerar 0 om delsträngen inte kan hittas.\n\n**Parametrar**\n\n- **substring**: Textsträngen som ska sökas efter.\n- **string**: Strängen som genomsöks för delsträngen.\n\n**Returvärde**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Returnerar en delmängd tecken i en textsträng från en startpunkt till den angivna stränglängden.","examples":"\n##### Exempel\n\nReturnerar 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar en delmängd tecken i en textsträng från en startpunkt till den angivna stränglängden.\n\n**Parametrar**\n\n- **string**: Textsträngen att extrahera från.\n- **start**: Heltalsvärdet som anger var de returnerade tecknen ska börja.\n- **length**: Antalet tecken som ska extraheras.\n\n**Returvärde**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Returnerar en delmängd tecken i en textsträng från en startpunkt till den angivna stränglängden.","examples":"\n##### Exempel\n\nReturnerar 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nReturnerar 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar en delmängd tecken i en textsträng från en startpunkt till den angivna stränglängden.\n\n**Parametrar**\n\n- **string**: Textsträngen att extrahera från.\n- **start**: Heltalsvärdet som anger var de returnerade tecknen ska börja.\n- **length**: Antalet tecken som ska extraheras.\n\n**Returvärde**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Returnerar en textsträng där alla inledande och/eller avslutande blanksteg eller andra angivna tecken har tagits bort. LEADING trimmar den inledande sidan av textsträngen, TRAILING trimmar den avslutande sidan av textsträngen, medan BOTH trimmar båda sidor av textsträngen.","examples":"\n##### Exempel\n\nReturnerar 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nReturnerar '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nReturnerar 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerar en textsträng där alla inledande och/eller avslutande blanksteg eller andra angivna tecken har tagits bort. LEADING trimmar den inledande sidan av textsträngen, TRAILING trimmar den avslutande sidan av textsträngen, medan BOTH trimmar båda sidor av textsträngen.\n\n**Parametrar**\n\n- **side**: Sidan av textsträngen där blanksteg eller tecken tas bort. Möjliga värden: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Tecken som ska trimmas från textsträngen.\n- **string**: Textsträngen som ska trimmas.\n\n**Returvärde**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Konverterar alla tecken i textsträngen till versaler.","examples":"\n##### Exempel\n\nReturnerar 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterar alla tecken i textsträngen till versaler.\n\n**Parameter**\n\n- **string**: Strängen som ska konverteras till versaler.\n\n**Returvärde**: String"}},"parametersInfo":{"min":1,"max":1}}]}]