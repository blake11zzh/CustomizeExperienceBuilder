[{"id":"string_functions","title":"字符串函数","items":[{"type":"function","name":"char_length","bundle":"string","description":"以整数返回文本字符串中的字符数。","examples":"\n##### 示例\n\n返回 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"以整数返回文本字符串中的字符数。\n\n**参数**\n\n- **string**: 要返回长度的文本字符串。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"返回列表中第一个非 `NULL` 的值。 传递给函数的所有值必须是同一类型，`NULL` 值除外。","examples":"\n##### 示例\n\n返回 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\n返回 21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回列表中第一个非 `NULL` 的值。 传递给函数的所有值必须是同一类型，`NULL` 值除外。\n\n**参数**\n\n- **value1**: 列表中的第一个值。\n- **valueN**: 列表中的后续值。\n\n**返回值**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"将两个字符串连接在一起。","examples":"\n##### 示例\n\n返回 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"将两个字符串连接在一起。\n\n**参数**\n\n- **string1**: 第一个文本字符串。\n- **string2**: 要连接到第一个文本字符串的文本字符串。\n\n**返回值**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"返回当前登录门户的用户的用户名。","examples":"\n##### 示例\n\n返回当前登录门户的用户的用户名。\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回当前登录门户的用户的用户名。\n\n**返回值**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"将文本字符串中的所有字符转换为小写。","examples":"\n##### 示例\n\n返回 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"将文本字符串中的所有字符转换为小写。\n\n**参数**\n\n- **string**: 要转换为小写形式的文本字符串。\n\n**返回值**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"返回字符串中第一次出现的子字符串。 如果未找到子字符串，则返回 0。","examples":"\n##### 示例\n\n返回 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\n返回 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回字符串中第一次出现的子字符串。 如果未找到子字符串，则返回 0。\n\n**参数**\n\n- **substring**: 要搜索的文本字符串。\n- **string**: 将在其中搜索子字符串的字符串。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"返回文本字符串中从起始点到指定字符串长度的字符子集。","examples":"\n##### 示例\n\n返回 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回文本字符串中从起始点到指定字符串长度的字符子集。\n\n**参数**\n\n- **string**: 要从中进行提取的文本字符串。\n- **start**: 用于指定返回字符的起始位置的整数值。\n- **length**: 要提取的字符数。\n\n**返回值**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"返回文本字符串中从起始点到指定字符串长度的字符子集。","examples":"\n##### 示例\n\n返回 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\n返回 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回文本字符串中从起始点到指定字符串长度的字符子集。\n\n**参数**\n\n- **string**: 要从中进行提取的文本字符串。\n- **start**: 用于指定返回字符的起始位置的整数值。\n- **length**: 要提取的字符数。\n\n**返回值**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"返回已删除所有前导和/或尾随空格或其他指定字符的文本字符串。 LEADING 将修剪文本字符串的前导侧，TRAILING 将修剪文本字符串的尾随侧，而 BOTH 将修剪文本字符串的两侧。","examples":"\n##### 示例\n\n返回 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\n返回 '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\n返回 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回已删除所有前导和/或尾随空格或其他指定字符的文本字符串。 LEADING 将修剪文本字符串的前导侧，TRAILING 将修剪文本字符串的尾随侧，而 BOTH 将修剪文本字符串的两侧。\n\n**参数**\n\n- **side**: 文本字符串中将删除空格或字符的一侧。 可能的值：`LEADING`、`TRAILING`、`BOTH`。\n- **character**: 将从文本字符串中修剪的字符。\n- **string**: 要修剪的文本字符串。\n\n**返回值**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"将文本字符串中的所有字符转换为大写。","examples":"\n##### 示例\n\n返回 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"将文本字符串中的所有字符转换为大写。\n\n**参数**\n\n- **string**: 要转换为大写形式的字符串。\n\n**返回值**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"numeric_functions","title":"数值函数","items":[{"type":"function","name":"abs","bundle":"numeric","description":"返回数的绝对值。","examples":"\n##### 示例\n\n返回 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数的绝对值。\n\n**参数**\n\n- **number**: 要对其执行运算的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"返回数字的反余弦。","examples":"\n##### 示例\n\n返回 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数字的反余弦。\n\n**参数**\n\n- **number**: 要对其执行运算的数字，范围介于 -1 和 1 之间。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"返回数字的反正弦。","examples":"\n##### 示例\n\n返回 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数字的反正弦。\n\n**参数**\n\n- **number**: 要对其执行运算的数字，范围介于 -1 和 1 之间。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"返回数字的反正切。","examples":"\n##### 示例\n\n返回 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数字的反正切。\n\n**参数**\n\n- **number**: 要对其执行运算的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"将值从一种数据类型转换为另一种数据类型。 dataType 参数将决定值转换的类型。 FLOAT 将值转换为双精度，INTEGER 将值转换为整型","examples":"\n##### 示例\n\n返回 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\n返回 '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\n返回“50”\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"将值从一种数据类型转换为另一种数据类型。 dataType 参数将决定值转换的类型。 FLOAT 将值转换为双精度，INTEGER 将值转换为整型\n\n**参数**\n\n- **value**: 要转换为另一种数据类型的值。\n- **dataType**: 将值转换为的数据类型。 可能的值：`DATE`、`FLOAT`、`INTEGER`、`REAL`、`SMALLINT`、`TIME`、`TIMESTAMP`、`VARCHAR`。\n\n**返回值**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"返回大于或等于该数字的最小整数。","examples":"\n##### 示例\n\n返回 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回大于或等于该数字的最小整数。\n\n**参数**\n\n- **number**: 要向上四舍五入的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"返回该数的三角余弦值（假设其为以弧度为单位的角）。","examples":"\n##### 示例\n\n返回 -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回该数的三角余弦值（假设其为以弧度为单位的角）。\n\n**参数**\n\n- **number**: 要对其执行操作的角度，单位为弧度。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"返回小于或等于该数的最大整数。","examples":"\n##### 示例\n\n返回 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回小于或等于该数的最大整数。\n\n**参数**\n\n- **number**: 要向下四舍五入的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"返回数字的自然对数（以 E 为底）。","examples":"\n##### 示例\n\n返回 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数字的自然对数（以 E 为底）。\n\n**参数**\n\n- **number**: 要对其执行运算的大于 0 的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"返回数字的以 10 为底的对数。","examples":"\n##### 示例\n\n返回 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数字的以 10 为底的对数。\n\n**参数**\n\n- **number**: 要对其执行运算的大于 0 的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"返回被除数除以除数后的余数。 被除数和除数都必须是整数。","examples":"\n##### 示例\n\n返回 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回被除数除以除数后的余数。 被除数和除数都必须是整数。\n\n**参数**\n\n- **x**: 表示被除数的数字。\n- **y**: 表示除数的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"如果 expression1 等于 expression2，则返回“NULL”，否则将返回 expression1。 expression1 的值与 expression2 的值必须为相同类型。 NULLIF 通常用于防止出现因将 expression2 设置为 0 而产生的除数为零的错误。","examples":"\n##### 示例\n\n返回 `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\n返回 32\n\n```sql\nNULLIF(32, 0)\n```\n\n如果 POP18 等于 0，则返回 `null`，否则，返回 TOTALPOP / POP18 的值。\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"如果 expression1 等于 expression2，则返回“NULL”，否则将返回 expression1。 expression1 的值与 expression2 的值必须为相同类型。 NULLIF 通常用于防止出现因将 expression2 设置为 0 而产生的除数为零的错误。\n\n**参数**\n\n- **expression1**: 要对其执行运算的值。\n- **expression2**: 要对其执行运算的值。\n\n**返回值**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"返回数值的指定幂的值。","examples":"\n##### 示例\n\n返回 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回数值的指定幂的值。\n\n**参数**\n\n- **x**: 要对其执行操作的数字。\n- **y**: 表示数字自乘次数的指数。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"将数字舍入到指定长度。","examples":"\n##### 示例\n\n返回 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\n返回 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"将数字舍入到指定长度。\n\n**参数**\n\n- **number**: 要四舍五入的数字。\n- **length**: 对数字四舍五入到的小数位数。 正数长度将数字四舍五入到指定的小数位。 负数长度将数字四舍五入到小数点左边。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"返回给定数字的符号。 负数将返回 -1。 正数将返回 1。","examples":"\n##### 示例\n\n返回 -1\n\n```sql\nSIGN(-132)\n```\n\n返回 0\n\n```sql\nSIGN(0)\n```\n\n返回 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回给定数字的符号。 负数将返回 -1。 正数将返回 1。\n\n**参数**\n\n- **number**: 要对其执行运算的数字。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"返回该数的三角正弦值（假设其为以弧度为单位的角）。","examples":"\n##### 示例\n\n返回 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回该数的三角正弦值（假设其为以弧度为单位的角）。\n\n**参数**\n\n- **number**: 要对其执行操作的角度，单位为弧度。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"返回该数的正切值（假设其为以弧度为单位的角）。","examples":"\n##### 示例\n\n返回 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回该数的正切值（假设其为以弧度为单位的角）。\n\n**参数**\n\n- **number**: 要对其执行操作的角度，单位为弧度。\n\n**返回值**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"返回一个截断的数字。","examples":"\n##### 示例\n\n返回 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\n返回 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\n返回 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回一个截断的数字。\n\n**参数**\n\n- **number**: 要截断的数字。\n- **decimals**: 正值可将数字截断到指定小数位数。 负值可将数字截断到小数点左边。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"date_functions","title":"日期函数","items":[{"type":"function","name":"current_date","bundle":"date","description":"以 UTC 返回当前日期。","examples":"\n##### 示例\n\n以 UTC 返回当前日期。\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"以 UTC 返回当前日期。\n\n**返回值**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"返回当前 UTC 日期和时间（小时、分钟和秒）。","examples":"\n##### 示例\n\n返回当前 UTC 日期和时间（小时、分钟和秒）。\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回当前 UTC 日期和时间（小时、分钟和秒）。\n\n**返回值**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"返回当前 UTC 日期和时间（小时、分钟、秒和毫秒）。","examples":"\n##### 示例\n\n返回当前 UTC 日期和时间（小时、分钟、秒和毫秒）。\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回当前 UTC 日期和时间（小时、分钟、秒和毫秒）。\n\n**返回值**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"返回日期/时间的单个部分，例如，年、月、日、小时、分钟或秒。","examples":"\n##### 示例\n\n返回 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\n返回 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\n返回 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"返回日期/时间的单个部分，例如，年、月、日、小时、分钟或秒。\n\n**参数**\n\n- **part**: 要从日期中提取的部分。 可能的值：`YEAR`、`MONTH`、`DAY`、`HOUR`、`MINUTE`、`SECOND`。\n- **datetime**: 要从中提取部分的日期。\n\n**返回值**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]