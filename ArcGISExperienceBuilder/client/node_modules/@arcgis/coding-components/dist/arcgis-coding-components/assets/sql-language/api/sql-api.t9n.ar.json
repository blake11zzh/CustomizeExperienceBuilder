[{"id":"numeric_functions","title":"دالات الرقمية","items":[{"type":"function","name":"abs","bundle":"numeric","description":"تُرجع القيمة المُطلقة للرقم.","examples":"\n##### مثال\n\nتُرجع 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع القيمة المُطلقة للرقم.\n\n**المعلمة**\n\n- **number**: رقم لتنفيذ العملية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"تُرجع جيب التمام القوسي للرقم.","examples":"\n##### مثال\n\nتُرجع 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع جيب التمام القوسي للرقم.\n\n**المعلمة**\n\n- **number**: رقم بين -1 و1 لتنفيذ العملية عليه.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"تُرجع جيب الزاوية القوسي للرقم.","examples":"\n##### مثال\n\nتُرجع 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع جيب الزاوية القوسي للرقم.\n\n**المعلمة**\n\n- **number**: رقم بين -1 و1 لتنفيذ العملية عليه.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"تُرجع قوس الظل للرقم.","examples":"\n##### مثال\n\nتُرجع 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع قوس الظل للرقم.\n\n**المعلمة**\n\n- **number**: رقم لتنفيذ العملية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"تُحول قيمة من نوع بيانات لآخر. ستُحدد معلمة نوع البيانات النوع الذي ستتحول إليه القيمة. FLOAT تُحول القيمة إلى مزدوجة وتُحول INTEGER القيمة إلى عدد صحيح، إلخ.","examples":"\n##### أمثلة\n\nتُرجع 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nتُرجع '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nتُرجع '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُحول قيمة من نوع بيانات لآخر. ستُحدد معلمة نوع البيانات النوع الذي ستتحول إليه القيمة. FLOAT تُحول القيمة إلى مزدوجة وتُحول INTEGER القيمة إلى عدد صحيح، إلخ.\n\n**معلمات**\n\n- **value**: القيمة المطلوب تحويلها إلى نوع بيانات آخر.\n- **dataType**: نوع البيانات المراد تحويل القيمة إليه. القيم المحتملة: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**إرجاع القيمة**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"تُرجع أصغر عدد صحيح أكبر من أو يساوي الرقم.","examples":"\n##### مثال\n\nتُرجع 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع أصغر عدد صحيح أكبر من أو يساوي الرقم.\n\n**المعلمة**\n\n- **number**: الرقم المُراد تقريبه إلى القيمة الأعلى.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"تُرجع جيب التمام المثلثي للرقم، والمُفترض أن يكون زاوية في التقدير الدائري.","examples":"\n##### مثال\n\nتُرجع -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع جيب التمام المثلثي للرقم، والمُفترض أن يكون زاوية في التقدير الدائري.\n\n**المعلمة**\n\n- **number**: زاوية بالتقديرات الدائرية لتنفيذ العملية عليها.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"تُرجع العدد الصحيح الأكبر الأقل من أو يساوي الرقم.","examples":"\n##### مثال\n\nتُرجع 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع العدد الصحيح الأكبر الأقل من أو يساوي الرقم.\n\n**المعلمة**\n\n- **number**: الرقم المُراد تقريبه إلى القيمة الأقل.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"تُرجع اللوغاريتمات الطبيعية (القاعدة e) للرقم.","examples":"\n##### مثال\n\nتُرجع 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع اللوغاريتمات الطبيعية (القاعدة e) للرقم.\n\n**المعلمة**\n\n- **number**: رقم أكبر من 0 لتنفيذ العملية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"تُرجع لوغاريتمات القاعدة-10 للرقم.","examples":"\n##### مثال\n\nتُرجع 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع لوغاريتمات القاعدة-10 للرقم.\n\n**المعلمة**\n\n- **number**: رقم لتنفيذ العملية أكبر من 0.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"تُرجع الباقي بعد قسمة المقسوم على المقسوم عليه. يجب أن يكون كل من المقسوم والمقسوم عليه عددين صحيحين.","examples":"\n##### مثال\n\nتُرجع 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع الباقي بعد قسمة المقسوم على المقسوم عليه. يجب أن يكون كل من المقسوم والمقسوم عليه عددين صحيحين.\n\n**معلمات**\n\n- **x**: الرقم الذي يمثل المقسوم.\n- **y**: الرقم الذي يمثل المقسوم عليه.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"تُرجع `NULL` إذا كان expression1 يساوي expression2، غير ذلك، تُرجع expression1. يجب أن تكون قيم expression1 وexpression2 من نفس النوع. يتم استخدام NULLIF بشكل شائع لتجنب أخطاء القسمة على صفر وذلك بواسطة إعداد expression2 لتصبح 0.","examples":"\n##### أمثلة\n\nتُرجع `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nتُرجع 32\n\n```sql\nNULLIF(32, 0)\n```\n\nتُرجع `null` إذا كان POP18 يساوي 0، وإلا، تُرجع قيمة TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع `NULL` إذا كان expression1 يساوي expression2، غير ذلك، تُرجع expression1. يجب أن تكون قيم expression1 وexpression2 من نفس النوع. يتم استخدام NULLIF بشكل شائع لتجنب أخطاء القسمة على صفر وذلك بواسطة إعداد expression2 لتصبح 0.\n\n**معلمات**\n\n- **expression1**: قيمة لإجراء العملية عليها.\n- **expression2**: قيمة لإجراء العملية عليها.\n\n**إرجاع القيمة**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"تُرجع قيمة الرقم المرفوع إلى القوة المحددة.","examples":"\n##### مثال\n\nتُرجع 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع قيمة الرقم المرفوع إلى القوة المحددة.\n\n**معلمات**\n\n- **x**: الرقم الذي سيتم تنفيذ العملية عليه.\n- **y**: يشير الأس إلى عدد مرات ضرب الرقم في نفسه.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"تُقرب الرقم إلى الطول المُحدد.","examples":"\n##### أمثلة\n\nتُرجع 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nتُرجع 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُقرب الرقم إلى الطول المُحدد.\n\n**معلمات**\n\n- **number**: الرقم المُراد تقريبه.\n- **length**: عدد الخانات العشرية لتقريب العدد. يُقرب الطول الموجب الرقم إلى الخانة العشرية المحددة. سيُقرب الطول السالب الرقم إلى يسار النقطة العشرية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"تُرجع علامة رقم معين. سيُرجع الرقم السالب -1. سيُرجع الرقم الموجب 1.","examples":"\n##### أمثلة\n\nيُرجع - 1\n\n```sql\nSIGN(-132)\n```\n\nيُرجع 0\n\n```sql\nSIGN(0)\n```\n\nيُرجع 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع علامة رقم معين. سيُرجع الرقم السالب -1. سيُرجع الرقم الموجب 1.\n\n**المعلمة**\n\n- **number**: رقم لتنفيذ العملية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"يُرجع جيب الزاوية المثلثي للرقم، والمُفترض أن يكون زاوية في التقدير الدائري.","examples":"\n##### مثال\n\nيُرجع 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"يُرجع جيب الزاوية المثلثي للرقم، والمُفترض أن يكون زاوية في التقدير الدائري.\n\n**المعلمة**\n\n- **number**: زاوية بالتقديرات الدائرية لتنفيذ العملية عليها.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"تُرجع مماسًا لرقم، والمُفترض أن يكون زاوية في التقدير الدائري.","examples":"\n##### مثال\n\nتُرجع 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع مماسًا لرقم، والمُفترض أن يكون زاوية في التقدير الدائري.\n\n**المعلمة**\n\n- **number**: زاوية بالتقديرات الدائرية لتنفيذ العملية عليها.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"تُرجع رقمًا متقطعًا.","examples":"\n##### أمثلة\n\nتُرجع 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nتُرجع 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nتُرجع 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع رقمًا متقطعًا.\n\n**معلمات**\n\n- **number**: العدد المطلوب اقتطاعه.\n- **decimals**: تقوم القيمة الموجبة باقتطاع العدد إلى الخانة العشرية المحددة. تقوم القيمة السالبة باقتطاع العدد إلى يسار النقطة العشرية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"دالات السلسلة","items":[{"type":"function","name":"char_length","bundle":"string","description":"تُرجع عدد الرموز في سلسلة النص في شكل عدد صحيح.","examples":"\n##### مثال\n\nتُرجع 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع عدد الرموز في سلسلة النص في شكل عدد صحيح.\n\n**المعلمة**\n\n- **string**: السلسلة النصية المطلوب إرجاع طولها.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"تُرجع القيمة الأولى في القائمة التي ليست `NULL`. يجب أن تكون جميع القيم التي تم تمريرها إلى الدالة من النوع نفسه، باستثناء قيم `NULL`.","examples":"\n##### أمثلة\n\nتُرجع 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nتُرجع -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع القيمة الأولى في القائمة التي ليست `NULL`. يجب أن تكون جميع القيم التي تم تمريرها إلى الدالة من النوع نفسه، باستثناء قيم `NULL`.\n\n**معلمات**\n\n- **value1**: القيمة الأولى في القائمة.\n- **valueN**: القيمة (القيم) اللاحقة في القائمة.\n\n**إرجاع القيمة**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"تسلسل سلسلتين معًا","examples":"\n##### مثال\n\nتُرجع 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تسلسل سلسلتين معًا\n\n**معلمات**\n\n- **string1**: السلسلة النصية الأولى.\n- **string2**: السلسلة النصية لسلسلة السلسلة النصية الأولى.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"تُرجع اسم المستخدم للمستخدم الذي سجل الدخول حاليًا إلى البوابة الإلكترونية.","examples":"\n##### مثال\n\nتُرجع اسم المستخدم للمستخدم الذي سجل الدخول حاليًا إلى البوابة الإلكترونية.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع اسم المستخدم للمستخدم الذي سجل الدخول حاليًا إلى البوابة الإلكترونية.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"تُحول كل الأحرف في السلسلة النصية إلى أحرف صغيرة.","examples":"\n##### مثال\n\nتُرجع 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُحول كل الأحرف في السلسلة النصية إلى أحرف صغيرة.\n\n**المعلمة**\n\n- **string**: السلسلة النصية المطلوب تحويلها إلى أحرف صغيرة.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"تُرجع الحدوث الأول لسلسلة فرعية في سلسلة نصية أخرى. تُرجع 0 إذا لم يتم العثور على السلسلة الفرعية.","examples":"\n##### أمثلة\n\nإرجاع 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nتُرجع 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع الحدوث الأول لسلسلة فرعية في سلسلة نصية أخرى. تُرجع 0 إذا لم يتم العثور على السلسلة الفرعية.\n\n**معلمات**\n\n- **substring**: السلسلة النصية المطلوب البحث عنها.\n- **string**: السلسلة التي سيتم البحث عنها للسلسلة الفرعية.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"تُرجع المجموعة الفرعية للأحرف في سلسلة نصية من نقطة بداية إلى طول السلسلة المحدد.","examples":"\n##### مثال\n\nتُرجع 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع المجموعة الفرعية للأحرف في سلسلة نصية من نقطة بداية إلى طول السلسلة المحدد.\n\n**معلمات**\n\n- **string**: السلسلة النصية المطلوب الاستخراج منها.\n- **start**: قيمة العدد الصحيح التي تُحدد مكان بدء الأحرف التي تم إرجاعها.\n- **length**: عدد الأحرف المراد استخراجها.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"تُرجع المجموعة الفرعية للأحرف في سلسلة نصية من نقطة بداية إلى طول السلسلة المحدد.","examples":"\n##### أمثلة\n\nتُرجع 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nتُرجع 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع المجموعة الفرعية للأحرف في سلسلة نصية من نقطة بداية إلى طول السلسلة المحدد.\n\n**معلمات**\n\n- **string**: السلسلة النصية المطلوب الاستخراج منها.\n- **start**: قيمة العدد الصحيح التي تُحدد مكان بدء الأحرف التي تم إرجاعها.\n- **length**: عدد الأحرف المراد استخراجها.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"تُرجع سلسلة نصية تمت إزالة جميع المسافات البادئة أو المسافات اللاحقة أو الأحرف المحددة الأخرى منها. ستقوم القيمة LEADING بقص الجانب الأمامي من السلسلة النصية، وستقوم القيمة TRAILING بقص الجانب الخلفي من السلسلة النصية، بينما ستقوم القيمة BOTH بقص كلا جانبي السلسلة النصية.","examples":"\n##### أمثلة\n\nتُرجع 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nتُرجع '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nتُرجع 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع سلسلة نصية تمت إزالة جميع المسافات البادئة أو المسافات اللاحقة أو الأحرف المحددة الأخرى منها. ستقوم القيمة LEADING بقص الجانب الأمامي من السلسلة النصية، وستقوم القيمة TRAILING بقص الجانب الخلفي من السلسلة النصية، بينما ستقوم القيمة BOTH بقص كلا جانبي السلسلة النصية.\n\n**معلمات**\n\n- **side**: جانب السلسلة النصية حيث ستتم إزالة المسافة (المسافات) أو الحرف (الأحرف). القيم المحتملة: `LEADING`، `TRAILING`، `BOTH`.\n- **character**: الحرف (الأحرف) الذي سيتم اقتطاعه من السلسلة النصية.\n- **string**: السلسلة النصية المطلوب اقتطاعها.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"تُحول كل الأحرف في السلسلة النصية إلى أحرف كبيرة.","examples":"\n##### مثال\n\nتُرجع 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُحول كل الأحرف في السلسلة النصية إلى أحرف كبيرة.\n\n**المعلمة**\n\n- **string**: السلسلة المطلوب تحويلها إلى أحرف كبيرة.\n\n**إرجاع القيمة**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"date_functions","title":"دوال التاريخ","items":[{"type":"function","name":"current_date","bundle":"date","description":"تُرجع التاريخ الحالي بالتوقيت العالمي المنسق.","examples":"\n##### مثال\n\nتُرجع التاريخ الحالي بالتوقيت العالمي المنسق.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع التاريخ الحالي بالتوقيت العالمي المنسق.\n\n**إرجاع القيمة**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"تُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني.","examples":"\n##### مثال\n\nتُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني.\n\n**إرجاع القيمة**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"تُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني والميلي ثانية.","examples":"\n##### مثال\n\nتُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني والميلي ثانية.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع التاريخ والوقت الحاليين بتوقيت UTC بالساعات والدقائق والثواني والميلي ثانية.\n\n**إرجاع القيمة**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"تُرجع جزءًا فرديًا من التاريخ/الزمن، مثل السنة أو الشهر أو اليوم أو الساعة أو الدقيقة أو الثانية.","examples":"\n##### أمثلة\n\nتُرجع 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nتُرجع 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nتُرجع 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"تُرجع جزءًا فرديًا من التاريخ/الزمن، مثل السنة أو الشهر أو اليوم أو الساعة أو الدقيقة أو الثانية.\n\n**معلمات**\n\n- **part**: الجزء المراد استخراجه من التاريخ. القيم المحتملة: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: التاريخ المطلوب استخراج جزء منه.\n\n**إرجاع القيمة**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]