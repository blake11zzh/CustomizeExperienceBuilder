[{"id":"date_functions","title":"Datofunktioner","items":[{"type":"function","name":"current_date","bundle":"date","description":"Returnerer den aktuelle dato i UTC-tid","examples":"\n##### Eksempel\n\nReturnerer den aktuelle dato i UTC-tid\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den aktuelle dato i UTC-tid\n\n**Returværdi**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Returnerer den aktuelle UTC-dato og -tid i timer, minutter og sekunder.","examples":"\n##### Eksempel\n\nReturnerer den aktuelle UTC-dato og -tid i timer, minutter og sekunder.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den aktuelle UTC-dato og -tid i timer, minutter og sekunder.\n\n**Returværdi**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Returnerer den aktuelle UTC-dato og -tid i timer, minutter, sekunder og millisekunder.","examples":"\n##### Eksempel\n\nReturnerer den aktuelle UTC-dato og -tid i timer, minutter, sekunder og millisekunder.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den aktuelle UTC-dato og -tid i timer, minutter, sekunder og millisekunder.\n\n**Returværdi**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Returnerer en enkelt del af dato/tid, f.eks. år, måned, dag, time, minut eller sekund.","examples":"\n##### Eksempler\n\nReturnerer 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nReturnerer 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nReturnerer 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer en enkelt del af dato/tid, f.eks. år, måned, dag, time, minut eller sekund.\n\n**Parametre**\n\n- **part**: Den del, der skal udtrækkes fra datoen. Mulige værdier: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Den dato, der skal udtrækkes en del fra.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Numeriske funktioner","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Returnerer den absolutte værdi af tallet.","examples":"\n##### Eksempel\n\nReturnerer 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den absolutte værdi af tallet.\n\n**parameter**\n\n- **number**: Et tal, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Returnerer arc-cosinus af et tal.","examples":"\n##### Eksempel\n\nReturnerer 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer arc-cosinus af et tal.\n\n**parameter**\n\n- **number**: Et tal mellem -1 og 1, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Returnerer arc-sinus af et tal.","examples":"\n##### Eksempel\n\nReturnerer 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer arc-sinus af et tal.\n\n**parameter**\n\n- **number**: Et tal mellem -1 og 1, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Returnerer arc-tangens af et tal.","examples":"\n##### Eksempel\n\nReturnerer 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer arc-tangens af et tal.\n\n**parameter**\n\n- **number**: Et tal, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Konverterer en værdi fra én datatype til den anden. Paramteren dataType bestemmer, hvilken type værdien konverteres til. FLOAT konverterer værdien til en dobbeltværdi, INTEGER konverterer værdien til et heltal osv.","examples":"\n##### Eksempler\n\nReturnerer 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nReturnerer '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nReturnerer '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterer en værdi fra én datatype til den anden. Paramteren dataType bestemmer, hvilken type værdien konverteres til. FLOAT konverterer værdien til en dobbeltværdi, INTEGER konverterer værdien til et heltal osv.\n\n**Parametre**\n\n- **value**: Den værdi, der skal konverteres til en anden datatype.\n- **dataType**: Den datatype, værdien skal konverteres til. Mulige værdier: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Returværdi**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Returnerer det mindste heltal, der er større end eller lig med tallet.","examples":"\n##### Eksempel\n\nReturnerer 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer det mindste heltal, der er større end eller lig med tallet.\n\n**parameter**\n\n- **number**: Det tal, der skal rundes op.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Returnerer den trigonometrisk cosinus af tallet, der antages at være en vinkel i radianer.","examples":"\n##### Eksempel\n\nReturnerer -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den trigonometrisk cosinus af tallet, der antages at være en vinkel i radianer.\n\n**parameter**\n\n- **number**: En vinkel i radianer, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Returnerer det største heltal, der er mindre end eller lig med tallet.","examples":"\n##### Eksempel\n\nReturnerer 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer det største heltal, der er mindre end eller lig med tallet.\n\n**parameter**\n\n- **number**: Det tal, der skal rundes ned.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Returnerer den naturlige logaritme (grundtallet e) af tallet.","examples":"\n##### Eksempel\n\nReturnerer 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den naturlige logaritme (grundtallet e) af tallet.\n\n**parameter**\n\n- **number**: Et tal, som er større end 0, og som handlingen skal udføres på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Returnerer grundtal-10 logaritmen af tallet.","examples":"\n##### Eksempel\n\nReturnerer 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer grundtal-10 logaritmen af tallet.\n\n**parameter**\n\n- **number**: Et tal, som der skal udføres en handling på, og som er større end 0.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Returnerer restværdien efter at have divideret tallet med en divisor. Både det, der skal divideres, og divisoren skal være heltal.","examples":"\n##### Eksempel\n\nReturnerer 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer restværdien efter at have divideret tallet med en divisor. Både det, der skal divideres, og divisoren skal være heltal.\n\n**Parametre**\n\n- **x**: Tallet repræsenterer det, der skal divideres.\n- **y**: Tallet repræsenterer divisoren.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Returnerer `NULL`, hvis udtryk1 er lig med udtryk2, ellers returneres udtryk1. Værdier for udtryk1 og udtryk2 skal være den samme type. NULLIF anvendes normalt til at undgå dividér-med-nul-fejl ved at indstille udtryk2 til 0.","examples":"\n##### Eksempler\n\nReturnerer `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nReturnerer 32\n\n```sql\nNULLIF(32, 0)\n```\n\nReturnerer `null`, hvis POP18 er lig med 0, ellers returneres værdien TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer `NULL`, hvis udtryk1 er lig med udtryk2, ellers returneres udtryk1. Værdier for udtryk1 og udtryk2 skal være den samme type. NULLIF anvendes normalt til at undgå dividér-med-nul-fejl ved at indstille udtryk2 til 0.\n\n**Parametre**\n\n- **expression1**: En værdi, som der skal udføres en handling på.\n- **expression2**: En værdi, som der skal udføres en handling på.\n\n**Returværdi**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Returnerer værdien af tallet, der er opløftet til den angivne potens.","examples":"\n##### Eksempel\n\nReturnerer 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer værdien af tallet, der er opløftet til den angivne potens.\n\n**Parametre**\n\n- **x**: Det tal, som der skal udføres en handling på.\n- **y**: Eksponenten angiver det antal gange, som tallet skal ganges med sig selv.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Afrunder tallet til den angivne længde.","examples":"\n##### Eksempler\n\nReturnerer 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nReturnerer 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Afrunder tallet til den angivne længde.\n\n**Parametre**\n\n- **number**: Det tal, der skal afrundes.\n- **length**: Det antal decimalpladser, som tallet skal afrundes til. En positiv længde afrunder tallet til den angivne decimal. En negativ længde afrunder tallet til venstre for decimalpunktet.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Returnerer fortegnet på et angivet tal. Et negativt tal returnerer -1. Et positivt tal returnerer 1.","examples":"\n##### Eksempler\n\nReturnerer -1\n\n```sql\nSIGN(-132)\n```\n\nReturnerer 0\n\n```sql\nSIGN(0)\n```\n\nReturnerer 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer fortegnet på et angivet tal. Et negativt tal returnerer -1. Et positivt tal returnerer 1.\n\n**parameter**\n\n- **number**: Et tal, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Returnerer den trigonometrisk sinus af tallet, der antages at være en vinkel i radianer.","examples":"\n##### Eksempel\n\nReturnerer 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den trigonometrisk sinus af tallet, der antages at være en vinkel i radianer.\n\n**parameter**\n\n- **number**: En vinkel i radianer, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Returnerer tangens for et tal, der antages at være en vinkel i radianer.","examples":"\n##### Eksempel\n\nReturnerer 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer tangens for et tal, der antages at være en vinkel i radianer.\n\n**parameter**\n\n- **number**: En vinkel i radianer, som der skal udføres en handling på.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Returnerer et afkortet tal.","examples":"\n##### Eksempler\n\nReturnerer 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nReturnerer 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nReturnerer 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer et afkortet tal.\n\n**Parametre**\n\n- **number**: Et tal, der skal afkortes.\n- **decimals**: En positiv værdi afkorter tallet til den angivne decimal. En negativ værdi afkorter tallet til venstre for decimalpunktet.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Strengfunktioner","items":[{"type":"function","name":"char_length","bundle":"string","description":"Returnerer antal tegn i en tekststreng som et heltal.","examples":"\n##### Eksempel\n\nReturnerer 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer antal tegn i en tekststreng som et heltal.\n\n**parameter**\n\n- **string**: Den tekststreng, hvis længde skal returneres.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Returnerer den første værdi på listen, der ikke er `NULL`. Alle værdier, der overføres til funktionen, skal være af den samme type, det gælder dog ikke `NULL`-værdier.","examples":"\n##### Eksempler\n\nReturnerer 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nReturnerer -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den første værdi på listen, der ikke er `NULL`. Alle værdier, der overføres til funktionen, skal være af den samme type, det gælder dog ikke `NULL`-værdier.\n\n**Parametre**\n\n- **value1**: Den første værdi på listen.\n- **valueN**: Den eller de efterfølgende værdier på listen.\n\n**Returværdi**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Sætter to strenge sammen.","examples":"\n##### Eksempel\n\nReturnerer 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Sætter to strenge sammen.\n\n**Parametre**\n\n- **string1**: Den første tekststreng.\n- **string2**: Den tekststreng, der skal sammenkædes til den første tekststreng.\n\n**Returværdi**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Returnerer brugernavnet på den bruger, der i øjeblikket er logget ind på portalen.","examples":"\n##### Eksempel\n\nReturnerer brugernavnet på den bruger, der i øjeblikket er logget ind på portalen.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer brugernavnet på den bruger, der i øjeblikket er logget ind på portalen.\n\n**Returværdi**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Konverterer alle tegn i tekststrengen til små bogstaver.","examples":"\n##### Eksempel\n\nReturnerer 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterer alle tegn i tekststrengen til små bogstaver.\n\n**parameter**\n\n- **string**: Den tekststreng, der skal konverteres til små bogstaver.\n\n**Returværdi**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Returnerer den første forekomst af en understreng i en anden tekststreng. Returnerer 0, hvis substreng ikke findes.","examples":"\n##### Eksempler\n\nReturnerer 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nReturnerer 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer den første forekomst af en understreng i en anden tekststreng. Returnerer 0, hvis substreng ikke findes.\n\n**Parametre**\n\n- **substring**: Den tekststreng, der skal søges efter.\n- **string**: Den streng, der søges efter i forbindelse med understrengen.\n\n**Returværdi**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Returnerer undersættet af tegn i en tekststreng fra et startpunkt til den angivne strenglængde.","examples":"\n##### Eksempel\n\nReturnerer 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer undersættet af tegn i en tekststreng fra et startpunkt til den angivne strenglængde.\n\n**Parametre**\n\n- **string**: Den tekststreng, der skal udtrækkes fra.\n- **start**: Heltalsværdien, der angiver, hvor de returnerede tegn starter.\n- **length**: Det antal tegn, der skal udtrækkes.\n\n**Returværdi**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Returnerer undersættet af tegn i en tekststreng fra et startpunkt til den angivne strenglængde.","examples":"\n##### Eksempler\n\nReturnerer 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nReturnerer 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer undersættet af tegn i en tekststreng fra et startpunkt til den angivne strenglængde.\n\n**Parametre**\n\n- **string**: Den tekststreng, der skal udtrækkes fra.\n- **start**: Heltalsværdien, der angiver, hvor de returnerede tegn starter.\n- **length**: Det antal tegn, der skal udtrækkes.\n\n**Returværdi**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Returnerer en tekststreng, hvor alle foranstillede og/eller efterstillede mellemrum eller andre angivne tegn er blevet fjernet. LEADING vil beskære den foranstillede side af tekststrengen, TRAILING beskærer den efterstillede side af tekststrengen, mens BOTH beskærer begge sider af tekststrengen.","examples":"\n##### Eksempler\n\nReturnerer 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nReturnerer '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nReturnerer 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnerer en tekststreng, hvor alle foranstillede og/eller efterstillede mellemrum eller andre angivne tegn er blevet fjernet. LEADING vil beskære den foranstillede side af tekststrengen, TRAILING beskærer den efterstillede side af tekststrengen, mens BOTH beskærer begge sider af tekststrengen.\n\n**Parametre**\n\n- **side**: Den side af tekststrengen, hvor mellemrum eller tegn fjernes. Mulige værdier: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Det eller de tegn, der skal beskæres fra tekststrengen.\n- **string**: Den tekststreng, der skal beskæres.\n\n**Returværdi**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Konverterer alle tegn i tekststrengen til store bogstaver.","examples":"\n##### Eksempel\n\nReturnerer 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konverterer alle tegn i tekststrengen til store bogstaver.\n\n**parameter**\n\n- **string**: Den streng, der skal konverteres til store bogstaver.\n\n**Returværdi**: String"}},"parametersInfo":{"min":1,"max":1}}]}]