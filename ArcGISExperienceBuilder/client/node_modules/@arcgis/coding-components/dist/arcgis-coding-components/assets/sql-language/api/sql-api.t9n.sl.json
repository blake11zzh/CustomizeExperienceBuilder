[{"id":"date_functions","title":"Datumske funkcije","items":[{"type":"function","name":"current_date","bundle":"date","description":"Vrne trenutni datum v UTC.","examples":"\n##### Primer\n\nVrne trenutni datum v UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne trenutni datum v UTC.\n\n**Vrnjena vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Vrne trenutni datum po UTC-ju in čas v urah, minutah in sekundah.","examples":"\n##### Primer\n\nVrne trenutni datum po UTC-ju in čas v urah, minutah in sekundah.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne trenutni datum po UTC-ju in čas v urah, minutah in sekundah.\n\n**Vrnjena vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Vrne trenutni datum po UTC-ju in čas v urah, minutah, sekundah in milisekundah.","examples":"\n##### Primer\n\nVrne trenutni datum po UTC-ju in čas v urah, minutah, sekundah in milisekundah.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne trenutni datum po UTC-ju in čas v urah, minutah, sekundah in milisekundah.\n\n**Vrnjena vrednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Vrne en del datuma/časa, kot je leto, mesec, dan, ura, minuta ali sekunda.","examples":"\n##### Primeri\n\nVrne 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nVrne 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nVrne 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne en del datuma/časa, kot je leto, mesec, dan, ura, minuta ali sekunda.\n\n**Parametri**\n\n- **part**: Del, ki ga želite ekstrahirati iz datuma. Možne vrednosti: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Datum, iz katerega želite ekstrahirati del.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Funkcije niza","items":[{"type":"function","name":"char_length","bundle":"string","description":"Vrne število znakov v besedilnem nizu kot celo število.","examples":"\n##### Primer\n\nVrne 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne število znakov v besedilnem nizu kot celo število.\n\n**Parameter**\n\n- **string**: Besedilni niz, katerega dolžina bo vrnjena.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Vrne prvo vrednost v seznamu, ki ni `NULL`. Vse vrednosti, posredovane v funkcijo, morajo biti istega tipa, razen vrednosti `NULL`.","examples":"\n##### Primeri\n\nVrne 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nVrne -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne prvo vrednost v seznamu, ki ni `NULL`. Vse vrednosti, posredovane v funkcijo, morajo biti istega tipa, razen vrednosti `NULL`.\n\n**Parametri**\n\n- **value1**: Prva vrednost v seznamu.\n- **valueN**: Naslednje vrednosti na seznamu.\n\n**Vrnjena vrednost**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Spoji dva niza skupaj.","examples":"\n##### Primer\n\nVrne 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Spoji dva niza skupaj.\n\n**Parametri**\n\n- **string1**: Prvi besedilni niz.\n- **string2**: Besedilni niz, ki bo spojen s prvim besedilnim nizom.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Vrne uporabniško ime za trenutno prijavljenega uporabnika portala.","examples":"\n##### Primer\n\nVrne uporabniško ime za trenutno prijavljenega uporabnika portala.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne uporabniško ime za trenutno prijavljenega uporabnika portala.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Pretvori vse znake v besedilnem nizu v male črke.","examples":"\n##### Primer\n\nVrne 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvori vse znake v besedilnem nizu v male črke.\n\n**Parameter**\n\n- **string**: Besedilni niz, ki bo pretvorjen v male črke.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Vrne prvi pojav podniza v drugem besedilnem nizu. Vrne 0, če podniz ni najden.","examples":"\n##### Primeri\n\nVrne 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nVrne 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne prvi pojav podniza v drugem besedilnem nizu. Vrne 0, če podniz ni najden.\n\n**Parametri**\n\n- **substring**: Besedilni niz za iskanje.\n- **string**: Niz, v katerem se bo iskal podniz.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Vrne podizbor znakov v besedilnem nizu od začetne točke do navedene dolžine niza.","examples":"\n##### Primer\n\nVrne 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne podizbor znakov v besedilnem nizu od začetne točke do navedene dolžine niza.\n\n**Parametri**\n\n- **string**: Besedilni niz za ekstrahiranje.\n- **start**: Vrednost celega števila, ki določa, kje se bodo začeli vrnjeni znaki.\n- **length**: Število znakov za ekstrakcijo.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Vrne podizbor znakov v besedilnem nizu od začetne točke do navedene dolžine niza.","examples":"\n##### Primeri\n\nVrne 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nVrne 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne podizbor znakov v besedilnem nizu od začetne točke do navedene dolžine niza.\n\n**Parametri**\n\n- **string**: Besedilni niz za ekstrahiranje.\n- **start**: Vrednost celega števila, ki določa, kje se bodo začeli vrnjeni znaki.\n- **length**: Število znakov za ekstrakcijo.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Vrne besedilni niz, kjer so vsi začetni in/ali končni presledki ali drugi navedeni znaki odstranjeni. LEADING bo obrezal vodilno stran besedilnega niza, TRAILING bo obrezal zaključno stran besedilnega niza, medtem ko bo BOTH obrezal obe strani besedilnega niza.","examples":"\n##### Primeri\n\nVrne 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nVrne 'hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nVrne 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne besedilni niz, kjer so vsi začetni in/ali končni presledki ali drugi navedeni znaki odstranjeni. LEADING bo obrezal vodilno stran besedilnega niza, TRAILING bo obrezal zaključno stran besedilnega niza, medtem ko bo BOTH obrezal obe strani besedilnega niza.\n\n**Parametri**\n\n- **side**: Stran besedilnega niza, kjer bodo presledki ali znaki odstranjeni. Možne vrednosti: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Znaki, ki bodo odrezani iz besedilnega niza.\n- **string**: Besedilni niz, ki ga je treba obrezati.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Pretvori vse znake v besedilnem nizu v velike črke.","examples":"\n##### Primer\n\nVrne 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvori vse znake v besedilnem nizu v velike črke.\n\n**Parameter**\n\n- **string**: Niz, ki bo pretvorjen v velike črke.\n\n**Vrnjena vrednost**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"numeric_functions","title":"Številske funkcije","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Vrne absolutno vrednost števila.","examples":"\n##### Primer\n\nVrne 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne absolutno vrednost števila.\n\n**Parameter**\n\n- **number**: Številka, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Vrne arkus kosinus števila.","examples":"\n##### Primer\n\nVrne 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne arkus kosinus števila.\n\n**Parameter**\n\n- **number**: Številka med –1 in 1, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Vrne arkus sinus števila.","examples":"\n##### Primer\n\nVrne 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne arkus sinus števila.\n\n**Parameter**\n\n- **number**: Številka med –1 in 1, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Vrne arkus tangens števila.","examples":"\n##### Primer\n\nVrne 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne arkus tangens števila.\n\n**Parameter**\n\n- **number**: Številka, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Pretvori vrednost iz enega tipa podatkov v drugega. Parameter dataType bo določil, v katero vrsto se vrednost pretvori. FLOAT pretvori vrednost v dvojno, INTEGER pretvori vrednost v celo število itd.","examples":"\n##### Primeri\n\nVrne 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nVrne \"1:00 PM\"\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nVrne \"50\"\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvori vrednost iz enega tipa podatkov v drugega. Parameter dataType bo določil, v katero vrsto se vrednost pretvori. FLOAT pretvori vrednost v dvojno, INTEGER pretvori vrednost v celo število itd.\n\n**Parametri**\n\n- **value**: Vrednost, ki bo pretvorjena v drug tip podatkov.\n- **dataType**: Tip podatkov, v katerega želite pretvoriti vrednost. Možne vrednosti: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Vrnjena vrednost**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Vrne najmanjše celo število, ki je večje ali enako številu.","examples":"\n##### Primer\n\nVrne 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne najmanjše celo število, ki je večje ali enako številu.\n\n**Parameter**\n\n- **number**: Številka za zaokroževanje navzgor.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Vrne trigonometrični kosinus števila, za katerega se predvideva, da je kot v radianih.","examples":"\n##### Primer\n\nVrne -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne trigonometrični kosinus števila, za katerega se predvideva, da je kot v radianih.\n\n**Parameter**\n\n- **number**: Kot v radianih, na katerem se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Vrne največje celo število, ki je manjše ali enako številu.","examples":"\n##### Primer\n\nVrne 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne največje celo število, ki je manjše ali enako številu.\n\n**Parameter**\n\n- **number**: Število, ki bo zaokroženo navzdol.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Vrne naravni logaritem (osnova e) od števila.","examples":"\n##### Primer\n\nVrne 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne naravni logaritem (osnova e) od števila.\n\n**Parameter**\n\n- **number**: Številka večja od 0, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Vrne logaritem števila z osnovo 10.","examples":"\n##### Primer\n\nVrne 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne logaritem števila z osnovo 10.\n\n**Parameter**\n\n- **number**: Številka, na kateri se izvaja operacija, ki je večja od 0.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Vrne ostanek po deljenju deljenca z deliteljem. Tako deljenec kot delitelj morata biti cela števila.","examples":"\n##### Primer\n\nVrne 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne ostanek po deljenju deljenca z deliteljem. Tako deljenec kot delitelj morata biti cela števila.\n\n**Parametri**\n\n- **x**: Številka, ki predstavlja deljenca.\n- **y**: Številka, ki predstavlja delitelja.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Vrne \"NULL\", če je izraz1 enak izrazu2, drugače vrne izraz1. Vrednosti za izraz1 in izraz2 morata biti istega tipa. NULLIF se običajno uporablja za preprečevanje napak deljenja z ničlo z nastavitvijo izraza2 na 0.","examples":"\n##### Primeri\n\nVrne `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nVrne 32\n\n```sql\nNULLIF(32, 0)\n```\n\nVrne `null` če je POP18 enak 0, drugače vrne vrednost TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne \"NULL\", če je izraz1 enak izrazu2, drugače vrne izraz1. Vrednosti za izraz1 in izraz2 morata biti istega tipa. NULLIF se običajno uporablja za preprečevanje napak deljenja z ničlo z nastavitvijo izraza2 na 0.\n\n**Parametri**\n\n- **expression1**: Vrednost, na kateri se izvaja operacija.\n- **expression2**: Vrednost, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Vrne vrednost števila, povečano na določeno potenco.","examples":"\n##### Primer\n\nVrne 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne vrednost števila, povečano na določeno potenco.\n\n**Parametri**\n\n- **x**: Številka, na kateri se izvaja operacija.\n- **y**: Eksponent, ki prikazuje, kolikokrat je število treba množiti s samim sabo.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Zaokroži število na določeno dolžino.","examples":"\n##### Primeri\n\nVrne 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nVrne 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Zaokroži število na določeno dolžino.\n\n**Parametri**\n\n- **number**: Število za zaokroževanje.\n- **length**: Število decimalnih mest, na katera se zaokroži število. Pozitivna dolžina zaokroži število na določeno decimalno mesto. Negativna dolžina bo zaokrožila število levo od decimalne vejice.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Vrne predznak danega števila. Negativno število bo vrnilo -1. Pozitivno število bo vrnilo 1.","examples":"\n##### Primeri\n\nVrne -1\n\n```sql\nSIGN(-132)\n```\n\nVrne 0\n\n```sql\nSIGN(0)\n```\n\nVrne 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne predznak danega števila. Negativno število bo vrnilo -1. Pozitivno število bo vrnilo 1.\n\n**Parameter**\n\n- **number**: Številka, na kateri se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Vrne trigonometrični sinus števila, za katerega se predvideva, da je kot v radianih.","examples":"\n##### Primer\n\nVrne 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne trigonometrični sinus števila, za katerega se predvideva, da je kot v radianih.\n\n**Parameter**\n\n- **number**: Kot v radianih, na katerem se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Vrne tangens števila, za katerega se predvideva, da je kot v radianih.","examples":"\n##### Primer\n\nVrne 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne tangens števila, za katerega se predvideva, da je kot v radianih.\n\n**Parameter**\n\n- **number**: Kot v radianih, na katerem se izvaja operacija.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Vrne skrajšano število.","examples":"\n##### Primeri\n\nVrne 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nVrne 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nVrne 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vrne skrajšano število.\n\n**Parametri**\n\n- **number**: Število, ki bo krajšano.\n- **decimals**: Pozitivna vrednost skrajša število na določeno decimalno mesto. Negativna vrednost skrajša število levo od decimalne vejice.\n\n**Vrnjena vrednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]