[{"id":"date_functions","title":"Dátumové funkcie","items":[{"type":"function","name":"current_date","bundle":"date","description":"Vracia aktuálny dátum v UTC.","examples":"\n##### Príklad\n\nVracia aktuálny dátum v UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia aktuálny dátum v UTC.\n\n**Návratová hodnota**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Vracia aktuálny UTC dátum a čas v hodinách, minútach a sekundách.","examples":"\n##### Príklad\n\nVracia aktuálny UTC dátum a čas v hodinách, minútach a sekundách.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia aktuálny UTC dátum a čas v hodinách, minútach a sekundách.\n\n**Návratová hodnota**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Vracia aktuálny UTC dátum a čas v hodinách, minútach, sekundách a milisekundách.","examples":"\n##### Príklad\n\nVracia aktuálny UTC dátum a čas v hodinách, minútach, sekundách a milisekundách.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia aktuálny UTC dátum a čas v hodinách, minútach, sekundách a milisekundách.\n\n**Návratová hodnota**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Vracia jednu časť dátumu a času, ako je rok, mesiac, deň, hodina, minúta alebo sekunda.","examples":"\n##### Príklady\n\nVracia 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nVracia 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nVracia 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia jednu časť dátumu a času, ako je rok, mesiac, deň, hodina, minúta alebo sekunda.\n\n**Parametre**\n\n- **part**: Časť na extrahovanie z dátumu. Možné hodnoty: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Dátum, z ktorého sa má časť vybrať.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Numerické funkcie","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Vracia absolútnu hodnotu čísla.","examples":"\n##### Príklad\n\nVracia 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia absolútnu hodnotu čísla.\n\n**Parameter**\n\n- **number**: Číslo, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Vráti arc kosínus čísla.","examples":"\n##### Príklad\n\nVracia 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti arc kosínus čísla.\n\n**Parameter**\n\n- **number**: Číslo medzi -1 a 1, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Vráti arc sínus čísla.","examples":"\n##### Príklad\n\nVracia 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti arc sínus čísla.\n\n**Parameter**\n\n- **number**: Číslo medzi -1 a 1, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Vracia arc tangens čísla.","examples":"\n##### Príklad\n\nVracia 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia arc tangens čísla.\n\n**Parameter**\n\n- **number**: Číslo, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Konvertuje hodnotu z jedného dátového typu na druhý. Parameter dataType určí, na aký typ sa hodnota skonvertuje. FLOAT konvertuje hodnotu na double, INTEGER konvertuje hodnotu na celé číslo, atď.","examples":"\n##### Príklady\n\nVracia 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nVracia \"13:00\"\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nVracia \"50\"\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje hodnotu z jedného dátového typu na druhý. Parameter dataType určí, na aký typ sa hodnota skonvertuje. FLOAT konvertuje hodnotu na double, INTEGER konvertuje hodnotu na celé číslo, atď.\n\n**Parametre**\n\n- **value**: Hodnota na prevod na iný dátový typ.\n- **dataType**: Dátový typ, na ktorý sa má hodnota previesť. Možné hodnoty: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Návratová hodnota**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Vráti najmenšie celé číslo väčšie alebo rovné číslu.","examples":"\n##### Príklad\n\nVracia 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti najmenšie celé číslo väčšie alebo rovné číslu.\n\n**Parameter**\n\n- **number**: Číslo na zaokrúhlenie nahor.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Vráti trigonometrický kosínus čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.","examples":"\n##### Príklad\n\nVracia -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti trigonometrický kosínus čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.\n\n**Parameter**\n\n- **number**: Uhol v radiánoch, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Vráti najväčšie celé číslo menšie alebo rovné číslu.","examples":"\n##### Príklad\n\nVracia 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti najväčšie celé číslo menšie alebo rovné číslu.\n\n**Parameter**\n\n- **number**: Číslo na zaokrúhlenie nadol.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Vracia prirodzený logaritmus (základ e) čísla.","examples":"\n##### Príklad\n\nVracia 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia prirodzený logaritmus (základ e) čísla.\n\n**Parameter**\n\n- **number**: Číslo väčšie ako 0, na ktorom sa má vykonať operácia.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Vracia základ-10 logaritmu čísla.","examples":"\n##### Príklad\n\nVracia 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia základ-10 logaritmu čísla.\n\n**Parameter**\n\n- **number**: Číslo väčšie ako 0, na ktorom sa má vykonať operácia.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Vracia zvyšok po delení čísla deliteľom. Delenec aj deliteľ musia byť celé čísla.","examples":"\n##### Príklad\n\nVracia 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia zvyšok po delení čísla deliteľom. Delenec aj deliteľ musia byť celé čísla.\n\n**Parametre**\n\n- **x**: Číslo reprezentujúce delenec.\n- **y**: Číslo reprezentujúce deliteľa.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Vracia \"NULL\", ak sa výraz 1 rovná výrazu 2, inak vracia výraz 1. Hodnoty pre výraz 1 a výraz 2 musia byť rovnakého typu. NULLIF je bežne používané na zabránenie chybám delenia nulou nastavením výrazu2 na 0.","examples":"\n##### Príklady\n\nVracia `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nVracia 32\n\n```sql\nNULLIF(32, 0)\n```\n\nVracia `null`, ak sa POP18 rovná 0, inak vracia hodnotu TOTALPOP/POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia \"NULL\", ak sa výraz 1 rovná výrazu 2, inak vracia výraz 1. Hodnoty pre výraz 1 a výraz 2 musia byť rovnakého typu. NULLIF je bežne používané na zabránenie chybám delenia nulou nastavením výrazu2 na 0.\n\n**Parametre**\n\n- **expression1**: Hodnota, na ktorej sa má vykonať operácia.\n- **expression2**: Hodnota, na ktorej sa má vykonať operácia.\n\n**Návratová hodnota**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Vracia hodnotu čísla umocneného na špecifikovanú mocninu.","examples":"\n##### Príklad\n\nVracia 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia hodnotu čísla umocneného na špecifikovanú mocninu.\n\n**Parametre**\n\n- **x**: Číslo, na ktorom vykonať operáciu.\n- **y**: Exponent označujúci, koľkokrát sa má vynásobiť samotné číslo.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Zaokrúhľuje číslo na špecifikovanú dĺžku.","examples":"\n##### Príklady\n\nVracia 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nVracia 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Zaokrúhľuje číslo na špecifikovanú dĺžku.\n\n**Parametre**\n\n- **number**: Číslo na zaokrúhlenie.\n- **length**: Počet desatinných miest, na ktoré číslo zaokrúhliť. Kladná dĺžka zaokrúhľuje číslo na špecifikovaný počet desatinných miest. Záporná dĺžka zaokrúhli číslo naľavo od desatinnej čiarky.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Vracia znamienko daného čísla. Záporné číslo vráti -1. Kladné číslo vráti 1.","examples":"\n##### Príklady\n\nVracia -1\n\n```sql\nSIGN(-132)\n```\n\nVracia 0\n\n```sql\nSIGN(0)\n```\n\nVracia 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia znamienko daného čísla. Záporné číslo vráti -1. Kladné číslo vráti 1.\n\n**Parameter**\n\n- **number**: Číslo, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Vráti trigonometrický sínus čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.","examples":"\n##### Príklad\n\nVracia 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti trigonometrický sínus čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.\n\n**Parameter**\n\n- **number**: Uhol v radiánoch, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Vráti tangens čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.","examples":"\n##### Príklad\n\nVracia 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti tangens čísla, o ktorom sa predpokladá, že je to uhol v radiánoch.\n\n**Parameter**\n\n- **number**: Uhol v radiánoch, na ktorom vykonať operáciu.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Vracia skrátené číslo.","examples":"\n##### Príklady\n\nVracia 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nVracia 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nVracia 1 900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia skrátené číslo.\n\n**Parametre**\n\n- **number**: Číslo na skrátenie.\n- **decimals**: Kladná hodnota skracuje číslo na špecifikovaný počet desatinných miest. Záporná dĺžka skracuje číslo naľavo od desatinnej čiarky.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Reťazcové funkcie","items":[{"type":"function","name":"char_length","bundle":"string","description":"Vráti počet znakov v textovom reťazci ako celé číslo.","examples":"\n##### Príklad\n\nVracia 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vráti počet znakov v textovom reťazci ako celé číslo.\n\n**Parameter**\n\n- **string**: Textový reťazec na vrátenie dĺžky.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Vracia prvú hodnotu v zozname, ktorá nie je `NULL`. Všetky hodnoty, ktoré prešli do funkcie, musia byť rovnakého typu, s výnimkou hodnôt `NULL`.","examples":"\n##### Príklady\n\nVracia 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nVracia -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia prvú hodnotu v zozname, ktorá nie je `NULL`. Všetky hodnoty, ktoré prešli do funkcie, musia byť rovnakého typu, s výnimkou hodnôt `NULL`.\n\n**Parametre**\n\n- **value1**: Prvá hodnota v zozname.\n- **valueN**: Následná hodnota(y) v zozname.\n\n**Návratová hodnota**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Spája dva reťazce dokopy.","examples":"\n##### Príklad\n\nVracia 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Spája dva reťazce dokopy.\n\n**Parametre**\n\n- **string1**: Prvý textový reťazec.\n- **string2**: Textový reťazec na pripojenie k prvému textovému reťazcu.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Vracia používateľské meno používateľa, ktorý je aktuálne prihlásený do portálu.","examples":"\n##### Príklad\n\nVracia používateľské meno používateľa, ktorý je aktuálne prihlásený do portálu.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia používateľské meno používateľa, ktorý je aktuálne prihlásený do portálu.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Konvertuje všetky znaky v textovom reťazci na malé písmená.","examples":"\n##### Príklad\n\nVracia 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje všetky znaky v textovom reťazci na malé písmená.\n\n**Parameter**\n\n- **string**: Textový reťazec na prevod na malé písmená.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Vracia prvý výskyt podreťazca v inom textovom reťazci. Vracia 0, ak nie je podreťazec nájdený.","examples":"\n##### Príklady\n\nVracia 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nVracia 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia prvý výskyt podreťazca v inom textovom reťazci. Vracia 0, ak nie je podreťazec nájdený.\n\n**Parametre**\n\n- **substring**: Textový reťazec na vyhľadávanie.\n- **string**: Reťazec, ktorý bude vyhľadaný pre podreťazec.\n\n**Návratová hodnota**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Vracia subset znakov v textovom reťazci zo začiatočného bodu do špecifikovanej dĺžky reťazca.","examples":"\n##### Príklad\n\nVracia 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia subset znakov v textovom reťazci zo začiatočného bodu do špecifikovanej dĺžky reťazca.\n\n**Parametre**\n\n- **string**: Textový reťazec, z ktorého extrahovať.\n- **start**: Hodnota celého čísla, ktoré špecifikuje, kde budú začínať vrátené znaky.\n- **length**: Počet znakov na extrahovanie.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Vracia subset znakov v textovom reťazci zo začiatočného bodu do špecifikovanej dĺžky reťazca.","examples":"\n##### Príklady\n\nVracia 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nVracia 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia subset znakov v textovom reťazci zo začiatočného bodu do špecifikovanej dĺžky reťazca.\n\n**Parametre**\n\n- **string**: Textový reťazec, z ktorého extrahovať.\n- **start**: Hodnota celého čísla, ktoré špecifikuje, kde budú začínať vrátené znaky.\n- **length**: Počet znakov na extrahovanie.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Vracia textový reťazec, kde boli odstránené všetky začiatočné alebo koncové medzery, alebo boli odstránené iné špecifikované znaky. LEADING oreže začiatočnú stranu textového reťazca, TRAILING oreže koncovú stranu textového reťazca a BOTH oreže obidve strany textového reťazca.","examples":"\n##### Príklady\n\nVracia 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nVracia '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nVracia 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vracia textový reťazec, kde boli odstránené všetky začiatočné alebo koncové medzery, alebo boli odstránené iné špecifikované znaky. LEADING oreže začiatočnú stranu textového reťazca, TRAILING oreže koncovú stranu textového reťazca a BOTH oreže obidve strany textového reťazca.\n\n**Parametre**\n\n- **side**: Strana textového reťazca, kde bude odstránená medzera(-y) alebo znak(-y). Možné hodnoty: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Znak(-y), ktoré budú orezané z textového reťazca.\n- **string**: Textový reťazec na orezanie.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Konvertuje všetky znaky v textovom reťazci na veľké písmená.","examples":"\n##### Príklad\n\nVracia 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertuje všetky znaky v textovom reťazci na veľké písmená.\n\n**Parameter**\n\n- **string**: Reťazec na konvertovanie na veľké písmená.\n\n**Návratová hodnota**: String"}},"parametersInfo":{"min":1,"max":1}}]}]