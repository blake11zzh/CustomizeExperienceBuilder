[{"id":"numeric_functions","title":"Brojčane funkcije","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Vraća apsolutnu vrijednost broja.","examples":"\n##### Primjer\n\nVraća 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća apsolutnu vrijednost broja.\n\n**Parametar**\n\n- **number**: Broj na kojem će se izvršiti operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Vraća arkosinus broja.","examples":"\n##### Primjer\n\nVraća 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arkosinus broja.\n\n**Parametar**\n\n- **number**: Broj između -1 i 1 na kojem se izvodi operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Vraća arksinus broja.","examples":"\n##### Primjer\n\nVraća 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arksinus broja.\n\n**Parametar**\n\n- **number**: Broj između -1 i 1 na kojem se izvodi operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Vraća arkus tangens broja.","examples":"\n##### Primjer\n\nVraća 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća arkus tangens broja.\n\n**Parametar**\n\n- **number**: Broj na kojem će se izvršiti operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Pretvara vrijednost jedne vrste podataka u drugu. Parametar dataType će odrediti u koju vrstu se vrijednost pretvara. FLOAT pretvara vrijednost u dvostruku, INTEGER pretvara vrijednost u cijeli broj, itd.","examples":"\n##### Primjeri\n\nVraća 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nVraća '13:00'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nVraća „50”\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvara vrijednost jedne vrste podataka u drugu. Parametar dataType će odrediti u koju vrstu se vrijednost pretvara. FLOAT pretvara vrijednost u dvostruku, INTEGER pretvara vrijednost u cijeli broj, itd.\n\n**Parametri**\n\n- **value**: Vrijednost za konvertiranje u drugu vrstu podataka.\n- **dataType**: Vrsta podataka u koju treba pretvoriti vrijednost. Moguće vrijednosti: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Povratna vrijednost**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Vraća najmanji cijeli broj koji je veći od ili jednak broju.","examples":"\n##### Primjer\n\nVraća 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća najmanji cijeli broj koji je veći od ili jednak broju.\n\n**Parametar**\n\n- **number**: Broj koji će se zaokružiti na veću vrijednost.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Vraća trigonometrijski kosinus broja za koji se pretpostavlja da je kut u radijanima.","examples":"\n##### Primjer\n\nVraća -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trigonometrijski kosinus broja za koji se pretpostavlja da je kut u radijanima.\n\n**Parametar**\n\n- **number**: Kut u radijanima na kojem se izvodi operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Vraća najveći cijeli broj koji je manji od ili jednak broju.","examples":"\n##### Primjer\n\nVraća 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća najveći cijeli broj koji je manji od ili jednak broju.\n\n**Parametar**\n\n- **number**: Broj koji će se zaokružiti na manju vrijednost.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Vraća prirodni logaritam (baza e) broja.","examples":"\n##### Primjer\n\nVraća 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prirodni logaritam (baza e) broja.\n\n**Parametar**\n\n- **number**: Broj veći od 0 na kojem treba izvesti operaciju.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Vraća logaritam baze 10 broja.","examples":"\n##### Primjer\n\nvraća 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća logaritam baze 10 broja.\n\n**Parametar**\n\n- **number**: Broj na kojem će se izvršiti operacija, a koji je veći od 0.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Vraća ostatak nakon dijeljenja djeljenika s djeliteljem. I djeljenik i djelitelj trebaju biti cijeli brojevi.","examples":"\n##### Primjer\n\nVraća 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća ostatak nakon dijeljenja djeljenika s djeliteljem. I djeljenik i djelitelj trebaju biti cijeli brojevi.\n\n**Parametri**\n\n- **x**: Broj koji predstavlja djeljenika.\n- **y**: Broj koji predstavlja djelitelja.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Vraća „NULL” ako je izraz1 jednak izrazu2, a u suprotnome vraća izraz1. Vrijednosti za izraz1 i izraz2 moraju biti jednake vrste. NULLIF se obično koristi za sprječavanje pogrešaka dijeljenja s nulom postavljanjem izraza2 na 0.","examples":"\n##### Primjeri\n\nVraća `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nVraća 32\n\n```sql\nNULLIF(32, 0)\n```\n\nVraća `null` ako je POP18 jednak 0, inače vraća vrijednost TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća „NULL” ako je izraz1 jednak izrazu2, a u suprotnome vraća izraz1. Vrijednosti za izraz1 i izraz2 moraju biti jednake vrste. NULLIF se obično koristi za sprječavanje pogrešaka dijeljenja s nulom postavljanjem izraza2 na 0.\n\n**Parametri**\n\n- **expression1**: Vrijednost na kojoj će se izvršiti operacija.\n- **expression2**: Vrijednost na kojoj će se izvršiti operacija.\n\n**Povratna vrijednost**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Vraća vrijednost broja dignutog na navedenu potenciju.","examples":"\n##### Primjer\n\nVraća 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća vrijednost broja dignutog na navedenu potenciju.\n\n**Parametri**\n\n- **x**: Broj na kojem će se izvršiti operacija.\n- **y**: Eksponent koji ukazuje koliko puta pomnožiti broj sa samim sobom.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Zaokružuje broj na određenu duljinu.","examples":"\n##### Primjeri\n\nVraća 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nVraća 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Zaokružuje broj na određenu duljinu.\n\n**Parametri**\n\n- **number**: Broj koji će se zaokružiti.\n- **length**: Broj decimalnih mjesta na koja će se zaokružiti broj. Pozitivna duljina zaokružuje broj na navedeno decimalno mjesto. Negativna duljina zaokružit će broj lijevo od decimalne točke.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Vraća predznak navedenog broja. Negativan broj će vratiti -1. Pozitivan broj će vratiti 1.","examples":"\n##### Primjeri\n\nVraća -1\n\n```sql\nSIGN(-132)\n```\n\nVraća 0\n\n```sql\nSIGN(0)\n```\n\nVraća 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća predznak navedenog broja. Negativan broj će vratiti -1. Pozitivan broj će vratiti 1.\n\n**Parametar**\n\n- **number**: Broj na kojem će se izvršiti operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Vraća trigonometrijski sinus broja za koji se pretpostavlja da je kut u radijanima.","examples":"\n##### Primjer\n\nVraća 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trigonometrijski sinus broja za koji se pretpostavlja da je kut u radijanima.\n\n**Parametar**\n\n- **number**: Kut u radijanima na kojem se izvodi operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Vraća tangens broja za koji se pretpostavlja da je kut u radijanima.","examples":"\n##### Primjer\n\nVraća 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća tangens broja za koji se pretpostavlja da je kut u radijanima.\n\n**Parametar**\n\n- **number**: Kut u radijanima na kojem se izvodi operacija.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Vraća skraćeni broj.","examples":"\n##### Primjeri\n\nVraća 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nVraća 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nVraća 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća skraćeni broj.\n\n**Parametri**\n\n- **number**: Broj koji će se skratiti.\n- **decimals**: Pozitivna vrijednost skraćuje broj na navedeno decimalno mjesto. Negativna vrijednost skraćuje broj lijevo od decimalne točke.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"date_functions","title":"Funkcije datuma","items":[{"type":"function","name":"current_date","bundle":"date","description":"Vraća trenutačni datum u UTC.","examples":"\n##### Primjer\n\nVraća trenutačni datum u UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutačni datum u UTC.\n\n**Povratna vrijednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Vraća trenutačni UTC datum i vrijeme u satima, minutama i sekundama.","examples":"\n##### Primjer\n\nVraća trenutačni UTC datum i vrijeme u satima, minutama i sekundama.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutačni UTC datum i vrijeme u satima, minutama i sekundama.\n\n**Povratna vrijednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Vraća trenutačni UTC datum i vrijeme u satima, minutama, sekundama i milisekundama.","examples":"\n##### Primjer\n\nVraća trenutačni UTC datum i vrijeme u satima, minutama, sekundama i milisekundama.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća trenutačni UTC datum i vrijeme u satima, minutama, sekundama i milisekundama.\n\n**Povratna vrijednost**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Vraća jedan dio datuma/vremena, kao što su godina, mjesec, dan, sat, minuta i sekunda.","examples":"\n##### Primjeri\n\nVraća 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nVraća 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nVraća 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća jedan dio datuma/vremena, kao što su godina, mjesec, dan, sat, minuta i sekunda.\n\n**Parametri**\n\n- **part**: Dio koji će se izdvojiti iz datuma. Moguće vrijednosti: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Datum iz kojeg će se izdvojiti dio.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Funkcije niza","items":[{"type":"function","name":"char_length","bundle":"string","description":"Vraća broj znakova u tekstualnom nizu kao cijeli broj.","examples":"\n##### Primjer\n\nVraća 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća broj znakova u tekstualnom nizu kao cijeli broj.\n\n**Parametar**\n\n- **string**: Test čija se će se duljina vratiti.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Vraća prvu vrijednost na popisu koja nije `NULL`. Sve vrijednosti proslijeđene u funkciju moraju biti iste vrste, s izuzetkom vrijednosti `NULL`.","examples":"\n##### Primjeri\n\nVraća 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nVraća -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prvu vrijednost na popisu koja nije `NULL`. Sve vrijednosti proslijeđene u funkciju moraju biti iste vrste, s izuzetkom vrijednosti `NULL`.\n\n**Parametri**\n\n- **value1**: Prva je vrijednosti na popisu.\n- **valueN**: Naknadne su vrijednosti na popisu.\n\n**Povratna vrijednost**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Spaja dva niza zajedno.","examples":"\n##### Primjer\n\nVraća 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Spaja dva niza zajedno.\n\n**Parametri**\n\n- **string1**: Prvi tekstualni niz.\n- **string2**: Tekstualni niz koji se spaja s prvim tekstualnim nizom.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Vraća korisničko ime korisnika koji je trenutno prijavljen na portal.","examples":"\n##### Primjer\n\nVraća korisničko ime korisnika koji je trenutno prijavljen na portal.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća korisničko ime korisnika koji je trenutno prijavljen na portal.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Pretvara sve znakove u tekstu u mala slova.","examples":"\n##### Primjer\n\nVraća 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvara sve znakove u tekstu u mala slova.\n\n**Parametar**\n\n- **string**: Tekst za pretvaranje u mala slova.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Vraća prvu pojavu podteksta u drugom tekstu. Vraća 0 ako nema podteksta.","examples":"\n##### Primjeri\n\nVraća 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nVraća 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća prvu pojavu podteksta u drugom tekstu. Vraća 0 ako nema podteksta.\n\n**Parametri**\n\n- **substring**: Tekstni niz za pretraživanje.\n- **string**: Tekst u kojem će se tražiti podtekst.\n\n**Povratna vrijednost**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Vraća podskup znakova u tekstualnom nizu od početne točke do navedene duljine niza.","examples":"\n##### Primjer\n\nVraća 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća podskup znakova u tekstualnom nizu od početne točke do navedene duljine niza.\n\n**Parametri**\n\n- **string**: Tekstni niz iz kojeg se izdvaja.\n- **start**: Vrijednost cijelog broja koja određuje gdje će započeti vraćeni znakovi.\n- **length**: Broj znakova koji će se izvesti.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Vraća podskup znakova u tekstualnom nizu od početne točke do navedene duljine niza.","examples":"\n##### Primjeri\n\nVraća 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nVraća 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća podskup znakova u tekstualnom nizu od početne točke do navedene duljine niza.\n\n**Parametri**\n\n- **string**: Tekstni niz iz kojeg se izdvaja.\n- **start**: Vrijednost cijelog broja koja određuje gdje će započeti vraćeni znakovi.\n- **length**: Broj znakova koji će se izvesti.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Vraća tekstualni niz iz kojeg su uklonjeni svi razmaci na početku i/ili kraju ili drugi navedeni znakovi. LEADING će skratiti vodeću stranu tekstualnog niza, TRAILING će skratiti stražnju stranu tekstualnog niza, dok će BOTH skratiti obje strane tekstualnog niza.","examples":"\n##### Primjeri\n\nVraća 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nVraća '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nVraća 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Vraća tekstualni niz iz kojeg su uklonjeni svi razmaci na početku i/ili kraju ili drugi navedeni znakovi. LEADING će skratiti vodeću stranu tekstualnog niza, TRAILING će skratiti stražnju stranu tekstualnog niza, dok će BOTH skratiti obje strane tekstualnog niza.\n\n**Parametri**\n\n- **side**: Strana tekstualnog niza s koje će se ukloniti razmak(i) ili znakovi. Moguće vrijednosti: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Znak(ovi) koji će biti skraćeni u tekstualnom nizu.\n- **string**: Tekst za skraćivanje.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Pretvara sve znakove u tekstu u tiskana slova.","examples":"\n##### Primjer\n\nVraća 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Pretvara sve znakove u tekstu u tiskana slova.\n\n**Parametar**\n\n- **string**: Tekst za pretvaranje u tiskana slova.\n\n**Povratna vrijednost**: String"}},"parametersInfo":{"min":1,"max":1}}]}]