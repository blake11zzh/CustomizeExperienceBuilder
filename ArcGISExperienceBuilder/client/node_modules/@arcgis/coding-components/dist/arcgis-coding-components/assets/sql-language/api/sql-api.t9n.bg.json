[{"id":"date_functions","title":"Функции за дата","items":[{"type":"function","name":"current_date","bundle":"date","description":"Връща текущата дата в UTC.","examples":"\n##### Пример\n\nВръща текущата дата в UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща текущата дата в UTC.\n\n**Стойност за връщане**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Връща текущата UTC дата и час в часове, минути и секунди.","examples":"\n##### Пример\n\nВръща текущата UTC дата и час в часове, минути и секунди.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща текущата UTC дата и час в часове, минути и секунди.\n\n**Стойност за връщане**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Връща текущата UTC дата и час в часове, минути, секунди и милисекунди.","examples":"\n##### Пример\n\nВръща текущата UTC дата и час в часове, минути, секунди и милисекунди.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща текущата UTC дата и час в часове, минути, секунди и милисекунди.\n\n**Стойност за връщане**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Връща единична част от дата/час, като например година, месец, ден, час, минута или секунда.","examples":"\n##### Примери\n\nВръща 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nВръща 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nВръща 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща единична част от дата/час, като например година, месец, ден, час, минута или секунда.\n\n**Параметри**\n\n- **part**: Частта за извличане от датата. Възможни стойности: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Датата за извличане на част.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Функции на низа","items":[{"type":"function","name":"char_length","bundle":"string","description":"Връща броя знаци в текстов низ като цяло число.","examples":"\n##### Пример\n\nВръща 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща броя знаци в текстов низ като цяло число.\n\n**Параметър**\n\n- **string**: Текстово поле, за ​​да върне дължината на.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Връща първото число в списъка, което не е `NULL`. Всички стойности, подадени във функцията, трябва да са от един и същи тип, с изключение на стойностите `NULL`.","examples":"\n##### Примери\n\nВръща 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nВръща -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща първото число в списъка, което не е `NULL`. Всички стойности, подадени във функцията, трябва да са от един и същи тип, с изключение на стойностите `NULL`.\n\n**Параметри**\n\n- **value1**: Първата стойност в списъка.\n- **valueN**: Следващата(те) стойност(и) в списъка.\n\n**Стойност за връщане**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Свързва два низа.","examples":"\n##### Пример\n\nВръща 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Свързва два низа.\n\n**Параметри**\n\n- **string1**: Първото текстово поле.\n- **string2**: Текстово поле за свързване към първото текстово поле.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Връща потребителското име на потребителя, който в момента е влязъл в портала.","examples":"\n##### Пример\n\nВръща потребителското име на потребителя, който в момента е влязъл в портала.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща потребителското име на потребителя, който в момента е влязъл в портала.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Преобразува всички символи в текстовото поле с малки букви.","examples":"\n##### Пример\n\nВръща 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Преобразува всички символи в текстовото поле с малки букви.\n\n**Параметър**\n\n- **string**: Текстово поле за преобразуване в малки букви.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Връща първото появяване на подтекст в друго текстово поле. Връща 0, ако подтекста не е намерен.","examples":"\n##### Примери\n\nВръща 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nВръща 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща първото появяване на подтекст в друго текстово поле. Връща 0, ако подтекста не е намерен.\n\n**Параметри**\n\n- **substring**: Текстовият низ за търсене.\n- **string**: Низът, в който ще се търси поднизът.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Връща подмножество от знаци в текстово поле от начална точка до посочената дължина на текстово поле.","examples":"\n##### Пример\n\nВръща 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща подмножество от знаци в текстово поле от начална точка до посочената дължина на текстово поле.\n\n**Параметри**\n\n- **string**: Текстово поле за извличане.\n- **start**: Цяло число, което указва откъде ще започнат върнатите символи.\n- **length**: Броят знаци за извличане.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Връща подмножество от знаци в текстово поле от начална точка до посочената дължина на текстово поле.","examples":"\n##### Примери\n\nВръща 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nВръща 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща подмножество от знаци в текстово поле от начална точка до посочената дължина на текстово поле.\n\n**Параметри**\n\n- **string**: Текстово поле за извличане.\n- **start**: Цяло число, което указва откъде ще започнат върнатите символи.\n- **length**: Броят знаци за извличане.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Връща текстов низ, в който са премахнати всички начални и/или крайни интервали или други зададени символи. LEADING ще отреже водещата страна на текстовия низ, TRAILING ще отреже водещата страна на текстовия низ, а BOTH ще отреже и двете страни на текстовия низ.","examples":"\n##### Примери\n\nВръща 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nВръща '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nВръща 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща текстов низ, в който са премахнати всички начални и/или крайни интервали или други зададени символи. LEADING ще отреже водещата страна на текстовия низ, TRAILING ще отреже водещата страна на текстовия низ, а BOTH ще отреже и двете страни на текстовия низ.\n\n**Параметри**\n\n- **side**: Страната от текстовия низ, от която ще бъдат премахнати интервалите или символите. Възможни стойности: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Символът(ите), който/които ще бъде/бъдат отразан/и от текстовия низ.\n- **string**: Текстово поле за подрязване.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Преобразува всички знаци в текстовото поле. в главни букви.","examples":"\n##### Пример\n\nВръща 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Преобразува всички знаци в текстовото поле. в главни букви.\n\n**Параметър**\n\n- **string**: Низът за преобразуване в главни букви.\n\n**Стойност за връщане**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"numeric_functions","title":"Цифрови функции","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Връща абсолютната стойност на числото.","examples":"\n##### Пример\n\nВръща 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща абсолютната стойност на числото.\n\n**Параметър**\n\n- **number**: Номер, на който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Връща аркускосинуса на число.","examples":"\n##### Пример\n\nВръща 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща аркускосинуса на число.\n\n**Параметър**\n\n- **number**: Число между -1 и 1, на което да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Връща arc sine на число.","examples":"\n##### Пример\n\nВръща 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща arc sine на число.\n\n**Параметър**\n\n- **number**: Число между -1 и 1, на което да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Връща arc tangent на число.","examples":"\n##### Пример\n\nВръща 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща arc tangent на число.\n\n**Параметър**\n\n- **number**: Номер, на който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Конвертира стойността от един тип данни в друг. Параметърът dataType определя в какъв тип ще бъде преобразувана стойността. FLOAT преобразува стойността в двойно число, INTEGER преобразува стойността в цяло число и т.н.","examples":"\n##### Примери\n\nВръща 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nВръща '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nВръща '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Конвертира стойността от един тип данни в друг. Параметърът dataType определя в какъв тип ще бъде преобразувана стойността. FLOAT преобразува стойността в двойно число, INTEGER преобразува стойността в цяло число и т.н.\n\n**Параметри**\n\n- **value**: Стойността за преобразуване в друг тип данни.\n- **dataType**: Типът данни, към които да се конвертира стойността. Възможни стойности: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Стойност за връщане**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Връща най-малкото цяло число, по-голямо или равно на числото.","examples":"\n##### Пример\n\nВръща 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща най-малкото цяло число, по-голямо или равно на числото.\n\n**Параметър**\n\n- **number**: Числото със закръгляване нагоре.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Връща тригонометричния косинус на числото, което се приема за ъгъла в радиани.","examples":"\n##### Пример\n\nВръща -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща тригонометричния косинус на числото, което се приема за ъгъла в радиани.\n\n**Параметър**\n\n- **number**: Ъгъл в радиани, върху който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Връща най-голямото цяло число, което е по-малко или равно на числото.","examples":"\n##### Пример\n\nВръща 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща най-голямото цяло число, което е по-малко или равно на числото.\n\n**Параметър**\n\n- **number**: Числото се закръглява надолу.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Връща естествения логаритъм (база „e“) на числото.","examples":"\n##### Пример\n\nВръща 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща естествения логаритъм (база „e“) на числото.\n\n**Параметър**\n\n- **number**: Число по-голямо от 0, върху което да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Връща логаритъма на базата -10 на числото.","examples":"\n##### Пример\n\nВръща 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща логаритъма на базата -10 на числото.\n\n**Параметър**\n\n- **number**: Номер, на който да се извърши операцията, което е по-голямо от 0.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Връща остатъка след разделяне на делимото от делител. И делимото, и делителят трябва да са цели числа.","examples":"\n##### Пример\n\nВръща 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща остатъка след разделяне на делимото от делител. И делимото, и делителят трябва да са цели числа.\n\n**Параметри**\n\n- **x**: Числото, представляващо делимото.\n- **y**: Числото, представляващо делителя.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Връща `NULL`, ако expression1 е равен на expression2, а в противен случай връща expression1. Стойностите за expression1 и expression2 трябва да са от един и същи тип. NULLIF обикновено се използва за предотвратяване на грешки при разделяне на нула чрез задаване на expression2 на 0.","examples":"\n##### Примери\n\nВръща `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nВръща 32\n\n```sql\nNULLIF(32, 0)\n```\n\nВръща `null`, ако POP18 е равно на 0, в противен случай връща стойността на TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща `NULL`, ако expression1 е равен на expression2, а в противен случай връща expression1. Стойностите за expression1 и expression2 трябва да са от един и същи тип. NULLIF обикновено се използва за предотвратяване на грешки при разделяне на нула чрез задаване на expression2 на 0.\n\n**Параметри**\n\n- **expression1**: Стойност, върху която да се извърши операцията.\n- **expression2**: Стойност, върху която да се извърши операцията.\n\n**Стойност за връщане**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Връща стойността на числото, повишено до посочената степен.","examples":"\n##### Пример\n\nВръща 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща стойността на числото, повишено до посочената степен.\n\n**Параметри**\n\n- **x**: Номерът, на който да се извърши операцията.\n- **y**: Степента, показваща броя пъти, за да се умножи числото от само себе си\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Закръглява числото до определената дължина.","examples":"\n##### Примери\n\nВръща 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nВръща 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Закръглява числото до определената дължина.\n\n**Параметри**\n\n- **number**: Число за закръгляване.\n- **length**: Броят на десетичните знаци за закръгляване на числото. Положителната дължина закръгля числото до посочения десетичен знак. Негативната дължина закгръгля числото наляво от десетичната запетая\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Връща знака на дадено число. Негативно число ще върне -1. Положително число ще върне 1.","examples":"\n##### Примери\n\nВръща -1\n\n```sql\nSIGN(-132)\n```\n\nВръща 0\n\n```sql\nSIGN(0)\n```\n\nВръща 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща знака на дадено число. Негативно число ще върне -1. Положително число ще върне 1.\n\n**Параметър**\n\n- **number**: Номер, на който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Връща тригонометричния синус на числото, което се приема за ъгъла в радиани.","examples":"\n##### Пример\n\nВръща 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща тригонометричния синус на числото, което се приема за ъгъла в радиани.\n\n**Параметър**\n\n- **number**: Ъгъл в радиани, върху който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Връща тангента на числото, което се приема за ъгъла в радиани.","examples":"\n##### Пример\n\nВръща 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща тангента на числото, което се приема за ъгъла в радиани.\n\n**Параметър**\n\n- **number**: Ъгъл в радиани, върху който да се извърши операцията.\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Връща съкратено число.","examples":"\n##### Примери\n\nВръща 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nВръща 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nВръща 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Връща съкратено число.\n\n**Параметри**\n\n- **number**: Число за съкращаване.\n- **decimals**: Положителната стойност отрязва числото до посочения десетичен знак. Негативната стойност отразява числото наляво от десетичната запетая\n\n**Стойност за връщане**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]