[{"id":"date_functions","title":"Funcții de dată","items":[{"type":"function","name":"current_date","bundle":"date","description":"Revine la data curentă în UTC.","examples":"\n##### Exemplu\n\nRevine la data curentă în UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Revine la data curentă în UTC.\n\n**Returnare versiune**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Revine la data și ora curente în UTC în ore, minute și secunde.","examples":"\n##### Exemplu\n\nRevine la data și ora curente în UTC în ore, minute și secunde.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Revine la data și ora curente în UTC în ore, minute și secunde.\n\n**Returnare versiune**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Returnează data și ora UTC curente (ore, minute, secunde și milisecunde.","examples":"\n##### Exemplu\n\nReturnează data și ora UTC curente (ore, minute, secunde și milisecunde.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează data și ora UTC curente (ore, minute, secunde și milisecunde.\n\n**Returnare versiune**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Revine la o singură parte a unei date, cum ar fi anul, luna, ziua, ora, minutul sau secunda.","examples":"\n##### Exemple\n\nReturnează 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nReturnează 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nReturnează 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Revine la o singură parte a unei date, cum ar fi anul, luna, ziua, ora, minutul sau secunda.\n\n**Parametri**\n\n- **part**: Partea care se extrage din dată. Valori posibile: „YEAR”, „MONTH”, „DAY”, „HOUR”, „MINUTE”, „SECOND”.\n- **datetime**: Data din care se extrage o parte.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Funcții numerice","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Returnează valoarea absolută a numărului.","examples":"\n##### Exemplu\n\nReturnează 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează valoarea absolută a numărului.\n\n**Parametru**\n\n- **number**: Un număr pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Returnează cosinusul de arc al unui număr.","examples":"\n##### Exemplu\n\nReturnează 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează cosinusul de arc al unui număr.\n\n**Parametru**\n\n- **number**: Un număr între -1 și 1 pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Returnează sinusul de arc al unui număr.","examples":"\n##### Exemplu\n\nReturnează 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează sinusul de arc al unui număr.\n\n**Parametru**\n\n- **number**: Un număr între -1 și 1 pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Returnează tangenta de arc a unui număr.","examples":"\n##### Exemplu\n\nReturnează 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează tangenta de arc a unui număr.\n\n**Parametru**\n\n- **number**: Un număr pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Convertește o valoare dintr-un tip de date în altul. Parametrul dataType va determina în ce tip de date este convertită valoarea. FLOAT convertește valoare într-un dublu, INTEGER convertește valoarea într-un număr întreg etc.","examples":"\n##### Exemple\n\nReturnează 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nReturnează '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nReturnează „50”\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Convertește o valoare dintr-un tip de date în altul. Parametrul dataType va determina în ce tip de date este convertită valoarea. FLOAT convertește valoare într-un dublu, INTEGER convertește valoarea într-un număr întreg etc.\n\n**Parametri**\n\n- **value**: Valoarea de convertit într-un alt tip de date.\n- **dataType**: Tipul de date în care se convertește valoarea. Valori posibile: „DATE”, „FLOAT”, „INTEGER”, „REAL”, „SMALLINT”, „TIME”, „TIMESTAMP”, „VARCHAR”.\n\n**Returnare versiune**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Returnează cel mai mic număr întreg mai mare sau egal cu numărul.","examples":"\n##### Exemplu\n\nReturnează 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează cel mai mic număr întreg mai mare sau egal cu numărul.\n\n**Parametru**\n\n- **number**: Numărul de rotunjit la valoarea superioară.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Returnează cosinusul trigonometric pentru număr, care se presupune că este un unghi exprimat în radiani.","examples":"\n##### Exemplu\n\nReturnează -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează cosinusul trigonometric pentru număr, care se presupune că este un unghi exprimat în radiani.\n\n**Parametru**\n\n- **number**: Un unghi în radiani pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Returnează cel mai mare număr întreg mai mic sau egal cu număr.","examples":"\n##### Exemplu\n\nReturnează 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează cel mai mare număr întreg mai mic sau egal cu număr.\n\n**Parametru**\n\n- **number**: Numărul de rotunjit la valoarea inferioară.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Returnează logaritmul natural (baza e) al numărului.","examples":"\n##### Exemplu\n\nReturnează 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează logaritmul natural (baza e) al numărului.\n\n**Parametru**\n\n- **number**: Un număr mai mare de 0 pe care se efectuează operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Returnează logaritmul natural în baza 10 pentru număr.","examples":"\n##### Exemplu\n\nReturnează 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează logaritmul natural în baza 10 pentru număr.\n\n**Parametru**\n\n- **number**: Un număr pe care se efectuează operația care este mai mare decât 0.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Returnează restul după împărțirea unui deîmpărțit la un împărțitor. Atât deîmpărțitul, cât și împărțitorul trebuie să fie numere întregi.","examples":"\n##### Exemplu\n\nReturnează 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează restul după împărțirea unui deîmpărțit la un împărțitor. Atât deîmpărțitul, cât și împărțitorul trebuie să fie numere întregi.\n\n**Parametri**\n\n- **x**: Numărul care reprezintă deîmpărțitul.\n- **y**: Numărul care reprezintă împărțitorul.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Returnează „NULL” dacă expresia 1 este egală cu expresia 2, în caz contrar returnează expresia 1. Valorile pentru expresia 1 și expresia 2 trebuie să fie de același tip. NULLIF este utilizată în general pentru a împiedica erorile de împărțire la zero prin setarea expresiei2 la 0.","examples":"\n##### Exemple\n\nReturnează „null”.\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nReturnează 32\n\n```sql\nNULLIF(32, 0)\n```\n\nReturnează „null” dacă POP18 este egal cu 0, în caz contrar, returnează valoarea TOTALPOP/POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează „NULL” dacă expresia 1 este egală cu expresia 2, în caz contrar returnează expresia 1. Valorile pentru expresia 1 și expresia 2 trebuie să fie de același tip. NULLIF este utilizată în general pentru a împiedica erorile de împărțire la zero prin setarea expresiei2 la 0.\n\n**Parametri**\n\n- **expression1**: O valoare pentru care se efectuează operația.\n- **expression2**: O valoare pentru care se efectuează operația.\n\n**Returnare versiune**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Returnează valoarea numărului ridicată la puterea specificată.","examples":"\n##### Exemplu\n\nReturnează 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează valoarea numărului ridicată la puterea specificată.\n\n**Parametri**\n\n- **x**: Numărul pentru care să fie efectuată operația.\n- **y**: Exponentul care indică numărul de ori pentru a înmulți numărul cu el însuși.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Rotunjește numărul la lungimea specificată.","examples":"\n##### Exemple\n\nReturnează 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nReturnează 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Rotunjește numărul la lungimea specificată.\n\n**Parametri**\n\n- **number**: Numărul de rotunjit.\n- **length**: Numărul de locuri zecimale la care se va rotunji numărul. O lungime pozitivă rotunjește numărul la locul zecimal specificat. O lungime negativă va rotunji numărul la stânga semnului zecimal.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Returnează semnul unui număr dat. Un număr negativ va returna -1. Un număr pozitiv va returna 1.","examples":"\n##### Exemple\n\nReturnează -1\n\n```sql\nSIGN(-132)\n```\n\nReturnează 0\n\n```sql\nSIGN(0)\n```\n\nReturnează 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează semnul unui număr dat. Un număr negativ va returna -1. Un număr pozitiv va returna 1.\n\n**Parametru**\n\n- **number**: Un număr pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Returnează sinusul trigonometric al numărului, care este presupus a fi un unghi în radiani.","examples":"\n##### Exemplu\n\nReturnează 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează sinusul trigonometric al numărului, care este presupus a fi un unghi în radiani.\n\n**Parametru**\n\n- **number**: Un unghi în radiani pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Returnează tangenta trigonometrică pentru un număr, care se presupune că este un unghi exprimat în radiani.","examples":"\n##### Exemplu\n\nReturnează 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează tangenta trigonometrică pentru un număr, care se presupune că este un unghi exprimat în radiani.\n\n**Parametru**\n\n- **number**: Un unghi în radiani pentru care să fie efectuată operația.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Returnează un număr trunchiat.","examples":"\n##### Exemple\n\nReturnează 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nReturnează 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nReturnează 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează un număr trunchiat.\n\n**Parametri**\n\n- **number**: Un număr de trunchiat.\n- **decimals**: O valoare pozitivă trunchiază numărul la locul zecimal specificat. O valoare negativă trunchiază numărul la stânga valorii zecimale.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Funcțiile pentru șiruri","items":[{"type":"function","name":"char_length","bundle":"string","description":"Returnează numărul de caractere din șirul de text ca număr întreg.","examples":"\n##### Exemplu\n\nReturnează 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează numărul de caractere din șirul de text ca număr întreg.\n\n**Parametru**\n\n- **string**: Șirul de text pentru care va fi returnată lungimea.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Returnează prima valoare din listă care nu este „NULL”. Toate valorile transmise în funcție trebuie să fie de același tip, cu excepția valorilor „NULL”.","examples":"\n##### Exemple\n\nReturnează 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nReturnează -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează prima valoare din listă care nu este „NULL”. Toate valorile transmise în funcție trebuie să fie de același tip, cu excepția valorilor „NULL”.\n\n**Parametri**\n\n- **value1**: Prima valoare din listă.\n- **valueN**: Valoarea (valorile) ulterioare din listă.\n\n**Returnare versiune**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Concatenează două șiruri împreună.","examples":"\n##### Exemplu\n\nReturnează 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Concatenează două șiruri împreună.\n\n**Parametri**\n\n- **string1**: Primul șir de text.\n- **string2**: Șirul de text de concatenat la primul șir de text.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Returnează numele de utilizator al utilizatorului conectat momentan la portal.","examples":"\n##### Exemplu\n\nReturnează numele de utilizator al utilizatorului conectat momentan la portal.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează numele de utilizator al utilizatorului conectat momentan la portal.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Convertește toate caracterele din șirul de text în minuscule.","examples":"\n##### Exemplu\n\nReturnează 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Convertește toate caracterele din șirul de text în minuscule.\n\n**Parametru**\n\n- **string**: Șirul de text de transformat în minuscule.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Returnează prima apariție a unui subșir în alt șir de text. Returnează 0 care nu este găsit un subșir.","examples":"\n##### Exemple\n\nReturnează 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nReturnează 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează prima apariție a unui subșir în alt șir de text. Returnează 0 care nu este găsit un subșir.\n\n**Parametri**\n\n- **substring**: Șirul de text care se caută.\n- **string**: Șirul care va fi căutat pentru subșir.\n\n**Returnare versiune**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Returnează un subset de caractere dintr-un șir de text dintr-un punct de pornire la o lungime de șir specificată.","examples":"\n##### Exemplu\n\nReturnează 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează un subset de caractere dintr-un șir de text dintr-un punct de pornire la o lungime de șir specificată.\n\n**Parametri**\n\n- **string**: Șirul de text din care se extrage.\n- **start**: Valoarea număr întreg care specifică unde vor începe caracterele returnate.\n- **length**: Numărul de caractere care vor fi extrase.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Returnează un subset de caractere dintr-un șir de text dintr-un punct de pornire la o lungime de șir specificată.","examples":"\n##### Exemple\n\nReturnează 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nReturnează 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează un subset de caractere dintr-un șir de text dintr-un punct de pornire la o lungime de șir specificată.\n\n**Parametri**\n\n- **string**: Șirul de text din care se extrage.\n- **start**: Valoarea număr întreg care specifică unde vor începe caracterele returnate.\n- **length**: Numărul de caractere care vor fi extrase.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Returnează un șir de text în care toate spațiile de început și/sau de sfârșit sau alte caractere specificate au fost eliminate. LEADING va decupa partea de început a șirului de text, TRAILING va decupa partea de sfârșit a șirului de text, în timp ce BOTH va decupa ambele părți ale șirului de text.","examples":"\n##### Exemple\n\nReturnează 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nReturnează '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nReturnează 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Returnează un șir de text în care toate spațiile de început și/sau de sfârșit sau alte caractere specificate au fost eliminate. LEADING va decupa partea de început a șirului de text, TRAILING va decupa partea de sfârșit a șirului de text, în timp ce BOTH va decupa ambele părți ale șirului de text.\n\n**Parametri**\n\n- **side**: Partea șirului de text în care spațiul (spațiile) sau caracterul (caracterele) vor fi eliminate. Valori posibile: „LEADING”, „TRAILING”, „BOTH”.\n- **character**: Caracterul (caracterele) care va (vor) fi decupate din șirul de text.\n- **string**: Șirul de text de ajustat.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Convertește toate caracterele din șirul de text în majuscule.","examples":"\n##### Exemplu\n\nReturnează 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Convertește toate caracterele din șirul de text în majuscule.\n\n**Parametru**\n\n- **string**: Șirul de convertit în majuscule.\n\n**Returnare versiune**: String"}},"parametersInfo":{"min":1,"max":1}}]}]