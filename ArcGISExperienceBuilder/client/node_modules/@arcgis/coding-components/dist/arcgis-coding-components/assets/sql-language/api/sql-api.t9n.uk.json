[{"id":"string_functions","title":"Рядкові функції","items":[{"type":"function","name":"char_length","bundle":"string","description":"Повертає ціле число, що відповідає кількості символів у текстовому рядку.","examples":"\n##### Приклад\n\nПовертає 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає ціле число, що відповідає кількості символів у текстовому рядку.\n\n**Параметр**\n\n- **string**: Текстовий рядок, довжину якого треба повернути.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Повертає перше не порожнє значення у списку, яке не є `NULL`. Усі значення, передані у функцію, мають бути однакового типу, окрім значень `NULL`.","examples":"\n##### Приклади\n\nПовертає 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nПовертає -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає перше не порожнє значення у списку, яке не є `NULL`. Усі значення, передані у функцію, мають бути однакового типу, окрім значень `NULL`.\n\n**Параметри**\n\n- **value1**: Перше значення у списку.\n- **valueN**: Наступне(і) значення у списку.\n\n**Повернуте значення**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Обʼєднує два рядка разом.","examples":"\n##### Приклад\n\nПовертає 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Обʼєднує два рядка разом.\n\n**Параметри**\n\n- **string1**: Перший текстовий рядок.\n- **string2**: Текстовий рядок, який треба обʼєднати з першим текстовим рядком.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Повертає ім’я користувача для поточного користувача, який виконав вхід на портал.","examples":"\n##### Приклад\n\nПовертає ім’я користувача для поточного користувача, який виконав вхід на портал.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає ім’я користувача для поточного користувача, який виконав вхід на портал.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Перетворює всі символи в текстовому рядку на нижній регістр.","examples":"\n##### Приклад\n\nПовертає 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Перетворює всі символи в текстовому рядку на нижній регістр.\n\n**Параметр**\n\n- **string**: Текстовий рядок, який треба перетворити на нижній регістр.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Повертає перший екземпляр підрядка в іншому текстовому рядку. Якщо підрядок не знайдений, повертає 0.","examples":"\n##### Приклади\n\nПовертає 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nПовертає 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає перший екземпляр підрядка в іншому текстовому рядку. Якщо підрядок не знайдений, повертає 0.\n\n**Параметри**\n\n- **substring**: Текстовий рядок, який потрібно знайти.\n- **string**: Рядок, у якому виконуватиметься пошук підрядка.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Повертає підмножину символів в текстовому рядку від початкової точки до вказаної довжини рядка.","examples":"\n##### Приклад\n\nПовертає 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає підмножину символів в текстовому рядку від початкової точки до вказаної довжини рядка.\n\n**Параметри**\n\n- **string**: Текстовий рядок, з якого треба виконати видобування.\n- **start**: Цілочисельне значення, що вказує, де починаються символи, що повертаються.\n- **length**: Число символів, які треба видобути.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Повертає підмножину символів в текстовому рядку від початкової точки до вказаної довжини рядка.","examples":"\n##### Приклади\n\nПовертає 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nПовертає 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає підмножину символів в текстовому рядку від початкової точки до вказаної довжини рядка.\n\n**Параметри**\n\n- **string**: Текстовий рядок, з якого треба виконати видобування.\n- **start**: Цілочисельне значення, що вказує, де починаються символи, що повертаються.\n- **length**: Число символів, які треба видобути.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Повертає текстовий рядок, в якому видалені всі початкові та/або кінцеві пробіли або інші визначені символи. LEADING підрізає початкову сторону текстового рядку, TRAILING підрізає кінцеву сторону текстового рядку, а BOTH підрізає обидві сторони текстового рядку.","examples":"\n##### Приклади\n\nПовертає 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nПовертає '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nПовертає 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає текстовий рядок, в якому видалені всі початкові та/або кінцеві пробіли або інші визначені символи. LEADING підрізає початкову сторону текстового рядку, TRAILING підрізає кінцеву сторону текстового рядку, а BOTH підрізає обидві сторони текстового рядку.\n\n**Параметри**\n\n- **side**: Сторона текстового рядка, з якої видаляються пробіли або символи. Можливі значення: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Символи, які потрібно відрізати від текстового рядка.\n- **string**: Текстовий рядок, який треба підрізати.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Перетворює всі символи в текстовому рядку на верхній регістр.","examples":"\n##### Приклад\n\nПовертає 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Перетворює всі символи в текстовому рядку на верхній регістр.\n\n**Параметр**\n\n- **string**: Рядок, який треба перетворити на верхній регістр.\n\n**Повернуте значення**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"date_functions","title":"Функції дати","items":[{"type":"function","name":"current_date","bundle":"date","description":"Повертає поточну дату у форматі UTC.","examples":"\n##### Приклад\n\nПовертає поточну дату у форматі UTC.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає поточну дату у форматі UTC.\n\n**Повернуте значення**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Повертає поточну дату та час UTC в годинах, хвилинах та секундах.","examples":"\n##### Приклад\n\nПовертає поточну дату та час UTC в годинах, хвилинах та секундах.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає поточну дату та час UTC в годинах, хвилинах та секундах.\n\n**Повернуте значення**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Повертає поточну дату та час UTC в годинах, хвилинах та секундах та мілісекундах.","examples":"\n##### Приклад\n\nПовертає поточну дату та час UTC в годинах, хвилинах та секундах та мілісекундах.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає поточну дату та час UTC в годинах, хвилинах та секундах та мілісекундах.\n\n**Повернуте значення**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Повертає одну частину дати і часу, таку як рік, місяць, день, година, хвилина або секунда.","examples":"\n##### Приклади\n\nПовертає 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nПовертає 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nПовертає 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає одну частину дати і часу, таку як рік, місяць, день, година, хвилина або секунда.\n\n**Параметри**\n\n- **part**: Частина дати, котру треба видобути з дати. Можливі значення: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Дата, з якої треба виконати видобування частини.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Числові функції","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Повертає абсолютне значення числа.","examples":"\n##### Приклад\n\nПовертає 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає абсолютне значення числа.\n\n**Параметр**\n\n- **number**: Число, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Повертає арккосинус числа.","examples":"\n##### Приклад\n\nПовертає 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає арккосинус числа.\n\n**Параметр**\n\n- **number**: Число від -1 до 1, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Повертає арксинус числа.","examples":"\n##### Приклад\n\nПовертає 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає арксинус числа.\n\n**Параметр**\n\n- **number**: Число від -1 до 1, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Повертає арктангенс числа.","examples":"\n##### Приклад\n\nПовертає 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає арктангенс числа.\n\n**Параметр**\n\n- **number**: Число, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Перетворює значення з одного типу даних на інший. Параметром dataType визначається, на який тип перетворюється значення. FLOAT перетворює значення на дійсне число подвійної точності, INTEGER перетворює значення на ціле число тощо.","examples":"\n##### Приклади\n\nПовертає 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nПовертає '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nПовертає «50»\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Перетворює значення з одного типу даних на інший. Параметром dataType визначається, на який тип перетворюється значення. FLOAT перетворює значення на дійсне число подвійної точності, INTEGER перетворює значення на ціле число тощо.\n\n**Параметри**\n\n- **value**: Значення, яке треба перетворити на інший тип даних.\n- **dataType**: Тип даних, у який перетворюється значення. Можливі значення: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Повернуте значення**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Повертає найменше ціле число, яке становить більше або дорівнює числу.","examples":"\n##### Приклад\n\nПовертає 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає найменше ціле число, яке становить більше або дорівнює числу.\n\n**Параметр**\n\n- **number**: Число, яке треба округлити в більшу сторону.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Повертає тригонометричний косинус числа, яке вважається значенням кута в радіанах.","examples":"\n##### Приклад\n\nПовертає -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає тригонометричний косинус числа, яке вважається значенням кута в радіанах.\n\n**Параметр**\n\n- **number**: Кут в радіанах, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Повертає найбільше ціле число, яке становить менше або дорівнює числу.","examples":"\n##### Приклад\n\nПовертає 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає найбільше ціле число, яке становить менше або дорівнює числу.\n\n**Параметр**\n\n- **number**: Число, яке треба округлити до меншого.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Повертає натуральний логарифм (з основою e) числа.","examples":"\n##### Приклад\n\nПовертає 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає натуральний логарифм (з основою e) числа.\n\n**Параметр**\n\n- **number**: Число більше 0, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Повертає десятковий логарифм числа.","examples":"\n##### Приклад\n\nПовертає 0,301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає десятковий логарифм числа.\n\n**Параметр**\n\n- **number**: Число більше 0, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Повертає залишок після ділення діленого на дільник. Ділене та дільник мають бути цілими.","examples":"\n##### Приклад\n\nПовертає 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає залишок після ділення діленого на дільник. Ділене та дільник мають бути цілими.\n\n**Параметри**\n\n- **x**: Число, що відображає ділене.\n- **y**: Число, що відображає дільник.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Повертає NULL якщо вираз1 дорівнює виразу2, інакше повертає вираз1. Значення для виразу1 і виразу2 мають бути однакового типу. NULLIF часто використовується для запобігання помилкам ділення на нуль шляхом задавання виразу2 значення 0.","examples":"\n##### Приклади\n\nПовертає `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nПовертає 32\n\n```sql\nNULLIF(32, 0)\n```\n\nПовертає `null` якщо POP18 дорівнює to 0, в іншому випадку повертає значення TOTALPOP / POP18.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає NULL якщо вираз1 дорівнює виразу2, інакше повертає вираз1. Значення для виразу1 і виразу2 мають бути однакового типу. NULLIF часто використовується для запобігання помилкам ділення на нуль шляхом задавання виразу2 значення 0.\n\n**Параметри**\n\n- **expression1**: Значення, для якого треба виконати операцію.\n- **expression2**: Значення, для якого треба виконати операцію.\n\n**Повернуте значення**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Повертає значення числа, піднесеного до вказаного степеня.","examples":"\n##### Приклад\n\nПовертає 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає значення числа, піднесеного до вказаного степеня.\n\n**Параметри**\n\n- **x**: Число, для якого треба виконати операцію.\n- **y**: Показник степеня, який показує кількість разів, яку число треба помножити на себе.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Округляє число до вказаної довжини.","examples":"\n##### Приклади\n\nПовертає 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nПовертає 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Округляє число до вказаної довжини.\n\n**Параметри**\n\n- **number**: Число, яке треба округлити.\n- **length**: Кількість десяткових знаків, до яких треба округлити число. Додатна довжина округляє число до вказаного десяткового розряду. Відʼємна довжина округляє число до знаку зліва від десяткової коми.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Повертає знак вказаного числа. Відʼємне число повертає -1. Додатне число повертає 1.","examples":"\n##### Приклади\n\nПовертає -1\n\n```sql\nSIGN(-132)\n```\n\nПовертає 0\n\n```sql\nSIGN(0)\n```\n\nПовертає 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає знак вказаного числа. Відʼємне число повертає -1. Додатне число повертає 1.\n\n**Параметр**\n\n- **number**: Число, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Повертає тригонометричний синус числа, яке вважається значенням кута в радіанах.","examples":"\n##### Приклад\n\nПовертає 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає тригонометричний синус числа, яке вважається значенням кута в радіанах.\n\n**Параметр**\n\n- **number**: Кут в радіанах, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Повертає тангенс числа, яке вважається значенням кута в радіанах.","examples":"\n##### Приклад\n\nПовертає 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає тангенс числа, яке вважається значенням кута в радіанах.\n\n**Параметр**\n\n- **number**: Кут в радіанах, для якого треба виконати операцію.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Повертає скорочене число.","examples":"\n##### Приклади\n\nПовертає 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nПовертає 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nПовертає 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Повертає скорочене число.\n\n**Параметри**\n\n- **number**: Число, яке треба скоротити.\n- **decimals**: Додатний значення скорочує число до вказаного десяткового розряду. Відʼємне значення скорочує число до знаку зліва від десяткової коми.\n\n**Повернуте значення**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]