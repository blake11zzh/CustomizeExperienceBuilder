[{"id":"date_functions","title":"Dátumfüggvények","items":[{"type":"function","name":"current_date","bundle":"date","description":"Az aktuális dátumot adja vissza egyezményes koordinált világidő (UTC) szerint.","examples":"\n##### Példa\n\nAz aktuális dátumot adja vissza egyezményes koordinált világidő (UTC) szerint.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az aktuális dátumot adja vissza egyezményes koordinált világidő (UTC) szerint.\n\n**Visszatérési érték**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Az UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben és másodpercben.","examples":"\n##### Példa\n\nAz UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben és másodpercben.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben és másodpercben.\n\n**Visszatérési érték**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Az UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben, másodpercben és ezredmásodpercben.","examples":"\n##### Példa\n\nAz UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben, másodpercben és ezredmásodpercben.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az UTC szerinti aktuális dátumot és időpontot adja vissza órában, percben, másodpercben és ezredmásodpercben.\n\n**Visszatérési érték**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Egy dátum/idő típusú adat egyetlen alkotóelemét adja vissza, például az évet, a hónapot, a napot, az órát, a percet vagy a másodpercet.","examples":"\n##### Példák\n\nA következőt adja vissza: 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nA következőt adja vissza: 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nA következőt adja vissza: 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Egy dátum/idő típusú adat egyetlen alkotóelemét adja vissza, például az évet, a hónapot, a napot, az órát, a percet vagy a másodpercet.\n\n**Paraméterek**\n\n- **part**: A dátumból kinyerni kívánt rész. Lehetséges értékek: „YEAR”, „MONTH”, „DAY”, „HOUR”, „MINUTE”, „SECOND”.\n- **datetime**: A dátum, amelynek egy részét ki kell nyerni.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Karakterláncfüggvények","items":[{"type":"function","name":"char_length","bundle":"string","description":"A szöveges karakterláncban lévő karakterek számát adja vissza integer típusú adatként.","examples":"\n##### Példa\n\nA következőt adja vissza: 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szöveges karakterláncban lévő karakterek számát adja vissza integer típusú adatként.\n\n**Paraméter**\n\n- **string**: A szöveges karakterlánc, amelynek a hosszúságát meg kell állapítani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"A lista első olyan értékét adja vissza, amely nem „NULL”. A függvénybe átadott összes értéknek azonos típusúnak kell lennie, kivéve a „NULL” értékeket.","examples":"\n##### Példák\n\nA következőt adja vissza: Green goldfish\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nA következőt adja vissza: -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A lista első olyan értékét adja vissza, amely nem „NULL”. A függvénybe átadott összes értéknek azonos típusúnak kell lennie, kivéve a „NULL” értékeket.\n\n**Paraméterek**\n\n- **value1**: A lista első értéke.\n- **valueN**: A következő érték(ek) a listában.\n\n**Visszatérési érték**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Két karakterláncot fűz össze.","examples":"\n##### Példa\n\nA következőt adja vissza: Maple syrup\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Két karakterláncot fűz össze.\n\n**Paraméterek**\n\n- **string1**: Az első szöveges karakterlánc.\n- **string2**: A szöveges karakterlánc, amelyet hozzá kell fűzni az első szöveges karakterlánchoz.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"A portálra aktuálisan bejelentkezett felhasználó felhasználónevét adja vissza.","examples":"\n##### Példa\n\nA portálra aktuálisan bejelentkezett felhasználó felhasználónevét adja vissza.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A portálra aktuálisan bejelentkezett felhasználó felhasználónevét adja vissza.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"A szöveges karakterlánc minden karakterét kisbetűssé alakítja át.","examples":"\n##### Példa\n\nA következőt adja vissza: 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szöveges karakterlánc minden karakterét kisbetűssé alakítja át.\n\n**Paraméter**\n\n- **string**: A karakterlánc, amelyet kisbetűssé kell átalakítani.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Egy rész-karakterlánc másik szöveges karakterláncbeli első előfordulását adja vissza. 0 értéket ad vissza, ha a rész-karakterlánc nem található.","examples":"\n##### Példák\n\nA 6 értéket adja vissza\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nA következőt adja vissza: 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Egy rész-karakterlánc másik szöveges karakterláncbeli első előfordulását adja vissza. 0 értéket ad vissza, ha a rész-karakterlánc nem található.\n\n**Paraméterek**\n\n- **substring**: A keresendő karakterlánc.\n- **string**: A karakterlánc, amelyben a rész-karakterlánc keresése történik majd.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"A megadott kezdőponttól kiindulva a megadott számú karakterből álló szövegrészt adja vissza egy szöveges karakterláncból.","examples":"\n##### Példa\n\nA következőt adja vissza: City\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A megadott kezdőponttól kiindulva a megadott számú karakterből álló szövegrészt adja vissza egy szöveges karakterláncból.\n\n**Paraméterek**\n\n- **string**: A karakterlánc, amelyből a szövegrészt ki szeretnénk nyerni.\n- **start**: Az azt meghatározó integer típusú érték, hogy hol kezdődnek majd a visszaadott karakterek.\n- **length**: A kinyerni kívánt karakterek száma.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"A megadott kezdőponttól kiindulva a megadott számú karakterből álló szövegrészt adja vissza egy szöveges karakterláncból.","examples":"\n##### Példák\n\nA következőt adja vissza: City\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nA következőt adja vissza: New York\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A megadott kezdőponttól kiindulva a megadott számú karakterből álló szövegrészt adja vissza egy szöveges karakterláncból.\n\n**Paraméterek**\n\n- **string**: A karakterlánc, amelyből a szövegrészt ki szeretnénk nyerni.\n- **start**: Az azt meghatározó integer típusú érték, hogy hol kezdődnek majd a visszaadott karakterek.\n- **length**: A kinyerni kívánt karakterek száma.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Olyan szöveges karakterláncot ad vissza, amelyből az összes kezdő vagy záró szóköz el van távolítva. A LEADING a szöveges karakterlánc bevezető oldalát, a TRAILING a szöveges karakterlánc záró oldalát, a BOTH pedig a szöveges karakterlánc mindkét oldalát levágja.","examples":"\n##### Példák\n\nA következőt adja vissza: myFunc\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nA következőt adja vissza: '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nA következőt adja vissza: 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Olyan szöveges karakterláncot ad vissza, amelyből az összes kezdő vagy záró szóköz el van távolítva. A LEADING a szöveges karakterlánc bevezető oldalát, a TRAILING a szöveges karakterlánc záró oldalát, a BOTH pedig a szöveges karakterlánc mindkét oldalát levágja.\n\n**Paraméterek**\n\n- **side**: A szöveges karakterlánc azon oldala, ahonnan a szóköz(ök) vagy karakter(ek) eltávolításra kerülnek. A lehetséges értékek a következők: „LEADING”, „TRAILING”, „BOTH”.\n- **character**: A karakter(ek), amely(ek) a szöveges karakterláncból majd kivágásra kerül(nek).\n- **string**: A levágandó szöveges karakterlánc.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"A szöveges karakterlánc minden karakterét nagybetűssé alakítja át.","examples":"\n##### Példa\n\nA következőt adja vissza: QUICK RED FOX\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szöveges karakterlánc minden karakterét nagybetűssé alakítja át.\n\n**Paraméter**\n\n- **string**: A nagybetűssé alakítani kívánt karakterlánc.\n\n**Visszatérési érték**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"numeric_functions","title":"Numerikus függvények","items":[{"type":"function","name":"abs","bundle":"numeric","description":"A szám abszolút értékét adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szám abszolút értékét adja vissza.\n\n**Paraméter**\n\n- **number**: Egy szám, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Az adott szám trigonometrikus koszinuszát adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám trigonometrikus koszinuszát adja vissza.\n\n**Paraméter**\n\n- **number**: Egy -1 és 1 közötti szám, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Az adott szám trigonometrikus szinuszát adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám trigonometrikus szinuszát adja vissza.\n\n**Paraméter**\n\n- **number**: Egy -1 és 1 közötti szám, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Az adott szám trigonometrikus tangensét adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám trigonometrikus tangensét adja vissza.\n\n**Paraméter**\n\n- **number**: Egy szám, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Az adott értéket egyik adattípusról egy másikra alakítja át. A dataType paraméter határozza meg, hogy az érték milyen típusúra lesz átalakítva. A FLOAT utasítás double adattípusúvá alakítja át az értéket, az INTEGER integer adattípusúvá stb.","examples":"\n##### Példák\n\nA következőt adja vissza: 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nA következőt adja vissza: 1:00 PM\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nA következőt adja vissza: 50\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott értéket egyik adattípusról egy másikra alakítja át. A dataType paraméter határozza meg, hogy az érték milyen típusúra lesz átalakítva. A FLOAT utasítás double adattípusúvá alakítja át az értéket, az INTEGER integer adattípusúvá stb.\n\n**Paraméterek**\n\n- **value**: A más adattípusúvá átalakítandó érték.\n- **dataType**: Az az adattípus, amelyre az értéket át kívánjuk alakítani. A lehetséges értékek a következők: „DATE”, „FLOAT”, „INTEGER”, „REAL”, „SMALLINT”, „TIME”, „TIMESTAMP”, „VARCHAR”.\n\n**Visszatérési érték**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Azt a legkisebb integert adja vissza, amely nagyobb a számnál vagy egyenlő azzal.","examples":"\n##### Példa\n\nA következőt adja vissza: 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Azt a legkisebb integert adja vissza, amely nagyobb a számnál vagy egyenlő azzal.\n\n**Paraméter**\n\n- **number**: Egy felfelé kerekítendő szám.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Az adott szám trigonometrikus koszinuszát adja vissza, amely feltételezhetően egy radiánban megadott szög.","examples":"\n##### Példa\n\nA következőt adja vissza: -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám trigonometrikus koszinuszát adja vissza, amely feltételezhetően egy radiánban megadott szög.\n\n**Paraméter**\n\n- **number**: Egy radiánban megadott szög, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Azt a legnagyobb integert adja vissza, amely kisebb a számnál vagy egyenlő azzal.","examples":"\n##### Példa\n\nA következőt adja vissza: 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Azt a legnagyobb integert adja vissza, amely kisebb a számnál vagy egyenlő azzal.\n\n**Paraméter**\n\n- **number**: A lefelé kerekítendő szám.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"A szám természetes alapú (e alapú) logaritmusát adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szám természetes alapú (e alapú) logaritmusát adja vissza.\n\n**Paraméter**\n\n- **number**: Az a 0-nál nagyobb szám, amelyen a művelet végrehajtandó.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"A szám 10-es alapú logaritmusát adja vissza.","examples":"\n##### Példa\n\nA következőt adja vissza: 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szám 10-es alapú logaritmusát adja vissza.\n\n**Paraméter**\n\n- **number**: Az a 0-nál nagyobb szám, amelyen a művelet végrehajtandó.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"A maradék értékét adja vissza az osztandó osztóval való osztása után. A számnak és az osztónak is integer adattípusúnak kell lennie.","examples":"\n##### Példa\n\nA következőt adja vissza: 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A maradék értékét adja vissza az osztandó osztóval való osztása után. A számnak és az osztónak is integer adattípusúnak kell lennie.\n\n**Paraméterek**\n\n- **x**: Az osztandónak megfelelő szám.\n- **y**: Az osztónak megfelelő szám.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"A „NULL” értéket adja vissza, ha az expression1 egyenlő az expression2-vel, ellenkező esetben az expression1 értéket adja vissza. Az expression1 és az expression2 értékeinek azonos típusúaknak kell lenniük. A NULLIF műveletet gyakran használják a nullával való osztás okozta hibák megelőzésére: ilyenkor a 2. kifejezést 0-ra állítják.","examples":"\n##### Példák\n\nA következőt adja vissza: null\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nA következőt adja vissza: 32\n\n```sql\nNULLIF(32, 0)\n```\n\nA „null” értéket adja vissza, ha a POP18 egyenlő 0-val; ellenkező esetben a TOTALPOP / POP18 értékét adja vissza.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A „NULL” értéket adja vissza, ha az expression1 egyenlő az expression2-vel, ellenkező esetben az expression1 értéket adja vissza. Az expression1 és az expression2 értékeinek azonos típusúaknak kell lenniük. A NULLIF műveletet gyakran használják a nullával való osztás okozta hibák megelőzésére: ilyenkor a 2. kifejezést 0-ra állítják.\n\n**Paraméterek**\n\n- **expression1**: Érték, amelyen a műveletet végre kell hajtani.\n- **expression2**: Érték, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"A szám értékét adja vissza a megadott hatványra emelve.","examples":"\n##### Példa\n\nA következőt adja vissza: 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A szám értékét adja vissza a megadott hatványra emelve.\n\n**Paraméterek**\n\n- **x**: A szám, amelyen a műveletet végre kell hajtani.\n- **y**: A hatványkitevő, amely azt jelzi, hányszor kell megszorozni a számot önmagával.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"A számot a megadott hosszúságúra kerekíti.","examples":"\n##### Példák\n\nA következőt adja vissza: 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nA következőt adja vissza: 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"A számot a megadott hosszúságúra kerekíti.\n\n**Paraméterek**\n\n- **number**: A kerekítendő szám.\n- **length**: A kerekítés tizedesjegyeinek száma. A pozitív hosszúság a megadott tizedesjegyig kerekíti a számot. A negatív hosszúság a számot a tizedesvesszőtől balra kerekíti.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Az adott szám jelét adja vissza. Negatív szám -1 értéket ad vissza. Pozitív szám 1 értéket ad vissza.","examples":"\n##### Példák\n\nA következőt adja vissza: -1\n\n```sql\nSIGN(-132)\n```\n\nA következőt adja vissza: 0\n\n```sql\nSIGN(0)\n```\n\nA következőt adja vissza: 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám jelét adja vissza. Negatív szám -1 értéket ad vissza. Pozitív szám 1 értéket ad vissza.\n\n**Paraméter**\n\n- **number**: Egy szám, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Az adott szám trigonometrikus szinuszát adja vissza, amely feltételezhetően egy radiánban megadott szög.","examples":"\n##### Példa\n\nA következőt adja vissza: 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám trigonometrikus szinuszát adja vissza, amely feltételezhetően egy radiánban megadott szög.\n\n**Paraméter**\n\n- **number**: Egy radiánban megadott szög, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Az adott szám tangensét adja vissza, amely feltételezhetően egy radiánban megadott szög.","examples":"\n##### Példa\n\nA következőt adja vissza: 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Az adott szám tangensét adja vissza, amely feltételezhetően egy radiánban megadott szög.\n\n**Paraméter**\n\n- **number**: Egy radiánban megadott szög, amelyen a műveletet végre kell hajtani.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Csonkolt számot ad vissza.","examples":"\n##### Példák\n\nA következőt adja vissza: 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nA következőt adja vissza: 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nA következőt adja vissza: 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Csonkolt számot ad vissza.\n\n**Paraméterek**\n\n- **number**: A csonkolandó szám.\n- **decimals**: A pozitív érték a számot a megadott tizedesjegyre csonkolja. A negatív érték a számot a tizedesvesszőtől balra csonkolja.\n\n**Visszatérési érték**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]