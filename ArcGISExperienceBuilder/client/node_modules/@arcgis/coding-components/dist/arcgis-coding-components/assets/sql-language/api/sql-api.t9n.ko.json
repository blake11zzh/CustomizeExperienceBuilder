[{"id":"date_functions","title":"날짜 함수","items":[{"type":"function","name":"current_date","bundle":"date","description":"현재 날짜를 협정 세계시(UTC)로 반환합니다.","examples":"\n##### 예시\n\n현재 날짜를 UTC로 반환합니다.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"현재 날짜를 협정 세계시(UTC)로 반환합니다.\n\n**Return value**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"현재 UTC 날짜와 시간을 시, 분, 초로 반환합니다.","examples":"\n##### 예시\n\n현재 UTC 날짜와 시간을 시, 분, 초로 반환합니다.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"현재 UTC 날짜와 시간을 시, 분, 초로 반환합니다.\n\n**Return value**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"현재 UTC 날짜와 시간을 시, 분, 초, 밀리초로 반환합니다.","examples":"\n##### 예시\n\n현재 UTC 날짜와 시간을 시, 분, 초, 밀리초로 반환합니다.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"현재 UTC 날짜와 시간을 시, 분, 초, 밀리초로 반환합니다.\n\n**Return value**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"연도, 월, 일, 시간, 분 또는 초 등 날짜 및 시간의 단일 부분을 반환합니다.","examples":"\n##### 예시\n\n12를 반환합니다.\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\n21을 반환합니다.\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\n30을 반환합니다.\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"연도, 월, 일, 시간, 분 또는 초 등 날짜 및 시간의 단일 부분을 반환합니다.\n\n**매개변수**\n\n- **part**: 날짜에서 추출할 부분입니다. 가능한 값: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`\n- **datetime**: 부분을 추출할 날짜입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"문자열 함수","items":[{"type":"function","name":"char_length","bundle":"string","description":"텍스트 문자열에 있는 문자의 수를 정수로 반환합니다.","examples":"\n##### 예시\n\n11을 반환합니다.\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"텍스트 문자열에 있는 문자의 수를 정수로 반환합니다.\n\n**매개변수**\n\n- **string**: 길이가 반환될 텍스트 문자열입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"목록에서 `NULL`이 아닌 첫 번째 값을 반환합니다. `NULL` 값을 제외하고, 함수로 전달되는 모든 값은 동일한 유형이어야 합니다.","examples":"\n##### 예시\n\n'Green goldfish'를 반환합니다.\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\n-21을 반환합니다.\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"목록에서 `NULL`이 아닌 첫 번째 값을 반환합니다. `NULL` 값을 제외하고, 함수로 전달되는 모든 값은 동일한 유형이어야 합니다.\n\n**매개변수**\n\n- **value1**: 목록의 첫 번째 값입니다.\n- **valueN**: 목록의 후속 값입니다.\n\n**Return value**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"두 개의 문자열을 연결합니다.","examples":"\n##### 예시\n\n'Maple syrup'을 반환합니다.\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"두 개의 문자열을 연결합니다.\n\n**매개변수**\n\n- **string1**: 첫 번째 텍스트 문자열입니다.\n- **string2**: 첫 번째 텍스트 문자열에 연결할 텍스트 문자열입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"현재 포털에 로그인한 사용자의 사용자 이름을 반환합니다.","examples":"\n##### 예시\n\n현재 포털에 로그인한 사용자의 사용자 이름을 반환합니다.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"현재 포털에 로그인한 사용자의 사용자 이름을 반환합니다.\n\n**Return value**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"텍스트 문자열의 모든 문자를 소문자로 변환합니다.","examples":"\n##### 예시\n\n'hello world'를 반환합니다.\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"텍스트 문자열의 모든 문자를 소문자로 변환합니다.\n\n**매개변수**\n\n- **string**: 소문자로 변환할 텍스트 문자열입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"다른 텍스트 문자열에서 하위 문자열이 처음 나타나는 위치를 반환합니다. 하위 문자열을 찾을 수 없으면 0을 반환합니다.","examples":"\n##### 예시\n\n6 반환\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\n9를 반환합니다.\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"다른 텍스트 문자열에서 하위 문자열이 처음 나타나는 위치를 반환합니다. 하위 문자열을 찾을 수 없으면 0을 반환합니다.\n\n**매개변수**\n\n- **substring**: 검색할 텍스트 문자열입니다.\n- **string**: 하위 문자열에 대해 검색될 문자열입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"텍스트 문자열의 문자 일부분을 시작 지점에서 지정된 문자열 길이로 반환합니다.","examples":"\n##### 예시\n\n'City'를 반환합니다.\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"텍스트 문자열의 문자 일부분을 시작 지점에서 지정된 문자열 길이로 반환합니다.\n\n**매개변수**\n\n- **string**: 추출할 텍스트 문자열입니다.\n- **start**: 반환된 문자가 시작될 위치를 지정하는 정수 값입니다.\n- **length**: 추출할 문자의 개수입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"텍스트 문자열의 문자 일부분을 시작 지점에서 지정된 문자열 길이로 반환합니다.","examples":"\n##### 예시\n\n'City'를 반환합니다.\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\n'New York'을 반환합니다.\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"텍스트 문자열의 문자 일부분을 시작 지점에서 지정된 문자열 길이로 반환합니다.\n\n**매개변수**\n\n- **string**: 추출할 텍스트 문자열입니다.\n- **start**: 반환된 문자가 시작될 위치를 지정하는 정수 값입니다.\n- **length**: 추출할 문자의 개수입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"모든 선행 및/또는 후행 공백 또는 기타 지정된 문자가 제거된 텍스트 문자열을 반환합니다. LEADING은 텍스트 문자열의 앞쪽, TRAILING은 텍스트 문자열의 뒤쪽, BOTH는 텍스트 문자열의 양쪽을 자릅니다.","examples":"\n##### 예시\n\n'myFunc'를 반환합니다.\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\n'hello world'를 반환합니다.\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\n'hello world'를 반환합니다.\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"모든 선행 및/또는 후행 공백 또는 기타 지정된 문자가 제거된 텍스트 문자열을 반환합니다. LEADING은 텍스트 문자열의 앞쪽, TRAILING은 텍스트 문자열의 뒤쪽, BOTH는 텍스트 문자열의 양쪽을 자릅니다.\n\n**매개변수**\n\n- **side**: 공백이나 문자가 제거될 텍스트 문자열의 방향입니다. 가능한 값: `LEADING`, `TRAILING`, `BOTH`\n- **character**: 텍스트 문자열에서 잘릴 문자입니다.\n- **string**: 잘라낼 텍스트 문자열입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"텍스트 문자열의 모든 문자를 대문자로 변환합니다.","examples":"\n##### 예시\n\n'QUICK RED FOX'를 반환합니다.\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"텍스트 문자열의 모든 문자를 대문자로 변환합니다.\n\n**매개변수**\n\n- **string**: 대문자로 변환할 문자열입니다.\n\n**Return value**: String"}},"parametersInfo":{"min":1,"max":1}}]},{"id":"numeric_functions","title":"숫자 함수","items":[{"type":"function","name":"abs","bundle":"numeric","description":"숫자의 절대 값을 반환합니다.","examples":"\n##### 예시\n\n2를 반환합니다.\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 절대 값을 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"숫자의 아크 코사인을 반환합니다.","examples":"\n##### 예시\n\n1.26610367을 반환합니다.\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 아크 코사인을 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 -1~1 사이의 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"숫자의 아크 사인을 반환합니다.","examples":"\n##### 예시\n\n0.30469265를 반환합니다.\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 아크 사인을 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 -1~1 사이의 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"숫자의 아크 탄젠트를 반환합니다.","examples":"\n##### 예시\n\n0.78539816을 반환합니다.\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 아크 탄젠트를 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"값을 하나의 데이터 유형에서 다른 데이터 유형으로 변환합니다. dataType 매개변수는 값이 변환되는 유형을 결정합니다. FLOAT는 값을 실수로 변환하고 INTEGER는 값을 정수로 변환합니다.","examples":"\n##### 예시\n\n2를 반환합니다.\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\n'1:00 PM'을 반환합니다.\n\n```sql\nCAST('13:00' AS TIME)\n```\n\n'50' 반환\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"값을 하나의 데이터 유형에서 다른 데이터 유형으로 변환합니다. dataType 매개변수는 값이 변환되는 유형을 결정합니다. FLOAT는 값을 실수로 변환하고 INTEGER는 값을 정수로 변환합니다.\n\n**매개변수**\n\n- **value**: 다른 데이터 유형으로 변환될 값입니다.\n- **dataType**: 값을 변환할 데이터 유형입니다. 가능한 값: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`\n\n**Return value**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"숫자보다 크거나 동일한 가장 작은 정수를 반환합니다.","examples":"\n##### 예시\n\n235를 반환합니다.\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자보다 크거나 동일한 가장 작은 정수를 반환합니다.\n\n**매개변수**\n\n- **number**: 반올림될 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"숫자의 삼각법 코사인을 반환하며, 이는 라디안의 각도로 간주됩니다.","examples":"\n##### 예시\n\n-0.41614684를 반환합니다.\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 삼각법 코사인을 반환하며, 이는 라디안의 각도로 간주됩니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 각도(라디안 단위)입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"숫자보다 작거나 동일한 가장 큰 정수를 반환합니다.","examples":"\n##### 예시\n\n12를 반환합니다.\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자보다 작거나 동일한 가장 큰 정수를 반환합니다.\n\n**매개변수**\n\n- **number**: 반내림될 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"숫자의 자연 로그(밑 e)를 반환합니다.","examples":"\n##### 예시\n\n2.302585를 반환합니다.\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 자연 로그(밑 e)를 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 0보다 큰 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"숫자의 밑이 10인 로그를 반환합니다.","examples":"\n##### 예시\n\n0.301030을 반환합니다.\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 밑이 10인 로그를 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 0보다 큰 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"피제수를 제수로 나눈 후 나머지를 반환합니다. 피제수와 제수 모두 정수여야 합니다.","examples":"\n##### 예시\n\n2를 반환합니다.\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"피제수를 제수로 나눈 후 나머지를 반환합니다. 피제수와 제수 모두 정수여야 합니다.\n\n**매개변수**\n\n- **x**: 피제수를 나타내는 숫자입니다.\n- **y**: 제수를 나타내는 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"expression1이 expression2와 동일한 경우 `NULL`을 반환하며 그렇지 않은 경우 expression1을 반환합니다. expression1 및 expression2의 값은 동일한 유형이어야 합니다. NULLIF는 일반적으로 expression2를 0으로 설정하여 0으로 나누기 오류를 방지하는 데 사용됩니다.","examples":"\n##### 예시\n\n`null`을 반환합니다.\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\n32를 반환합니다.\n\n```sql\nNULLIF(32, 0)\n```\n\nPOP18이 0인 경우 null을 반환하고, 그렇지 않으면 TOTALPOP/POP18의 값을 반환합니다.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"expression1이 expression2와 동일한 경우 `NULL`을 반환하며 그렇지 않은 경우 expression1을 반환합니다. expression1 및 expression2의 값은 동일한 유형이어야 합니다. NULLIF는 일반적으로 expression2를 0으로 설정하여 0으로 나누기 오류를 방지하는 데 사용됩니다.\n\n**매개변수**\n\n- **expression1**: 연산이 수행될 값입니다.\n- **expression2**: 연산이 수행될 값입니다.\n\n**Return value**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"숫자를 지정한 거듭제곱 값으로 반환합니다.","examples":"\n##### 예시\n\n8을 반환합니다.\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자를 지정한 거듭제곱 값으로 반환합니다.\n\n**매개변수**\n\n- **x**: 연산이 수행될 숫자입니다.\n- **y**: 숫자를 다시 곱하는 횟수를 나타내는 지수입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"지정된 길이로 숫자를 반올림합니다.","examples":"\n##### 예시\n\n3.98을 반환합니다.\n\n```sql\nROUND(3.98024, 2)\n```\n\n200을 반환합니다.\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"지정된 길이로 숫자를 반올림합니다.\n\n**매개변수**\n\n- **number**: 반올림될 숫자입니다.\n- **length**: 숫자를 반올림할 소수 자릿수입니다. 길이가 양수이면 숫자를 지정된 소수 자릿수로 반올림합니다. 길이가 음수이면 숫자를 소수점의 왼쪽으로 반올림합니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"지정된 숫자의 부호를 반환합니다. 숫자가 음수이면 -1을 반환합니다. 숫자가 양수이면 1을 반환합니다.","examples":"\n##### 예시\n\n-1을 반환합니다.\n\n```sql\nSIGN(-132)\n```\n\n0을 반환합니다.\n\n```sql\nSIGN(0)\n```\n\n1을 반환합니다.\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"지정된 숫자의 부호를 반환합니다. 숫자가 음수이면 -1을 반환합니다. 숫자가 양수이면 1을 반환합니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 숫자입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"숫자의 사인값을 반환하며, 이는 라디안의 각도로 간주됩니다.","examples":"\n##### 예시\n\n0.84147098을 반환합니다.\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 사인값을 반환하며, 이는 라디안의 각도로 간주됩니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 각도(라디안 단위)입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"숫자의 탄젠트 값을 반환하며, 이는 라디안의 각도로 간주됩니다.","examples":"\n##### 예시\n\n2.57215162를 반환합니다.\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"숫자의 탄젠트 값을 반환하며, 이는 라디안의 각도로 간주됩니다.\n\n**매개변수**\n\n- **number**: 연산이 수행될 각도(라디안 단위)입니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"잘린 숫자를 반환합니다.","examples":"\n##### 예시\n\n91.3을 반환합니다.\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\n124를 반환합니다.\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\n1,900을 반환합니다.\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"잘린 숫자를 반환합니다.\n\n**매개변수**\n\n- **number**: 잘라낼 숫자입니다.\n- **decimals**: 값이 양수이면 숫자를 지정된 소수 자릿수로 자릅니다. 값이 음수이면 숫자를 소수점의 왼쪽으로 자릅니다.\n\n**Return value**: Number"}},"parametersInfo":{"min":2,"max":2}}]}]