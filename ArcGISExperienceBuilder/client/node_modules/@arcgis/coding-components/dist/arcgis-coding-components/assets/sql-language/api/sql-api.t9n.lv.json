[{"id":"date_functions","title":"Datuma funkcijas","items":[{"type":"function","name":"current_date","bundle":"date","description":"Atgriež pašreizējo datumu UTC laika joslā.","examples":"\n##### Piemērs\n\nAtgriež pašreizējo datumu UTC laika joslā.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Atgriež pašreizējo datumu UTC laika joslā.\n\n**Uzrādīt vērtību**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Atgriež pašreizējo UTC datumu un laiku stundās, minūtēs un sekundēs.","examples":"\n##### Piemērs\n\nAtgriež pašreizējo UTC datumu un laiku stundās, minūtēs un sekundēs.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Atgriež pašreizējo UTC datumu un laiku stundās, minūtēs un sekundēs.\n\n**Uzrādīt vērtību**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Atgriež pašreizējo UTC datumu un laiku stundās, minūtēs, sekundēs un milisekundēs.","examples":"\n##### Piemērs\n\nAtgriež pašreizējo UTC datumu un laiku stundās, minūtēs, sekundēs un milisekundēs.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Atgriež pašreizējo UTC datumu un laiku stundās, minūtēs, sekundēs un milisekundēs.\n\n**Uzrādīt vērtību**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Uzrāda vienu datuma un laika daļu, piemēram, gadu, mēnesi, dienu, stundu, minūti vai datumu.","examples":"\n##### Piemēri\n\nUzrāda 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nUzrāda 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nUzrāda 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda vienu datuma un laika daļu, piemēram, gadu, mēnesi, dienu, stundu, minūti vai datumu.\n\n**Parametri**\n\n- **part**: Daļa, ko izvilkt no datuma. Iespējamās vērtības: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Datums, jo kura izvilkt daļu.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Skaitliskās funkcijas","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Uzrāda skaitļa absolūto vērtību.","examples":"\n##### Piemērs\n\nUzrāda 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa absolūto vērtību.\n\n**Parametrs**\n\n- **number**: Skaitlis, ar kuru veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Uzrāda skaitļa arkkosinusu.","examples":"\n##### Piemērs\n\nUzrāda 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa arkkosinusu.\n\n**Parametrs**\n\n- **number**: Skaitlis no -1 līdz 1, ar kuru veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Uzrāda skaitļa arksinusu","examples":"\n##### Piemērs\n\nUzrāda 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa arksinusu\n\n**Parametrs**\n\n- **number**: Skaitlis no -1 līdz 1, ar kuru veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Uzrāda skaitļa arktangensu.","examples":"\n##### Piemērs\n\nUzrāda 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa arktangensu.\n\n**Parametrs**\n\n- **number**: Skaitlis, ar kuru veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Konvertē vērtību no viena datu tipa uz citu. Parametrs dataType noteiks, uz kādu tipu tiek konvertēta vērtība. FLOAT konvertē vērtību dubultā, INTEGER pārvērš vērtību veselā skaitlī utt.","examples":"\n##### Piemēri\n\nUzrāda 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nUzrāda '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nUzrāda '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertē vērtību no viena datu tipa uz citu. Parametrs dataType noteiks, uz kādu tipu tiek konvertēta vērtība. FLOAT konvertē vērtību dubultā, INTEGER pārvērš vērtību veselā skaitlī utt.\n\n**Parametri**\n\n- **value**: Vērtība, kuru konvertēt uz citu datu tipu.\n- **dataType**: Datu tips, uz kuru konvertēt vērtību. Iespējamās vērtības: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Uzrādīt vērtību**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Uzrāda mazāko veselo skaitli, kas ir lielāks par vai vienāds ar attiecīgo skaitli.","examples":"\n##### Piemērs\n\nUzrāda 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda mazāko veselo skaitli, kas ir lielāks par vai vienāds ar attiecīgo skaitli.\n\n**Parametrs**\n\n- **number**: Skaitlis, kas jānoapaļo uz augšu.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Uzrāda skaitļa trigonometrisko kosinusu, kas tiek pieņemts par leņķi radiānos.","examples":"\n##### Piemērs\n\nUzrāda -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa trigonometrisko kosinusu, kas tiek pieņemts par leņķi radiānos.\n\n**Parametrs**\n\n- **number**: Leņķis radiānos, kuram veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Uzrāda lielāko veselo skaitli, kas mazāks par vai vienāds ar attiecīgo skaitli.","examples":"\n##### Piemērs\n\nUzrāda 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda lielāko veselo skaitli, kas mazāks par vai vienāds ar attiecīgo skaitli.\n\n**Parametrs**\n\n- **number**: Skaitlis, kas jānoapaļo uz leju.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Uzrāda skaitļa naturālo logaritmu (bāze e).","examples":"\n##### Piemērs\n\nUzrāda 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa naturālo logaritmu (bāze e).\n\n**Parametrs**\n\n- **number**: Skaitlis, kas ir lielāks par 0, kuram veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Uzrāda skaitļa bāzes 10 logaritmu.","examples":"\n##### Piemērs\n\nUzrāda 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa bāzes 10 logaritmu.\n\n**Parametrs**\n\n- **number**: Skaitlis, kuram veikt operāciju, kas ir lielāka par 0.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Uzrāda atlikumu pēc dalāmā dalīšanas ar dalītāju. Gan dalāmajam, gan dalītājam ir jābūt veseliem skaitļiem.","examples":"\n##### Piemērs\n\nUzrāda 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda atlikumu pēc dalāmā dalīšanas ar dalītāju. Gan dalāmajam, gan dalītājam ir jābūt veseliem skaitļiem.\n\n**Parametri**\n\n- **x**: Skaitlis, kas attēlo dalāmo.\n- **y**: Skaitlis, kas attēlo dalītāju.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Uzrāda vērtību NULL, ja izteiksme1 ir vienāda ar izteiksmi2, pretējā gadījumā atgriež parametru expression1. Parametru expression1 un expression2 vērtībām ir jābūt viena tipa vērtībām. Funkcija NULLIF bieži tiek izmantota, lai novērstu kļūdas, kas ir saistītas ar dalīšanu ar nulli, iestatot expression2 uz 0.","examples":"\n##### Piemēri\n\nUzrāda `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nUzrāda 32\n\n```sql\nNULLIF(32, 0)\n```\n\nUzrāda `null` ja POP18 ir vienāds ar 0, pretējā gadījumā uzrāda TOTALPOP/POP18 vērtību.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda vērtību NULL, ja izteiksme1 ir vienāda ar izteiksmi2, pretējā gadījumā atgriež parametru expression1. Parametru expression1 un expression2 vērtībām ir jābūt viena tipa vērtībām. Funkcija NULLIF bieži tiek izmantota, lai novērstu kļūdas, kas ir saistītas ar dalīšanu ar nulli, iestatot expression2 uz 0.\n\n**Parametri**\n\n- **expression1**: Vērtība, kurai veikt darbību.\n- **expression2**: Vērtība, kurai veikt darbību.\n\n**Uzrādīt vērtību**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Uzrāda skaitļa vērtību, kas palielināta līdz norādītajam kāpinātājam.","examples":"\n##### Piemērs\n\nUzrāda 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa vērtību, kas palielināta līdz norādītajam kāpinātājam.\n\n**Parametri**\n\n- **x**: Skaitlis, kuram veikt darbību.\n- **y**: Kāpinātājs, kas norāda, cik reizes skaitlis ir jāreizina ar sevi.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Noapaļo skaitli līdz norādītajam garumam.","examples":"\n##### Piemēri\n\nUzrāda 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nUzrāda 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Noapaļo skaitli līdz norādītajam garumam.\n\n**Parametri**\n\n- **number**: Noapaļojamais skaitlis.\n- **length**: Zīmju skaits aiz komata, līdz kurām jānoapaļo skaitlis. Pozitīvs garums noapaļo skaitli līdz norādītajai decimālzīmei. Negatīvs garums noapaļos pa kreisi no decimālkomatvietas.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Uzrāda dotā skaitļa zīmi. Negatīvs skaitlis uzrādīs -1. Pozitīvs skaitlis uzrādīs -1.","examples":"\n##### Piemēri\n\nUzrāda -1\n\n```sql\nSIGN(-132)\n```\n\nUzrāda 0\n\n```sql\nSIGN(0)\n```\n\nUzrāda 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda dotā skaitļa zīmi. Negatīvs skaitlis uzrādīs -1. Pozitīvs skaitlis uzrādīs -1.\n\n**Parametrs**\n\n- **number**: Skaitlis, ar kuru veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Uzrāda skaitļa trigonometrisko sinusu, kas tiek pieņemts par leņķi radiānos.","examples":"\n##### Piemērs\n\nUzrāda 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa trigonometrisko sinusu, kas tiek pieņemts par leņķi radiānos.\n\n**Parametrs**\n\n- **number**: Leņķis radiānos, kuram veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Uzrāda skaitļa tangensu, kas tiek pieņemts par leņķi radiānos.","examples":"\n##### Piemērs\n\nUzrāda 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda skaitļa tangensu, kas tiek pieņemts par leņķi radiānos.\n\n**Parametrs**\n\n- **number**: Leņķis radiānos, kuram veikt darbību.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Uzrāda saīsinātu skaitli.","examples":"\n##### Piemēri\n\nUzrāda 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nUzrāda 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nUzrāda 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda saīsinātu skaitli.\n\n**Parametri**\n\n- **number**: Skaitlis, kas jāsaīsina.\n- **decimals**: Pozitīva vērtība saīsina skaitli līdz norādītajai zīmei aiz komata. Pozitīva vērtība noapaļos pa kreisi no decimālkomatvietas.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Virknes funkcijas","items":[{"type":"function","name":"char_length","bundle":"string","description":"Uzrāda rakstzīmju skaitu teksta virknē kā veselu skaitli.","examples":"\n##### Piemērs\n\nUzrāda 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda rakstzīmju skaitu teksta virknē kā veselu skaitli.\n\n**Parametrs**\n\n- **string**: Teksta virkne, kuras garums ir jāuzrāda.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Uzrāda pirmo vērtību sarakstā, kas nav `NULL`. Visām funkcijai nodotajām vērtībām jābūt viena tipa vērtībām, izņemot `NULL` vērtības.","examples":"\n##### Piemēri\n\nUzrāda 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nUzrāda -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda pirmo vērtību sarakstā, kas nav `NULL`. Visām funkcijai nodotajām vērtībām jābūt viena tipa vērtībām, izņemot `NULL` vērtības.\n\n**Parametri**\n\n- **value1**: Pirmā vērtība sarakstā.\n- **valueN**: Turpmākā(-s) vērtība(-s) sarakstā.\n\n**Uzrādīt vērtību**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Savirknē divas virknes kopā.","examples":"\n##### Piemērs\n\nUzrāda 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Savirknē divas virknes kopā.\n\n**Parametri**\n\n- **string1**: Pirmā teksta virkne.\n- **string2**: Teksta virkne, kas jāsaīsina līdz pirmajai teksta virknei.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Uzrāda lietotājvārdu tam lietotājam, kas tajā brīdī ir pierakstījies portālā.","examples":"\n##### Piemērs\n\nUzrāda lietotājvārdu tam lietotājam, kas tajā brīdī ir pierakstījies portālā.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda lietotājvārdu tam lietotājam, kas tajā brīdī ir pierakstījies portālā.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Konvertē visas rakstzīmes teksta virknē uz mazajiem burtiem.","examples":"\n##### Piemērs\n\nUzrāda 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertē visas rakstzīmes teksta virknē uz mazajiem burtiem.\n\n**Parametrs**\n\n- **string**: Teksta virkne, kas jākonvertē uz mazajiem burtiem.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Uzrāda apakšvirknes pirmo atkārtojumu citā teksta virknē. Uzrāda 0, ja apakšvirkne nav atrasta.","examples":"\n##### Piemēri\n\nUzrāda 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nUzrāda 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda apakšvirknes pirmo atkārtojumu citā teksta virknē. Uzrāda 0, ja apakšvirkne nav atrasta.\n\n**Parametri**\n\n- **substring**: Meklējamā teksta virkne.\n- **string**: Virkne, kurā tiks meklēta apakšvirkne.\n\n**Uzrādīt vērtību**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Uzrāda rakstzīmju apakškopu teksta virknē no sākuma punkta līdz norādītajam virknes garumam.","examples":"\n##### Piemērs\n\nUzrāda 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda rakstzīmju apakškopu teksta virknē no sākuma punkta līdz norādītajam virknes garumam.\n\n**Parametri**\n\n- **string**: Teksta virkne, no kuras jāizvelk.\n- **start**: Veselā skaitļa vērtība, kas norāda, kur sāksies uzrādītās rakstzīmes.\n- **length**: Izvelkamo rakstzīmju skaits.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Uzrāda rakstzīmju apakškopu teksta virknē no sākuma punkta līdz norādītajam virknes garumam.","examples":"\n##### Piemēri\n\nUzrāda 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nUzrāda 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda rakstzīmju apakškopu teksta virknē no sākuma punkta līdz norādītajam virknes garumam.\n\n**Parametri**\n\n- **string**: Teksta virkne, no kuras jāizvelk.\n- **start**: Veselā skaitļa vērtība, kas norāda, kur sāksies uzrādītās rakstzīmes.\n- **length**: Izvelkamo rakstzīmju skaits.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Uzrāda teksta virkni, kurā ir noņemtas visas ievadošās un/vai noslēdzošās atstarpes vai citas norādītās rakstzīmes. LEADING tiks apgriezīs teksta virknes priekšējo pusi, TRAILING apgriezīs teksta virknes noslēdzošo puse, bet BOTH apgriezīs abas teksta virknes puses.","examples":"\n##### Piemēri\n\nUzrāda 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nUzrāda '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nUzrāda 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Uzrāda teksta virkni, kurā ir noņemtas visas ievadošās un/vai noslēdzošās atstarpes vai citas norādītās rakstzīmes. LEADING tiks apgriezīs teksta virknes priekšējo pusi, TRAILING apgriezīs teksta virknes noslēdzošo puse, bet BOTH apgriezīs abas teksta virknes puses.\n\n**Parametri**\n\n- **side**: Teksta virknes puse, kurā tiks noņemta atstarpe(-as) vai rakstzīme(-es). Iespējamās vērtības: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Rakstzīme(-es), kas tiks izgriezta(-as) no teksta virknes.\n- **string**: Apgriežamā teksta virkne.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Konvertē visas rakstzīmes teksta virknē uz lielajiem burtiem.","examples":"\n##### Piemērs\n\nUzrāda 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Konvertē visas rakstzīmes teksta virknē uz lielajiem burtiem.\n\n**Parametrs**\n\n- **string**: Virkne, kas jākonvertē uz lielajiem burtiem.\n\n**Uzrādīt vērtību**: String"}},"parametersInfo":{"min":1,"max":1}}]}]