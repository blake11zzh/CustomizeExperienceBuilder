[{"id":"date_functions","title":"Kuupäevafunktsioonid","items":[{"type":"function","name":"current_date","bundle":"date","description":"Tagastab praeguse kuupäeva UTC-na.","examples":"\n##### Näide\n\nTagastab praeguse kuupäeva UTC-na.\n\n```sql\nCURRENT_DATE\n```\n\n","completion":{"label":"CURRENT_DATE","detail":"CURRENT_DATE -> Datetime","insertText":"CURRENT_DATE","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab praeguse kuupäeva UTC-na.\n\n**Tagastusväärtus**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_time","bundle":"date","description":"Tagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid) UTC-vormingus.","examples":"\n##### Näide\n\nTagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid) UTC-vormingus.\n\n```sql\nCURRENT_TIME\n```\n\n","completion":{"label":"CURRENT_TIME","detail":"CURRENT_TIME -> Datetime","insertText":"CURRENT_TIME","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid) UTC-vormingus.\n\n**Tagastusväärtus**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"current_timestamp","bundle":"date","description":"Tagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid, millisekundid) UTC-vormingus.","examples":"\n##### Näide\n\nTagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid, millisekundid) UTC-vormingus.\n\n```sql\nCURRENT_TIMESTAMP\n```\n\n","completion":{"label":"CURRENT_TIMESTAMP","detail":"CURRENT_TIMESTAMP -> Datetime","insertText":"CURRENT_TIMESTAMP","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab praeguse kuupäeva ja kellaaja (tunnid, minutid, sekundid, millisekundid) UTC-vormingus.\n\n**Tagastusväärtus**: Datetime"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"extract","bundle":"date","description":"Tagastab kuupäeva/kellaaja ühe osa (nt aasta, kuu, päeva, tunni, minuti või sekundi).","examples":"\n##### Näited\n\nTagastab 12\n\n```sql\nEXTRACT(MONTH FROM DATE '2016-12-21')\n```\n\nTagastab 21\n\n```sql\nEXTRACT(DAY FROM TIMESTAMP '2016-12-21 12:00:00')\n```\n\nTagastab 30\n\n```sql\nEXTRACT(SECOND FROM TIME '10:50:30')\n```\n\n","completion":{"label":"EXTRACT","detail":"EXTRACT(part, datetime) -> Number","insertText":"EXTRACT(${1:part_} FROM ${2:datetime_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab kuupäeva/kellaaja ühe osa (nt aasta, kuu, päeva, tunni, minuti või sekundi).\n\n**Parameetrid**\n\n- **part**: Osa, mis võetakse kuupäevast välja. Võimalikud väärtused: `YEAR`, `MONTH`, `DAY`, `HOUR`, `MINUTE`, `SECOND`.\n- **datetime**: Kuupäev, millest osa välja võetakse.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"numeric_functions","title":"Numbrilised funktsioonid","items":[{"type":"function","name":"abs","bundle":"numeric","description":"Tagastab arvu absoluutväärtuse.","examples":"\n##### Näide\n\nTagastab 2\n\n```sql\nABS(-2)\n```\n\n","completion":{"label":"ABS","detail":"ABS(number) -> Number","insertText":"ABS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu absoluutväärtuse.\n\n**Parameeter**\n\n- **number**: Arv, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"acos","bundle":"numeric","description":"Tagastab arvu arkuskoosinuse.","examples":"\n##### Näide\n\nTagastab 1.26610367\n\n```sql\nACOS(0.3)\n```\n\n","completion":{"label":"ACOS","detail":"ACOS(number) -> Number","insertText":"ACOS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu arkuskoosinuse.\n\n**Parameeter**\n\n- **number**: Arv -1 ja 1 vahel, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"asin","bundle":"numeric","description":"Tagastab arvu arkussiinuse.","examples":"\n##### Näide\n\nTagastab 0.30469265\n\n```sql\nASIN(0.3)\n```\n\n","completion":{"label":"ASIN","detail":"ASIN(number) -> Number","insertText":"ASIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu arkussiinuse.\n\n**Parameeter**\n\n- **number**: Arv -1 ja 1 vahel, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"atan","bundle":"numeric","description":"Tagastab arvu arkustangensi.","examples":"\n##### Näide\n\nTagastab 0.78539816\n\n```sql\nATAN(1)\n```\n\n","completion":{"label":"ATAN","detail":"ATAN(number) -> Number","insertText":"ATAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu arkustangensi.\n\n**Parameeter**\n\n- **number**: Arv, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cast","bundle":"numeric","description":"Teisendab väärtuse ühest andmetüübist teise. Parameeter dataType määrab, milliseks tüübiks väärtus teisendatakse. FLOAT teisendab väärtuse kahekordseks, INTEGER teisendab väärtuse täisarvuks jne.","examples":"\n##### Näited\n\nTagastab 2\n\n```sql\nCAST(2.34 AS INTEGER)\n```\n\nTagastab '1:00 PM'\n\n```sql\nCAST('13:00' AS TIME)\n```\n\nTagastab '50'\n\n```sql\nCAST(50 AS VARCHAR(20))\n```\n\n","completion":{"label":"CAST","detail":"CAST(value, dataType) -> Number,Datetime,String","insertText":"CAST(${1:value_} AS ${2:dataType_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Teisendab väärtuse ühest andmetüübist teise. Parameeter dataType määrab, milliseks tüübiks väärtus teisendatakse. FLOAT teisendab väärtuse kahekordseks, INTEGER teisendab väärtuse täisarvuks jne.\n\n**Parameetrid**\n\n- **value**: Muusse andmetüüpi teisendatav väärtus.\n- **dataType**: Andmetüüp, millesse väärtus teisendada. Võimalikud väärtused: `DATE`, `FLOAT`, `INTEGER`, `REAL`, `SMALLINT`, `TIME`, `TIMESTAMP`, `VARCHAR`.\n\n**Tagastusväärtus**: Number,Datetime,String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"ceiling","bundle":"numeric","description":"Tagastab vähima täisarvu, mis on suurem kui arv või sellega võrdne.","examples":"\n##### Näide\n\nTagastab 235\n\n```sql\nCEILING(234.042)\n```\n\n","completion":{"label":"CEILING","detail":"CEILING(number) -> Number","insertText":"CEILING(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab vähima täisarvu, mis on suurem kui arv või sellega võrdne.\n\n**Parameeter**\n\n- **number**: Ülespoole ümardatav arv.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"cos","bundle":"numeric","description":"Tagastab arvu trigonomeetrilise koosinuse, mis eeldatavasti on nurk radiaanides.","examples":"\n##### Näide\n\nTagastab -0.41614684\n\n```sql\nCOS(2)\n```\n\n","completion":{"label":"COS","detail":"COS(number) -> Number","insertText":"COS(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu trigonomeetrilise koosinuse, mis eeldatavasti on nurk radiaanides.\n\n**Parameeter**\n\n- **number**: Radiaanides nurk, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"floor","bundle":"numeric","description":"Tagastab suurima täisarvu, mis on väiksem kui arv või sellega võrdne.","examples":"\n##### Näide\n\nTagastab 12\n\n```sql\nFLOOR(12.9942)\n```\n\n","completion":{"label":"FLOOR","detail":"FLOOR(number) -> Number","insertText":"FLOOR(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab suurima täisarvu, mis on väiksem kui arv või sellega võrdne.\n\n**Parameeter**\n\n- **number**: Allapoole ümardatav arv.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log","bundle":"numeric","description":"Tagastab arvu naturaallogaritmi (alusel e).","examples":"\n##### Näide\n\nTagastab 2.302585\n\n```sql\nLOG(10)\n```\n\n","completion":{"label":"LOG","detail":"LOG(number) -> Number","insertText":"LOG(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu naturaallogaritmi (alusel e).\n\n**Parameeter**\n\n- **number**: Number, mis on suurem kui 0 ja millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"log10","bundle":"numeric","description":"Tagastab arvu kümnendlogaritmi.","examples":"\n##### Näide\n\nTagastab 0.301030\n\n```sql\nLOG10(2)\n```\n\n","completion":{"label":"LOG10","detail":"LOG10(number) -> Number","insertText":"LOG10(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu kümnendlogaritmi.\n\n**Parameeter**\n\n- **number**: Number, millega tehakse tehe, mis on suurem kui 0.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"mod","bundle":"numeric","description":"Tagastab jäägi pärast jagatava jagamist jagajaga. Jagatav ja jagaja peavad mõlemad olema täisarvud.","examples":"\n##### Näide\n\nTagastab 2\n\n```sql\nMOD(18, 4)\n```\n\n","completion":{"label":"MOD","detail":"MOD(x, y) -> Number","insertText":"MOD(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab jäägi pärast jagatava jagamist jagajaga. Jagatav ja jagaja peavad mõlemad olema täisarvud.\n\n**Parameetrid**\n\n- **x**: Jagatavat tähistav arv.\n- **y**: Jagajat tähistav arv.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"nullif","bundle":"numeric","description":"Tagastab `NULL`, kui avaldis expression1 on võrdne avaldisega expression2, vastasel juhul tagastab avaldise expression1. Avaldiste expression1 ja expression2 väärtused peavad olema sama tüüpi. Funktsiooni NULLIF kasutatakse sageli nulliga jagamise tõrgete vältimiseks, seades avaldise expression2 0-ks.","examples":"\n##### Näited\n\nTagastab `null`\n\n```sql\nNULLIF('Monday', 'Monday')\n```\n\nTagastab 32\n\n```sql\nNULLIF(32, 0)\n```\n\nTagastab `null`, kui POP18 on võrdne 0, vastasel juhul tagastab TOTALPOP / POP18 väärtuse.\n\n```sql\nTOTALPOP / NULLIF(POP18, 0)\n```\n\n","completion":{"label":"NULLIF","detail":"NULLIF(expression1, expression2) -> Number,String,Datetime","insertText":"NULLIF(${1:expression1_}, ${2:expression2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab `NULL`, kui avaldis expression1 on võrdne avaldisega expression2, vastasel juhul tagastab avaldise expression1. Avaldiste expression1 ja expression2 väärtused peavad olema sama tüüpi. Funktsiooni NULLIF kasutatakse sageli nulliga jagamise tõrgete vältimiseks, seades avaldise expression2 0-ks.\n\n**Parameetrid**\n\n- **expression1**: Väärtus, millega tehakse tehe.\n- **expression2**: Väärtus, millega tehakse tehe.\n\n**Tagastusväärtus**: Number,String,Datetime"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"power","bundle":"numeric","description":"Tagastab määratud astmesse tõstetud arvu väärtuse.","examples":"\n##### Näide\n\nTagastab 8\n\n```sql\nPOWER(2, 3)\n```\n\n","completion":{"label":"POWER","detail":"POWER(x, y) -> Number","insertText":"POWER(${1:x_}, ${2:y_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab määratud astmesse tõstetud arvu väärtuse.\n\n**Parameetrid**\n\n- **x**: Arv, millega tehakse tehe.\n- **y**: Astendaja, mis näitab, mitu korda tuleb arvu iseendaga korrutada.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"round","bundle":"numeric","description":"Ümardab arvu määratud järguni.","examples":"\n##### Näited\n\nTagastab 3.98\n\n```sql\nROUND(3.98024, 2)\n```\n\nTagastab 200\n\n```sql\nROUND(192.1, -2)\n```\n\n","completion":{"label":"ROUND","detail":"ROUND(number, length) -> Number","insertText":"ROUND(${1:number_}, ${2:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Ümardab arvu määratud järguni.\n\n**Parameetrid**\n\n- **number**: Ümardatav arv.\n- **length**: Kümnendkohtade arv, milleni arv ümardatakse. Positiivne järk ümardab arvu määratud kümnendkohani. Negatiivne järk ümardab arvu komakohast vasakule.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"sign","bundle":"numeric","description":"Tagastab antud arvu märgi. Negatiivne arv tagastab -1. Positiivne arv tagastab 1.","examples":"\n##### Näited\n\nTagastab -1\n\n```sql\nSIGN(-132)\n```\n\nTagastab 0\n\n```sql\nSIGN(0)\n```\n\nTagastab 1\n\n```sql\nSIGN(42)\n```\n\n","completion":{"label":"SIGN","detail":"SIGN(number) -> Number","insertText":"SIGN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab antud arvu märgi. Negatiivne arv tagastab -1. Positiivne arv tagastab 1.\n\n**Parameeter**\n\n- **number**: Arv, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"sin","bundle":"numeric","description":"Tagastab arvu trigonomeetrilise siinuse, mis eeldatavasti on nurk radiaanides.","examples":"\n##### Näide\n\nTagastab 0.84147098\n\n```sql\nSIN(1)\n```\n\n","completion":{"label":"SIN","detail":"SIN(number) -> Number","insertText":"SIN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu trigonomeetrilise siinuse, mis eeldatavasti on nurk radiaanides.\n\n**Parameeter**\n\n- **number**: Radiaanides nurk, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"tan","bundle":"numeric","description":"Tagastab arvu tangensi, mis eeldatavasti on nurk radiaanides.","examples":"\n##### Näide\n\nTagastab 2.57215162\n\n```sql\nTAN(1.2)\n```\n\n","completion":{"label":"TAN","detail":"TAN(number) -> Number","insertText":"TAN(${1:number_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab arvu tangensi, mis eeldatavasti on nurk radiaanides.\n\n**Parameeter**\n\n- **number**: Radiaanides nurk, millega tehakse tehe.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"truncate","bundle":"numeric","description":"Tagastab kärbitud numbri.","examples":"\n##### Näited\n\nTagastab 91.3\n\n```sql\nTRUNCATE(91.367, 1)\n```\n\nTagastab 124\n\n```sql\nTRUNCATE(124.45, 0)\n```\n\nTagastab 1900\n\n```sql\nTRUNCATE(1982.83, -2)\n```\n\n","completion":{"label":"TRUNCATE","detail":"TRUNCATE(number, decimals) -> Number","insertText":"TRUNCATE(${1:number_}, ${2:decimals_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab kärbitud numbri.\n\n**Parameetrid**\n\n- **number**: Kärbitav arv.\n- **decimals**: Positiivne väärtus kärbib arvu määratud komakohani. Negatiivne väärtus kärbib arvu komakohast vasakule.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}}]},{"id":"string_functions","title":"Stringi funktsioonid","items":[{"type":"function","name":"char_length","bundle":"string","description":"Tagastab teksti stringi tähemärkide arvu täisarvuna.","examples":"\n##### Näide\n\nTagastab 11\n\n```sql\nCHAR_LENGTH('Nova Scotia')\n```\n\n","completion":{"label":"CHAR_LENGTH","detail":"CHAR_LENGTH(string) -> Number","insertText":"CHAR_LENGTH(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab teksti stringi tähemärkide arvu täisarvuna.\n\n**Parameeter**\n\n- **string**: Tekstistring, mille pikkus tagastatakse.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"coalesce","bundle":"string","description":"Tagastab loendi esimese väärtuse, mis ei ole `NULL`. Kõik funktsiooni sisestatud väärtused peavad olema sama tüüpi, välja arvatud `NULL` väärtused.","examples":"\n##### Näited\n\nTagastab 'Green goldfish'\n\n```sql\nCOALESCE(null, null, 'Green goldfish', null, 'Purple cow')\n```\n\nTagastab -21\n\n```sql\nCOALESCE(null, -21, 33, null)\n```\n\n","completion":{"label":"COALESCE","detail":"COALESCE(value1, valueN) -> String,Number,Datetime","insertText":"COALESCE(${1:value1_}, ${2:valueN_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab loendi esimese väärtuse, mis ei ole `NULL`. Kõik funktsiooni sisestatud väärtused peavad olema sama tüüpi, välja arvatud `NULL` väärtused.\n\n**Parameetrid**\n\n- **value1**: Esimene väärtus loendis.\n- **valueN**: Loendi järgmine väärtus (järgmised väärtused).\n\n**Tagastusväärtus**: String,Number,Datetime"}},"parametersInfo":{"min":2,"max":-1}},{"type":"function","name":"concat","bundle":"string","description":"Ühendab kaks stringi.","examples":"\n##### Näide\n\nTagastab 'Maple syrup'\n\n```sql\nCONCAT('Maple ', 'syrup')\n```\n\n","completion":{"label":"CONCAT","detail":"CONCAT(string1, string2) -> String","insertText":"CONCAT(${1:string1_}, ${2:string2_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Ühendab kaks stringi.\n\n**Parameetrid**\n\n- **string1**: Esimene tekstistring.\n- **string2**: Esimese tekstistringiga ühendatav tekstistring.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":2,"max":2}},{"type":"function","name":"current_user","bundle":"string","description":"Tagastab hetkel portaali sisselogitud kasutaja kasutajanime.","examples":"\n##### Näide\n\nTagastab hetkel portaali sisselogitud kasutaja kasutajanime.\n\n```sql\nCURRENT_USER\n```\n\n","completion":{"label":"CURRENT_USER","detail":"CURRENT_USER -> String","insertText":"CURRENT_USER","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab hetkel portaali sisselogitud kasutaja kasutajanime.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":0,"max":0}},{"type":"function","name":"lower","bundle":"string","description":"Muudab kõik tekstistringi märgid väiketäheliseks.","examples":"\n##### Näide\n\nTagastab 'hello world'\n\n```sql\nLOWER('HELLO WORLD')\n```\n\n","completion":{"label":"LOWER","detail":"LOWER(string) -> String","insertText":"LOWER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Muudab kõik tekstistringi märgid väiketäheliseks.\n\n**Parameeter**\n\n- **string**: Väiketäheliseks muudetav tekstistring.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":1,"max":1}},{"type":"function","name":"position","bundle":"string","description":"Tagastab tekstistringis esimest korda esineva alamstringi. Tagastab 0, kui alamstringi ei leita.","examples":"\n##### Näited\n\nTagastab 6\n\n```sql\nPOSITION('com' IN 'esri.com')\n```\n\nTagastab 9\n\n```sql\nPOSITION('sum' IN 'Lorem ipsum')\n```\n\n","completion":{"label":"POSITION","detail":"POSITION(substring, string) -> Number","insertText":"POSITION(${1:substring_} IN ${2:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab tekstistringis esimest korda esineva alamstringi. Tagastab 0, kui alamstringi ei leita.\n\n**Parameetrid**\n\n- **substring**: Tekstistring, mida otsitakse.\n- **string**: String, mida otsitakse alamstringi jaoks.\n\n**Tagastusväärtus**: Number"}},"parametersInfo":{"min":2,"max":2}},[{"type":"function","name":"substring","bundle":"string","description":"Tagastab tekstistringi märgid alates määratud alguspunktist määratud stringi pikkuses.","examples":"\n##### Näide\n\nTagastab 'City'\n\n```sql\nSUBSTRING('New York City', 10, 4)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_}, ${2:start_}, ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab tekstistringi märgid alates määratud alguspunktist määratud stringi pikkuses.\n\n**Parameetrid**\n\n- **string**: Tekstistring, millest väljavõtmine toimub.\n- **start**: Täisarvuline väärtus, mis määrab, kust tagastatavad tähemärgid algavad.\n- **length**: Ekstraktitavate märkide arv.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"substring","bundle":"string","description":"Tagastab tekstistringi märgid alates määratud alguspunktist määratud stringi pikkuses.","examples":"\n##### Näited\n\nTagastab 'City'\n\n```sql\nSUBSTRING('New York City' FROM 10 FOR 4)\n```\n\nTagastab 'New York'\n\n```sql\nSUBSTRING('New York City' FROM 1 FOR 8)\n```\n\n","completion":{"label":"SUBSTRING","detail":"SUBSTRING(string, start, length) -> String","insertText":"SUBSTRING(${1:string_} FROM ${2:start_} FOR ${3:length_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab tekstistringi märgid alates määratud alguspunktist määratud stringi pikkuses.\n\n**Parameetrid**\n\n- **string**: Tekstistring, millest väljavõtmine toimub.\n- **start**: Täisarvuline väärtus, mis määrab, kust tagastatavad tähemärgid algavad.\n- **length**: Ekstraktitavate märkide arv.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":3,"max":3}}],{"type":"function","name":"trim","bundle":"string","description":"Tagastab tekstistringi, millest on eemaldatud kõik eelnevad ja/või järgnevad tühikud või muud määratud tähemärgid. LEADING kärbib tekstijada esimest poolt, TRAILING kärbib tekstijada tagumist poolt, samas kui BOTH kärbib tekstijada mõlemat poolt.","examples":"\n##### Näited\n\nTagastab 'myFunc'\n\n```sql\nTRIM(LEADING 't' FROM 'tMyFunc')\n```\n\nTagastab '  hello world'\n\n```sql\nTRIM(TRAILING ' ' FROM '  hello world   ')\n```\n\nTagastab 'hello world'\n\n```sql\nTRIM(BOTH ' ' FROM '  hello world  ')\n```\n\n","completion":{"label":"TRIM","detail":"TRIM(side, character, string) -> String","insertText":"TRIM(${1:side_} ${2:character_} FROM ${3:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Tagastab tekstistringi, millest on eemaldatud kõik eelnevad ja/või järgnevad tühikud või muud määratud tähemärgid. LEADING kärbib tekstijada esimest poolt, TRAILING kärbib tekstijada tagumist poolt, samas kui BOTH kärbib tekstijada mõlemat poolt.\n\n**Parameetrid**\n\n- **side**: Tekstistringi pool, kust tühik(ud) või märk(märgid) eemaldatakse. Võimalikud väärtused: `LEADING`, `TRAILING`, `BOTH`.\n- **character**: Märk (märgid), mis kärbitakse tekstistringist.\n- **string**: Kärbitav tekstistring.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":3,"max":3}},{"type":"function","name":"upper","bundle":"string","description":"Muudab kõik tekstistringi märgid suurtäheliseks.","examples":"\n##### Näide\n\nTagastab 'QUICK RED FOX'\n\n```sql\nUPPER('quick red fox')\n```\n\n","completion":{"label":"UPPER","detail":"UPPER(string) -> String","insertText":"UPPER(${1:string_})$0","insertTextMode":2,"insertTextFormat":2,"kind":3,"documentation":{"kind":"markdown","value":"Muudab kõik tekstistringi märgid suurtäheliseks.\n\n**Parameeter**\n\n- **string**: Suurtäheliseks muudetav string.\n\n**Tagastusväärtus**: String"}},"parametersInfo":{"min":1,"max":1}}]}]