/// <reference types="@arcgis/core/interfaces.d.ts" />
import { FeatureDefinition, FeatureSetCollectionDefinition, FeatureSetDefinition } from './types';
import type * as types from "./types";
export declare function isFeatureLayerLikeInstance(item: unknown): item is types.IFeatureLayerLikeInstance;
export declare function isGroupLayerCapable(item: unknown): item is types.IGroupLayerCapable;
export declare function isMapInstance(item: unknown): item is __esri.Map;
export declare function isLoadAllCapable(item: unknown): item is types.ILoadAllCapable;
export declare function isPortalItemDefinition(item: unknown): item is types.IPortalItemDefinition;
export declare function isFeatureLayerItemDefinition(item: unknown): item is types.IFeatureLayerItemDefinition;
export declare function isFieldsDefinition(item: unknown): item is types.IFieldsDefinition;
export declare function isUrlDefinition(item: unknown): item is types.IUrlDefinition;
export declare function isSupportedServiceUrlDefinition(item: unknown): item is types.IUrlDefinition;
export declare function isFeatureDefinition(item: unknown): item is FeatureDefinition;
export declare function isFeatureSetDefinition(item: unknown): item is FeatureSetDefinition;
export declare function isFeatureSetCollectionDefinition(item: unknown): item is FeatureSetCollectionDefinition;
export declare function isSubtypeInstance(item: unknown): item is __esri.Subtype;
export declare function isCodedValueDomainInstance(item: unknown): item is __esri.CodedValueDomain;
export declare function isInheritedDomainInstance(item: unknown): item is __esri.InheritedDomain;
export declare function isPredefinedProfile(item: unknown): item is types.IPredefinedProfile;
export declare function isTitleCapableSource(item: unknown): item is types.ITitleCapableSource;
export declare function isUrlCapableSource(item: unknown): item is types.IUrlCapableSource;
export declare function isLayerIdCapableSource(item: unknown): item is types.ILayerIdCapableSource;
export declare function isFeatureTypesCapableLayer(item: unknown): item is types.IFeatureTypesCapableSource;
export declare function isDomainsCapableLayer(item: unknown): item is types.IDomainsCapableSource;
export declare function isSubtypeFieldCapableLayer(item: unknown): item is types.ISubtypeFieldCapableSource;
export declare function isSubtypesCapableLayer(item: unknown): item is types.ISubtypesCapableSource;
export declare function isPortalItemCapable(item: unknown): item is types.IPortalItemCapable;
export declare function isRelationshipsCapableLayer(item: unknown): item is types.IRelationshipsCapableSource;
export declare function isTableCapableLayer(item: unknown): item is types.ITableCapableSource;
export declare function isLoadableSource(item: unknown): item is types.ILoadableSource;
export declare function supportedSourceFromDefinition(definition: types.FeatureDefinition | types.FeatureSetDefinition | null | undefined): Promise<types.SupportedSource | null>;
export declare function serviceMetaData(url: string): Promise<{
    layers: types.LayerInfo[];
    tables: types.LayerInfo[];
}>;
