export declare enum ValidationDiagnosticCodes {
    ExpectedDateTimeValue = "ExpectedDateTimeValue",
    ExpectedNumericalLiteral = "ExpectedNumericalLiteral",
    ExpectedToken = "ExpectedToken",
    FunctionNotSupported = "FunctionNotSupported",
    IncompatibleListDataType = "IncompatibleListDataType",
    IncorrectArgumentLength = "IncorrectArgumentLength",
    IncorrectCastParameters = "IncorrectCastParameters",
    InvalidDateArithmetic = "InvalidDateArithmetic",
    IncorrectExtractParameters = "IncorrectExtractParameters",
    IncorrectSubstringParameters = "IncorrectSubstringParameters",
    IncorrectTrimParameters = "IncorrectTrimParameters",
    InvalidElseClause = "InvalidElseClause",
    InvalidThenClause = "InvalidThenClause",
    InvalidEndOnWhen = "InvalidEndOnWhen",
    InvalidTrimCharacter = "InvalidTrimCharacter",
    MismatchedTypes = "MismatchedTypes",
    MissingValueInCaseClause = "MissingValueInCaseClause",
    NotCallable = "NotCallable",
    TypeNotAssignable = "TypeNotAssignable",
    UnexpectedEnd = "UnexpectedEnd.",
    UnexpectedIdentifier = "UnexpectedIdentifier",
    UnexpectedNumber = "UnexpectedNumber",
    UnexpectedTextLiteral = "UnexpectedTextLiteral",
    UnexpectedToken = "UnexpectedToken",
    UnknownField = "UnknownField",
    UnsupportedOperator = "UnsupportedOperator",
    UnsupportedSyntax = "UnsupportedSyntax",
    InvalidIntervalQualifier = "InvalidIntervalQualifier",
    EmptyCaseExpression = "EmptyCaseExpression"
}
export declare const DiagnosticMessages: Record<ValidationDiagnosticCodes, string>;
export declare const getDiagnosticMessage: (diagnosticCode: ValidationDiagnosticCodes, replacements?: Record<string, number | string>) => string;
