import { Uri, editor as Editor } from 'monaco-editor';
import { ISqlExprWorker } from './types';
import { SqlExprDefaults } from './sql-expr-defaults';
/**
 * Manager to create our sql-expression worker and client proxy
 */
export declare class SqlExprWorkerManager {
    private _defaults;
    private _worker;
    private _client;
    private _configChangeListener;
    constructor(_defaults: SqlExprDefaults);
    dispose(): void;
    stopWorker(): void;
    /**
     * Wait for the worker to be ready.
     * @returns A promise that resolves when the worker is ready.
     */
    static waitForWorker(): Promise<Editor.MonacoWebWorker<ISqlExprWorker>>;
    private _getClientProxy;
    getLanguageServiceWorker(...resources: Uri[]): Promise<ISqlExprWorker>;
}
