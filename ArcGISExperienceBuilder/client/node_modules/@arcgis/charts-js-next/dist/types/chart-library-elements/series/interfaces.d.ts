import type { Root } from "@amcharts/amcharts5";
import type { Axis, AxisRenderer, ColumnSeries, LineSeries } from "@amcharts/amcharts5/xy";
import type { RadarLineSeries } from "@amcharts/amcharts5/radar";
import type { ChartOptions } from "@arcgis/charts-js-common";
import type { RESTRendererType, WebChart, WebChartBarChartSeries, WebChartDataTypes, WebChartLineChartSeries, WebChartRadarChartSeries, WebChartScatterPlotSeries, IField, WebChartPieChartSeries, WebChartHistogramSeries, WebChartBoxPlotSeries, WebBoxPlot, WebRadarChart } from "@arcgis/charts-spec";
import type { ChartSubType, CommonStrings, QueryObject, SeriesSymbolsMap, SubtypeInfo } from "@arcgis/charts-shared-utils";
import type { UpdateBarChartSeriesStyleProps } from "./bar-chart/interfaces";
import type { UpdateScatterPlotMarkersStyleProps, UpdateTrendLineProps } from "./scatter-plot/interfaces";
import type { UpdateRadarChartSeriesProps } from "./radar-chart/interfaces";
import type { UpdateLineChartSeriesProps } from "./line-chart/interfaces";
import type { ApplySelectionOnSeriesProps } from "../../selection/apply/interfaces";
import type { UpdatePieChartSeriesProps } from "./pie-chart/interfaces";
import type { UpdateHistogramSeriesProps } from "./histogram/interfaces";
import type { UpdateBoxPlotCandleStickSeriesProps } from "./box-plot/candle-stick/interfaces";
import type { UpdateBoxPlotOutlierSeriesProps } from "./box-plot/outlier/interfaces";
import type { UpdateBoxPlotStepLineSeriesProps } from "./box-plot/step-line/interfaces";
import type { UpdateBoxPlotMeanLineSeriesProps } from "./box-plot/mean-line/interfaces";
export interface InitializeSeriesProps<SeriesType extends WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartHistogramSeries | WebChartLineChartSeries | WebChartPieChartSeries | WebChartRadarChartSeries | WebChartScatterPlotSeries> {
    chartConfig: WebChart;
    root: Root;
    options?: ChartOptions;
    seriesConfig: SeriesType;
    commonStrings: CommonStrings;
}
export interface InitializeXYSeriesProps<SeriesType extends WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartHistogramSeries | WebChartLineChartSeries | WebChartRadarChartSeries | WebChartScatterPlotSeries> extends InitializeSeriesProps<SeriesType> {
    xAxis: Axis<AxisRenderer>;
    yAxis: Axis<AxisRenderer>;
}
export interface UpdateSeriesProps<DataTypes extends WebChartDataTypes, ConfigType extends WebBoxPlot | WebChart | WebRadarChart> {
    root: Root;
    chartConfig: ConfigType;
    colorMatch: boolean;
    data?: DataTypes;
    options?: ChartOptions;
    queryObject?: QueryObject;
    dataWasUpdated?: boolean;
    dataLabelFormatter?: ChartOptions["dataLabelFormatter"];
    seriesWereReinitialized?: boolean;
    rotationChanged?: boolean;
    sortChanged?: boolean;
    subtypeInfo?: SubtypeInfo;
    rendererType?: RESTRendererType;
    fieldList?: IField[];
    chartSubType: ChartSubType;
    commonStrings: CommonStrings;
}
export interface UpdateXYSeriesProps<DataTypes extends WebChartDataTypes, SeriesConfig extends WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartHistogramSeries | WebChartLineChartSeries | WebChartRadarChartSeries | WebChartScatterPlotSeries, SeriesType extends ColumnSeries | LineSeries | RadarLineSeries, ConfigType extends WebBoxPlot | WebChart | WebRadarChart> extends UpdateSeriesProps<DataTypes, ConfigType> {
    seriesConfig: SeriesConfig;
    series: SeriesType;
    seriesIndex: number;
    numberOfSeries: number;
    seriesIndexMapper?: Map<string, number>;
    seriesSymbolMapForEvent: SeriesSymbolsMap;
    timeZoneChanged?: boolean;
}
export interface UpdateSeriesStyleProps<SeriesType extends ColumnSeries | LineSeries | RadarLineSeries, SeriesConfigType extends UpdateLineChartSeriesProps | WebChartBarChartSeries | WebChartLineChartSeries | WebChartRadarChartSeries> {
    series: SeriesType;
    seriesConfig: SeriesConfigType;
    seriesIndex: number;
    colorMatch: boolean;
    seriesIndexMapper?: Map<string, number>;
    seriesSymbolMapForEvent: SeriesSymbolsMap;
    rendererType?: RESTRendererType;
}
export type StyleCallbackProps = UpdateBarChartSeriesStyleProps | UpdateBoxPlotCandleStickSeriesProps | UpdateBoxPlotMeanLineSeriesProps | UpdateBoxPlotOutlierSeriesProps | UpdateBoxPlotStepLineSeriesProps | UpdateHistogramSeriesProps | UpdateLineChartSeriesProps | UpdatePieChartSeriesProps | UpdateRadarChartSeriesProps | UpdateScatterPlotMarkersStyleProps | UpdateTrendLineProps;
export type StyleOrSelectionCallback = {
    type: "style";
    styleCallback: (props: StyleCallbackProps) => Promise<void> | void;
    callbackProps: StyleCallbackProps;
} | {
    type: "selection";
    callbackProps: ApplySelectionOnSeriesProps;
};
