{"version":3,"file":"useResizeDetector.js","sources":["../src/useResizeDetector.ts"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from 'react';\nimport type { DebouncedFunc } from 'lodash';\n\nimport { getDimensions, patchResizeCallback, useCallbackRef, useRefProxy } from './utils';\n\nimport type { Dimensions, UseResizeDetectorReturn, useResizeDetectorProps } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useResizeDetector<T extends HTMLElement = any>({\n  skipOnMount = false,\n  refreshMode,\n  refreshRate = 1000,\n  refreshOptions,\n  handleWidth = true,\n  handleHeight = true,\n  targetRef,\n  observerOptions,\n  onResize\n}: useResizeDetectorProps<T> = {}): UseResizeDetectorReturn<T> {\n  // If `skipOnMount` is enabled, skip the first resize event\n  const skipResize = useRef<boolean>(skipOnMount);\n\n  // Wrap the `onResize` callback with a ref to avoid re-renders\n  const onResizeRef = useCallbackRef(onResize);\n\n  const [size, setSize] = useState<Dimensions>({\n    width: undefined,\n    height: undefined\n  });\n\n  // Create a proxy ref to handle conditional rendering and dynamic ref changes of the target element\n  const { refProxy, refElement } = useRefProxy<T>(targetRef);\n\n  const { box } = observerOptions || {};\n\n  const resizeCallback: ResizeObserverCallback = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      if (!handleWidth && !handleHeight) return;\n\n      if (skipResize.current) {\n        skipResize.current = false;\n        return;\n      }\n\n      // Only update the size if one of the observed dimensions has changed\n      const shouldSetSize = (prevSize: Dimensions, nextSize: Dimensions) =>\n        (handleWidth && prevSize.width !== nextSize.width) || (handleHeight && prevSize.height !== nextSize.height);\n\n      entries.forEach(entry => {\n        const dimensions = getDimensions(entry, box);\n        setSize(prevSize => {\n          if (!shouldSetSize(prevSize, dimensions)) return prevSize;\n          onResizeRef?.({\n            width: dimensions.width,\n            height: dimensions.height,\n            entry\n          });\n          return dimensions;\n        });\n      });\n    },\n    [handleWidth, handleHeight, skipResize, box]\n  );\n\n  // Throttle/Debounce the resize event if refreshMode is configured\n  const resizeHandler = useCallback(patchResizeCallback(resizeCallback, refreshMode, refreshRate, refreshOptions), [\n    resizeCallback,\n    refreshMode,\n    refreshRate,\n    refreshOptions\n  ]);\n\n  // Attach ResizeObserver to the element\n  useEffect(() => {\n    let resizeObserver: ResizeObserver | undefined;\n    if (refElement) {\n      resizeObserver = new window.ResizeObserver(resizeHandler);\n      resizeObserver.observe(refElement, observerOptions);\n    }\n    // If refElement is not available, reset the size\n    else if (size.width || size.height) {\n      onResizeRef?.({\n        width: null,\n        height: null,\n        entry: null\n      });\n      setSize({ width: undefined, height: undefined });\n    }\n\n    // Disconnect the ResizeObserver when the component is unmounted\n    return () => {\n      resizeObserver?.disconnect?.();\n      (resizeHandler as DebouncedFunc<ResizeObserverCallback>).cancel?.();\n    };\n  }, [resizeHandler, refElement]);\n\n  return { ref: refProxy, ...size };\n}\n\nexport default useResizeDetector;\n"],"names":[],"mappings":"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"}